{
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\server\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _curent = _interopRequireDefault(require(\"../app/psychics/curent.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar WebSocket = require('ws');\n\nvar path = require('path');\n\nvar config = require('config');\n\nvar StateMachine = require('javascript-state-machine');\n\nvar port = config.get('server.port');\nvar portWs = config.get('server.portWs');\n// экстрасенсы\nvar ms = {\n  // сообщения\n  error: {\n    wrongFormat: {\n      error: 'не верный формат. json ожидается'\n    },\n    onInvalidTransition: function onInvalidTransition(transition, from, to) {\n      return {\n        error: \"\".concat(transition, \" not allowed \").concat(from, \" \").concat(to, \" state\")\n      };\n    },\n    wrongNumber: {\n      error: 'число должно быть 2х значное'\n    }\n  }\n}; // openning a websocket server\n\nvar wss = new WebSocket.Server({\n  port: portWs\n});\n\nvar broadcast = function broadcast(data) {\n  wss.clients.forEach(function each(client) {\n    if (client.readyState === WebSocket.OPEN) {\n      client.send(JSON.stringify(data));\n    }\n  });\n};\n\nwss.on('connection', function (ws) {\n  var wsJsonSend = function wsJsonSend(data) {\n    var jsonData = JSON.stringify(data);\n    ws.send(jsonData);\n  };\n\n  var guesses = [];\n  var fsm = new StateMachine({\n    /*\n    beginning - отправляем рейтинг, ждем запроса догадок\n    guess - догадки отправлены, ждем правильный ответ\n    */\n    init: 'begin',\n    transitions: [{\n      name: 'toGuess',\n      from: 'begin',\n      to: 'guess'\n    }, {\n      name: 'toBegin',\n      from: 'guess',\n      to: 'begin'\n    }],\n    methods: {\n      onBegin: function onBegin() {\n        wsJsonSend({\n          'psychics': _curent[\"default\"].valueOf(),\n          state: this.state\n        });\n      },\n      onGuess: function onGuess() {\n        guesses = _curent[\"default\"].guesses();\n        wsJsonSend({\n          'guesses': guesses,\n          state: this.state\n        });\n      },\n      onInvalidTransition: function onInvalidTransition(transition, from, to) {\n        wsJsonSend(ms.error.onInvalidTransition(transition, from, to));\n      }\n    }\n  });\n  ws.on('message', function (message) {\n    var msg = {};\n\n    try {\n      msg = JSON.parse(message);\n    } catch (e) {\n      wsJsonSend(ms.error.wrongFormat);\n      return;\n    }\n\n    if (msg.step === 'toGuess') {\n      fsm.toGuess();\n    }\n\n    if (msg.answer !== undefined) {\n      if (msg.answer >= 10 && msg.answer < 100) {\n        _curent[\"default\"].recalcRating(msg.answer, guesses);\n\n        broadcast({\n          'psychics': _curent[\"default\"].valueOf()\n        });\n        fsm.toBegin();\n      } else {\n        wsJsonSend(ms.error.wrongNumber);\n      }\n    } // console.log(message, wss.clients);\n    // wss.clients.forEach((client) => {\n    //     client.send(message);\n    // })\n\n  });\n});\nvar app = express();\napp.listen(port, function () {\n  console.log(\"Server was started on '\".concat(port, \"'\"));\n});\napp.set('view engine', 'pug');\napp.set('views', path.resolve(__dirname, '../views'));\napp.use(express[\"static\"](path.resolve(__dirname, '../assets')));\napp.get('/', function (req, res) {\n  // console.log(new Psychic('name', 0));\n  res.render('index');\n}); // const config = require('config');\n// const express = require('express');\n// let app = express();\n// let expressWs = require('express-ws')(app);\n//\n// app.set('view engine', 'pug');\n//\n// app.ws('/', (ws, req, next) => {\n//     ws.on('message', function (msg) {\n//         console.log('msg:', msg)\n//     })\n// });\n// const port = config.get('port');\n// app.listen(port, () => {\n//     console.log(`Server was started on '${port}'`);\n// });\n// const Express = require('express');\n// const expressWs = require('express-ws');\n//\n// const app = new Express();\n// expressWs(app);\n// app.set('view engine', 'pug');\n//\n// // app.get('/', function (req, res) {\n// //     res.render('index', {})\n// // });\n//\n// app.ws('/', function(ws, req, next) {\n//     ws.on('message', function(msg) {\n//         console.log('msg:', msg)\n//     })\n// });\n//\n// app().listen(config.get('port'), () => {\n//     // eslint-disable-next-line\n//     console.log(`Server was started on '${port}'`);\n// });\n//\n// // export default app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "WebSocket",
        "path",
        "config",
        "StateMachine",
        "port",
        "get",
        "portWs",
        "ms",
        "error",
        "wrongFormat",
        "onInvalidTransition",
        "transition",
        "from",
        "to",
        "wrongNumber",
        "wss",
        "Server",
        "broadcast",
        "data",
        "clients",
        "forEach",
        "each",
        "client",
        "readyState",
        "OPEN",
        "send",
        "JSON",
        "stringify",
        "on",
        "ws",
        "wsJsonSend",
        "jsonData",
        "guesses",
        "fsm",
        "init",
        "transitions",
        "name",
        "methods",
        "onBegin",
        "psychics",
        "valueOf",
        "state",
        "onGuess",
        "message",
        "msg",
        "parse",
        "e",
        "step",
        "toGuess",
        "answer",
        "undefined",
        "recalcRating",
        "toBegin",
        "app",
        "listen",
        "console",
        "log",
        "set",
        "resolve",
        "__dirname",
        "use",
        "req",
        "res",
        "render"
      ],
      "mappings": ";;AAWA;;;;AAXA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,IAAD,CAAzB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMI,YAAY,GAAGJ,OAAO,CAAC,0BAAD,CAA5B;;AAGA,IAAMK,IAAI,GAAGF,MAAM,CAACG,GAAP,CAAW,aAAX,CAAb;AACA,IAAMC,MAAM,GAAGJ,MAAM,CAACG,GAAP,CAAW,eAAX,CAAf;AAGkD;AAElD,IAAME,EAAE,GAAG;AAAE;AACTC,EAAAA,KAAK,EAAE;AACHC,IAAAA,WAAW,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KADV;AAEHE,IAAAA,mBAAmB,EAAE,6BAACC,UAAD,EAAaC,IAAb,EAAmBC,EAAnB;AAAA,aAChB;AAAEL,QAAAA,KAAK,YAAKG,UAAL,0BAA+BC,IAA/B,cAAuCC,EAAvC;AAAP,OADgB;AAAA,KAFlB;AAIHC,IAAAA,WAAW,EAAE;AAAEN,MAAAA,KAAK,EAAE;AAAT;AAJV;AADA,CAAX,C,CASA;;AACA,IAAMO,GAAG,GAAG,IAAIf,SAAS,CAACgB,MAAd,CAAqB;AAAEZ,EAAAA,IAAI,EAAEE;AAAR,CAArB,CAAZ;;AACA,IAAMW,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAU;AACxBH,EAAAA,GAAG,CAACI,OAAJ,CAAYC,OAAZ,CAAoB,SAASC,IAAT,CAAcC,MAAd,EAAsB;AACtC,QAAIA,MAAM,CAACC,UAAP,KAAsBvB,SAAS,CAACwB,IAApC,EAA0C;AACtCF,MAAAA,MAAM,CAACG,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAAZ;AACH;AACJ,GAJD;AAKH,CAND;;AAOAH,GAAG,CAACa,EAAJ,CAAO,YAAP,EAAqB,UAACC,EAAD,EAAQ;AACzB,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACZ,IAAD,EAAU;AACzB,QAAMa,QAAQ,GAAGL,IAAI,CAACC,SAAL,CAAeT,IAAf,CAAjB;AACAW,IAAAA,EAAE,CAACJ,IAAH,CAAQM,QAAR;AACH,GAHD;;AAIA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAMC,GAAG,GAAG,IAAI9B,YAAJ,CAAiB;AACzB;;;;AAIA+B,IAAAA,IAAI,EAAE,OALmB;AAMzBC,IAAAA,WAAW,EAAE,CACT;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBxB,MAAAA,IAAI,EAAE,OAAzB;AAAkCC,MAAAA,EAAE,EAAE;AAAtC,KADS,EAET;AAAEuB,MAAAA,IAAI,EAAE,SAAR;AAAmBxB,MAAAA,IAAI,EAAE,OAAzB;AAAkCC,MAAAA,EAAE,EAAE;AAAtC,KAFS,CANY;AAUzBwB,IAAAA,OAAO,EAAE;AACLC,MAAAA,OAAO,EAAE,mBAAY;AACjBR,QAAAA,UAAU,CAAC;AACP,sBAAYS,mBAASC,OAAT,EADL;AAEPC,UAAAA,KAAK,EAAE,KAAKA;AAFL,SAAD,CAAV;AAIH,OANI;AAOLC,MAAAA,OAAO,EAAE,mBAAY;AACjBV,QAAAA,OAAO,GAAGO,mBAASP,OAAT,EAAV;AACAF,QAAAA,UAAU,CAAC;AACP,qBAAWE,OADJ;AAEPS,UAAAA,KAAK,EAAE,KAAKA;AAFL,SAAD,CAAV;AAIH,OAbI;AAcL/B,MAAAA,mBAAmB,EAAE,6BAACC,UAAD,EAAaC,IAAb,EAAmBC,EAAnB,EAA0B;AAC3CiB,QAAAA,UAAU,CAACvB,EAAE,CAACC,KAAH,CAASE,mBAAT,CAA6BC,UAA7B,EAAyCC,IAAzC,EAA+CC,EAA/C,CAAD,CAAV;AACH;AAhBI;AAVgB,GAAjB,CAAZ;AA8BAgB,EAAAA,EAAE,CAACD,EAAH,CAAM,SAAN,EAAiB,UAACe,OAAD,EAAa;AAC1B,QAAIC,GAAG,GAAG,EAAV;;AACA,QAAI;AACAA,MAAAA,GAAG,GAAGlB,IAAI,CAACmB,KAAL,CAAWF,OAAX,CAAN;AACH,KAFD,CAEE,OAAOG,CAAP,EAAU;AACRhB,MAAAA,UAAU,CAACvB,EAAE,CAACC,KAAH,CAASC,WAAV,CAAV;AACA;AACH;;AAED,QAAImC,GAAG,CAACG,IAAJ,KAAa,SAAjB,EAA4B;AACxBd,MAAAA,GAAG,CAACe,OAAJ;AACH;;AACD,QAAIJ,GAAG,CAACK,MAAJ,KAAeC,SAAnB,EAA8B;AAC1B,UAAIN,GAAG,CAACK,MAAJ,IAAc,EAAd,IAAoBL,GAAG,CAACK,MAAJ,GAAa,GAArC,EAA0C;AACtCV,2BAASY,YAAT,CAAsBP,GAAG,CAACK,MAA1B,EAAkCjB,OAAlC;;AACAf,QAAAA,SAAS,CAAC;AAAE,sBAAYsB,mBAASC,OAAT;AAAd,SAAD,CAAT;AACAP,QAAAA,GAAG,CAACmB,OAAJ;AACH,OAJD,MAIO;AACHtB,QAAAA,UAAU,CAACvB,EAAE,CAACC,KAAH,CAASM,WAAV,CAAV;AACH;AACJ,KApByB,CAqB1B;AAGA;AACA;AACA;;AACH,GA3BD;AA4BH,CAhED;AAkEA,IAAMuC,GAAG,GAAGvD,OAAO,EAAnB;AACAuD,GAAG,CAACC,MAAJ,CAAWlD,IAAX,EAAiB,YAAY;AACzBmD,EAAAA,OAAO,CAACC,GAAR,kCAAsCpD,IAAtC;AACH,CAFD;AAIAiD,GAAG,CAACI,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAJ,GAAG,CAACI,GAAJ,CAAQ,OAAR,EAAiBxD,IAAI,CAACyD,OAAL,CAAaC,SAAb,EAAwB,UAAxB,CAAjB;AACAN,GAAG,CAACO,GAAJ,CAAQ9D,OAAO,UAAP,CAAeG,IAAI,CAACyD,OAAL,CAAaC,SAAb,EAAwB,WAAxB,CAAf,CAAR;AAEAN,GAAG,CAAChD,GAAJ,CAAQ,GAAR,EAAa,UAAUwD,GAAV,EAAeC,GAAf,EAAoB;AAC7B;AACAA,EAAAA,GAAG,CAACC,MAAJ,CAAW,OAAX;AACH,CAHD,E,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
      "sourcesContent": [
        "const express = require('express');\nconst WebSocket = require('ws');\nconst path = require('path');\nconst config = require('config');\nconst StateMachine = require('javascript-state-machine');\n\n\nconst port = config.get('server.port');\nconst portWs = config.get('server.portWs');\n\n\nimport psychics from '../app/psychics/curent.js'; // экстрасенсы\n\nconst ms = { // сообщения\n    error: {\n        wrongFormat: { error: 'не верный формат. json ожидается' },\n        onInvalidTransition: (transition, from, to) =>\n            ({ error: `${transition} not allowed ${from} ${to} state` }),\n        wrongNumber: { error: 'число должно быть 2х значное' },\n    },\n};\n\n// openning a websocket server\nconst wss = new WebSocket.Server({ port: portWs });\nconst broadcast = (data) => {\n    wss.clients.forEach(function each(client) {\n        if (client.readyState === WebSocket.OPEN) {\n            client.send(JSON.stringify(data));\n        }\n    });\n};\nwss.on('connection', (ws) => {\n    const wsJsonSend = (data) => {\n        const jsonData = JSON.stringify(data);\n        ws.send(jsonData);\n    };\n    let guesses = [];\n    const fsm = new StateMachine({\n        /*\n        beginning - отправляем рейтинг, ждем запроса догадок\n        guess - догадки отправлены, ждем правильный ответ\n        */\n        init: 'begin',\n        transitions: [\n            { name: 'toGuess', from: 'begin', to: 'guess' },\n            { name: 'toBegin', from: 'guess', to: 'begin' },\n        ],\n        methods: {\n            onBegin: function () {\n                wsJsonSend({\n                    'psychics': psychics.valueOf(),\n                    state: this.state,\n                });\n            },\n            onGuess: function () {\n                guesses = psychics.guesses();\n                wsJsonSend({\n                    'guesses': guesses,\n                    state: this.state,\n                });\n            },\n            onInvalidTransition: (transition, from, to) => {\n                wsJsonSend(ms.error.onInvalidTransition(transition, from, to));\n            },\n        }\n    });\n\n    ws.on('message', (message) => {\n        let msg = {};\n        try {\n            msg = JSON.parse(message);\n        } catch (e) {\n            wsJsonSend(ms.error.wrongFormat);\n            return;\n        }\n\n        if (msg.step === 'toGuess') {\n            fsm.toGuess();\n        }\n        if (msg.answer !== undefined) {\n            if (msg.answer >= 10 && msg.answer < 100) {\n                psychics.recalcRating(msg.answer, guesses);\n                broadcast({ 'psychics': psychics.valueOf() });\n                fsm.toBegin();\n            } else {\n                wsJsonSend(ms.error.wrongNumber);\n            }\n        }\n        // console.log(message, wss.clients);\n\n\n        // wss.clients.forEach((client) => {\n        //     client.send(message);\n        // })\n    })\n});\n\nconst app = express();\napp.listen(port, function () {\n    console.log(`Server was started on '${port}'`);\n});\n\napp.set('view engine', 'pug');\napp.set('views', path.resolve(__dirname, '../views'));\napp.use(express.static(path.resolve(__dirname, '../assets')));\n\napp.get('/', function (req, res) {\n    // console.log(new Psychic('name', 0));\n    res.render('index');\n});\n\n\n// const config = require('config');\n// const express = require('express');\n// let app = express();\n// let expressWs = require('express-ws')(app);\n//\n// app.set('view engine', 'pug');\n//\n// app.ws('/', (ws, req, next) => {\n//     ws.on('message', function (msg) {\n//         console.log('msg:', msg)\n//     })\n// });\n// const port = config.get('port');\n// app.listen(port, () => {\n//     console.log(`Server was started on '${port}'`);\n// });\n// const Express = require('express');\n// const expressWs = require('express-ws');\n//\n// const app = new Express();\n// expressWs(app);\n// app.set('view engine', 'pug');\n//\n// // app.get('/', function (req, res) {\n// //     res.render('index', {})\n// // });\n//\n// app.ws('/', function(ws, req, next) {\n//     ws.on('message', function(msg) {\n//         console.log('msg:', msg)\n//     })\n// });\n//\n// app().listen(config.get('port'), () => {\n//     // eslint-disable-next-line\n//     console.log(`Server was started on '${port}'`);\n// });\n//\n// // export default app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1558776585281
  },
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\server\\\\psychic.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\psychic.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\psychic.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\psychic.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
        "sourceFileName": "psychic.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Psychics = exports.Psychic = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Psychic =\n/*#__PURE__*/\nfunction () {\n  _createClass(Psychic, null, [{\n    key: \"id\",\n    value: function id() {\n      if (!this.latestId) this.latestId = 1;else this.latestId += 1;\n      return this.latestId;\n    }\n  }, {\n    key: \"guessesFunc\",\n    value: function guessesFunc() {\n      return Psychic.randomInteger(10, 99);\n    }\n  }, {\n    key: \"randomInteger\",\n    value: function randomInteger(min, max) {\n      var rand = min + Math.random() * (max - min + 1);\n      rand = Math.floor(rand);\n      return rand;\n    }\n  }]);\n\n  function Psychic(_ref) {\n    var _ref$name = _ref.name,\n        name = _ref$name === void 0 ? '' : _ref$name,\n        _ref$rating = _ref.rating,\n        rating = _ref$rating === void 0 ? 0 : _ref$rating,\n        _ref$guess = _ref.guess,\n        guess = _ref$guess === void 0 ? Psychic.guessesFunc : _ref$guess;\n\n    _classCallCheck(this, Psychic);\n\n    this.id = Psychic.id();\n    this.name = name;\n    this.rating = rating;\n    this.guess = guess;\n  }\n\n  _createClass(Psychic, [{\n    key: \"ratingIncrement\",\n    value: function ratingIncrement() {\n      this.rating += 1;\n    }\n  }, {\n    key: \"ratingDecrease\",\n    value: function ratingDecrease() {\n      this.rating -= 1;\n\n      if (this.rating < 0) {\n        this.rating = 0;\n      }\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return {\n        'name': this.name,\n        'rating': this.rating\n      };\n    }\n  }]);\n\n  return Psychic;\n}();\n\nexports.Psychic = Psychic;\n\nvar Psychics =\n/*#__PURE__*/\nfunction () {\n  function Psychics(arrProp) {\n    _classCallCheck(this, Psychics);\n\n    this.psychics = arrProp.map(function (el) {\n      return new Psychic(el);\n    });\n  }\n\n  _createClass(Psychics, [{\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.psychics.map(function (el) {\n        return el.valueOf();\n      });\n    }\n  }, {\n    key: \"guesses\",\n    value: function guesses() {\n      var isJson = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var guesses = this.psychics.map(function (el) {\n        return el.guess();\n      });\n\n      if (isJson) {\n        return JSON.stringify(guesses);\n      } else {\n        return guesses;\n      }\n    }\n  }, {\n    key: \"recalcRating\",\n    value: function recalcRating(answer, guesses) {\n      var winIndex = guesses.indexOf(Number(answer));\n      this.psychics.forEach(function (ps, index) {\n        if (winIndex === index) {\n          ps.ratingIncrement();\n        } else {\n          ps.ratingDecrease();\n        }\n      });\n    }\n  }]);\n\n  return Psychics;\n}();\n\nexports.Psychics = Psychics;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBzeWNoaWMuanMiXSwibmFtZXMiOlsiUHN5Y2hpYyIsImxhdGVzdElkIiwicmFuZG9tSW50ZWdlciIsIm1pbiIsIm1heCIsInJhbmQiLCJNYXRoIiwicmFuZG9tIiwiZmxvb3IiLCJuYW1lIiwicmF0aW5nIiwiZ3Vlc3MiLCJndWVzc2VzRnVuYyIsImlkIiwiUHN5Y2hpY3MiLCJhcnJQcm9wIiwicHN5Y2hpY3MiLCJtYXAiLCJlbCIsInZhbHVlT2YiLCJpc0pzb24iLCJndWVzc2VzIiwiSlNPTiIsInN0cmluZ2lmeSIsImFuc3dlciIsIndpbkluZGV4IiwiaW5kZXhPZiIsIk51bWJlciIsImZvckVhY2giLCJwcyIsImluZGV4IiwicmF0aW5nSW5jcmVtZW50IiwicmF0aW5nRGVjcmVhc2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7SUFBYUEsTzs7Ozs7eUJBQ0c7QUFDUixVQUFJLENBQUMsS0FBS0MsUUFBVixFQUFvQixLQUFLQSxRQUFMLEdBQWdCLENBQWhCLENBQXBCLEtBQ0ssS0FBS0EsUUFBTCxJQUFpQixDQUFqQjtBQUNMLGFBQU8sS0FBS0EsUUFBWjtBQUNIOzs7a0NBRW9CO0FBQ2pCLGFBQU9ELE9BQU8sQ0FBQ0UsYUFBUixDQUFzQixFQUF0QixFQUEwQixFQUExQixDQUFQO0FBQ0g7OztrQ0FFb0JDLEcsRUFBS0MsRyxFQUFLO0FBQzNCLFVBQUlDLElBQUksR0FBR0YsR0FBRyxHQUFHRyxJQUFJLENBQUNDLE1BQUwsTUFBaUJILEdBQUcsR0FBR0QsR0FBTixHQUFZLENBQTdCLENBQWpCO0FBQ0FFLE1BQUFBLElBQUksR0FBR0MsSUFBSSxDQUFDRSxLQUFMLENBQVdILElBQVgsQ0FBUDtBQUNBLGFBQU9BLElBQVA7QUFDSDs7O0FBRUQseUJBQW9FO0FBQUEseUJBQXRESSxJQUFzRDtBQUFBLFFBQXREQSxJQUFzRCwwQkFBL0MsRUFBK0M7QUFBQSwyQkFBM0NDLE1BQTJDO0FBQUEsUUFBM0NBLE1BQTJDLDRCQUFsQyxDQUFrQztBQUFBLDBCQUEvQkMsS0FBK0I7QUFBQSxRQUEvQkEsS0FBK0IsMkJBQXZCWCxPQUFPLENBQUNZLFdBQWU7O0FBQUE7O0FBQ2hFLFNBQUtDLEVBQUwsR0FBVWIsT0FBTyxDQUFDYSxFQUFSLEVBQVY7QUFDQSxTQUFLSixJQUFMLEdBQVlBLElBQVo7QUFDQSxTQUFLQyxNQUFMLEdBQWNBLE1BQWQ7QUFDQSxTQUFLQyxLQUFMLEdBQWFBLEtBQWI7QUFDSDs7OztzQ0FFaUI7QUFDZCxXQUFLRCxNQUFMLElBQWUsQ0FBZjtBQUNIOzs7cUNBRWdCO0FBQ2IsV0FBS0EsTUFBTCxJQUFlLENBQWY7O0FBQ0EsVUFBSSxLQUFLQSxNQUFMLEdBQWMsQ0FBbEIsRUFBcUI7QUFDakIsYUFBS0EsTUFBTCxHQUFjLENBQWQ7QUFDSDtBQUNKOzs7OEJBRVM7QUFDTixhQUFPO0FBQ0gsZ0JBQVEsS0FBS0QsSUFEVjtBQUVILGtCQUFVLEtBQUtDO0FBRlosT0FBUDtBQUlIOzs7Ozs7OztJQUdRSSxROzs7QUFDVCxvQkFBWUMsT0FBWixFQUFxQjtBQUFBOztBQUNqQixTQUFLQyxRQUFMLEdBQWdCRCxPQUFPLENBQUNFLEdBQVIsQ0FBWSxVQUFBQyxFQUFFO0FBQUEsYUFBSSxJQUFJbEIsT0FBSixDQUFZa0IsRUFBWixDQUFKO0FBQUEsS0FBZCxDQUFoQjtBQUNIOzs7OzhCQUVTO0FBQ04sYUFBTyxLQUFLRixRQUFMLENBQWNDLEdBQWQsQ0FBa0IsVUFBQUMsRUFBRTtBQUFBLGVBQUlBLEVBQUUsQ0FBQ0MsT0FBSCxFQUFKO0FBQUEsT0FBcEIsQ0FBUDtBQUNIOzs7OEJBRXVCO0FBQUEsVUFBaEJDLE1BQWdCLHVFQUFQLEtBQU87QUFDcEIsVUFBTUMsT0FBTyxHQUFHLEtBQUtMLFFBQUwsQ0FBY0MsR0FBZCxDQUFrQixVQUFBQyxFQUFFO0FBQUEsZUFBSUEsRUFBRSxDQUFDUCxLQUFILEVBQUo7QUFBQSxPQUFwQixDQUFoQjs7QUFDQSxVQUFJUyxNQUFKLEVBQVk7QUFDUixlQUFPRSxJQUFJLENBQUNDLFNBQUwsQ0FBZUYsT0FBZixDQUFQO0FBQ0gsT0FGRCxNQUVPO0FBQ0gsZUFBT0EsT0FBUDtBQUNIO0FBQ0o7OztpQ0FFWUcsTSxFQUFRSCxPLEVBQVM7QUFDMUIsVUFBTUksUUFBUSxHQUFHSixPQUFPLENBQUNLLE9BQVIsQ0FBZ0JDLE1BQU0sQ0FBQ0gsTUFBRCxDQUF0QixDQUFqQjtBQUNBLFdBQUtSLFFBQUwsQ0FBY1ksT0FBZCxDQUFzQixVQUFDQyxFQUFELEVBQUtDLEtBQUwsRUFBZTtBQUNqQyxZQUFJTCxRQUFRLEtBQUtLLEtBQWpCLEVBQXdCO0FBQ3BCRCxVQUFBQSxFQUFFLENBQUNFLGVBQUg7QUFDSCxTQUZELE1BRU87QUFDSEYsVUFBQUEsRUFBRSxDQUFDRyxjQUFIO0FBQ0g7QUFDSixPQU5EO0FBT0giLCJzb3VyY2VSb290IjoiRDpcXE9wZW5TZXJ2ZXJcXGRvbWFpbnNcXGxvY2FsLmxvY1xcdGVzdHNcXHRlc3RfZWRpc29uX3RyYWluZWVcXHNlcnZlciIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBQc3ljaGljIHtcclxuICAgIHN0YXRpYyBpZCgpIHtcclxuICAgICAgICBpZiAoIXRoaXMubGF0ZXN0SWQpIHRoaXMubGF0ZXN0SWQgPSAxO1xyXG4gICAgICAgIGVsc2UgdGhpcy5sYXRlc3RJZCArPSAxO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmxhdGVzdElkO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBndWVzc2VzRnVuYygpIHtcclxuICAgICAgICByZXR1cm4gUHN5Y2hpYy5yYW5kb21JbnRlZ2VyKDEwLCA5OSk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIHJhbmRvbUludGVnZXIobWluLCBtYXgpIHtcclxuICAgICAgICB2YXIgcmFuZCA9IG1pbiArIE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluICsgMSk7XHJcbiAgICAgICAgcmFuZCA9IE1hdGguZmxvb3IocmFuZCk7XHJcbiAgICAgICAgcmV0dXJuIHJhbmQ7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3RydWN0b3IoeyBuYW1lID0gJycsIHJhdGluZyA9IDAsIGd1ZXNzID0gUHN5Y2hpYy5ndWVzc2VzRnVuYyB9KSB7XHJcbiAgICAgICAgdGhpcy5pZCA9IFBzeWNoaWMuaWQoKTtcclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMucmF0aW5nID0gcmF0aW5nO1xyXG4gICAgICAgIHRoaXMuZ3Vlc3MgPSBndWVzcztcclxuICAgIH1cclxuXHJcbiAgICByYXRpbmdJbmNyZW1lbnQoKSB7XHJcbiAgICAgICAgdGhpcy5yYXRpbmcgKz0gMTtcclxuICAgIH1cclxuXHJcbiAgICByYXRpbmdEZWNyZWFzZSgpIHtcclxuICAgICAgICB0aGlzLnJhdGluZyAtPSAxO1xyXG4gICAgICAgIGlmICh0aGlzLnJhdGluZyA8IDApIHtcclxuICAgICAgICAgICAgdGhpcy5yYXRpbmcgPSAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB2YWx1ZU9mKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICduYW1lJzogdGhpcy5uYW1lLFxyXG4gICAgICAgICAgICAncmF0aW5nJzogdGhpcy5yYXRpbmcsXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFBzeWNoaWNzIHtcclxuICAgIGNvbnN0cnVjdG9yKGFyclByb3ApIHtcclxuICAgICAgICB0aGlzLnBzeWNoaWNzID0gYXJyUHJvcC5tYXAoZWwgPT4gbmV3IFBzeWNoaWMoZWwpKTtcclxuICAgIH1cclxuXHJcbiAgICB2YWx1ZU9mKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnBzeWNoaWNzLm1hcChlbCA9PiBlbC52YWx1ZU9mKCkpO1xyXG4gICAgfVxyXG5cclxuICAgIGd1ZXNzZXMoaXNKc29uID0gZmFsc2UpIHtcclxuICAgICAgICBjb25zdCBndWVzc2VzID0gdGhpcy5wc3ljaGljcy5tYXAoZWwgPT4gZWwuZ3Vlc3MoKSk7XHJcbiAgICAgICAgaWYgKGlzSnNvbikge1xyXG4gICAgICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoZ3Vlc3Nlcyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIGd1ZXNzZXM7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJlY2FsY1JhdGluZyhhbnN3ZXIsIGd1ZXNzZXMpIHtcclxuICAgICAgICBjb25zdCB3aW5JbmRleCA9IGd1ZXNzZXMuaW5kZXhPZihOdW1iZXIoYW5zd2VyKSk7XHJcbiAgICAgICAgdGhpcy5wc3ljaGljcy5mb3JFYWNoKChwcywgaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgaWYgKHdpbkluZGV4ID09PSBpbmRleCkge1xyXG4gICAgICAgICAgICAgICAgcHMucmF0aW5nSW5jcmVtZW50KCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBwcy5yYXRpbmdEZWNyZWFzZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "psychic.js"
      ],
      "names": [
        "Psychic",
        "latestId",
        "randomInteger",
        "min",
        "max",
        "rand",
        "Math",
        "random",
        "floor",
        "name",
        "rating",
        "guess",
        "guessesFunc",
        "id",
        "Psychics",
        "arrProp",
        "psychics",
        "map",
        "el",
        "valueOf",
        "isJson",
        "guesses",
        "JSON",
        "stringify",
        "answer",
        "winIndex",
        "indexOf",
        "Number",
        "forEach",
        "ps",
        "index",
        "ratingIncrement",
        "ratingDecrease"
      ],
      "mappings": ";;;;;;;;;;;;;IAAaA,O;;;;;yBACG;AACR,UAAI,CAAC,KAAKC,QAAV,EAAoB,KAAKA,QAAL,GAAgB,CAAhB,CAApB,KACK,KAAKA,QAAL,IAAiB,CAAjB;AACL,aAAO,KAAKA,QAAZ;AACH;;;kCAEoB;AACjB,aAAOD,OAAO,CAACE,aAAR,CAAsB,EAAtB,EAA0B,EAA1B,CAAP;AACH;;;kCAEoBC,G,EAAKC,G,EAAK;AAC3B,UAAIC,IAAI,GAAGF,GAAG,GAAGG,IAAI,CAACC,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAjB;AACAE,MAAAA,IAAI,GAAGC,IAAI,CAACE,KAAL,CAAWH,IAAX,CAAP;AACA,aAAOA,IAAP;AACH;;;AAED,yBAAoE;AAAA,yBAAtDI,IAAsD;AAAA,QAAtDA,IAAsD,0BAA/C,EAA+C;AAAA,2BAA3CC,MAA2C;AAAA,QAA3CA,MAA2C,4BAAlC,CAAkC;AAAA,0BAA/BC,KAA+B;AAAA,QAA/BA,KAA+B,2BAAvBX,OAAO,CAACY,WAAe;;AAAA;;AAChE,SAAKC,EAAL,GAAUb,OAAO,CAACa,EAAR,EAAV;AACA,SAAKJ,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACH;;;;sCAEiB;AACd,WAAKD,MAAL,IAAe,CAAf;AACH;;;qCAEgB;AACb,WAAKA,MAAL,IAAe,CAAf;;AACA,UAAI,KAAKA,MAAL,GAAc,CAAlB,EAAqB;AACjB,aAAKA,MAAL,GAAc,CAAd;AACH;AACJ;;;8BAES;AACN,aAAO;AACH,gBAAQ,KAAKD,IADV;AAEH,kBAAU,KAAKC;AAFZ,OAAP;AAIH;;;;;;;;IAGQI,Q;;;AACT,oBAAYC,OAAZ,EAAqB;AAAA;;AACjB,SAAKC,QAAL,GAAgBD,OAAO,CAACE,GAAR,CAAY,UAAAC,EAAE;AAAA,aAAI,IAAIlB,OAAJ,CAAYkB,EAAZ,CAAJ;AAAA,KAAd,CAAhB;AACH;;;;8BAES;AACN,aAAO,KAAKF,QAAL,CAAcC,GAAd,CAAkB,UAAAC,EAAE;AAAA,eAAIA,EAAE,CAACC,OAAH,EAAJ;AAAA,OAApB,CAAP;AACH;;;8BAEuB;AAAA,UAAhBC,MAAgB,uEAAP,KAAO;AACpB,UAAMC,OAAO,GAAG,KAAKL,QAAL,CAAcC,GAAd,CAAkB,UAAAC,EAAE;AAAA,eAAIA,EAAE,CAACP,KAAH,EAAJ;AAAA,OAApB,CAAhB;;AACA,UAAIS,MAAJ,EAAY;AACR,eAAOE,IAAI,CAACC,SAAL,CAAeF,OAAf,CAAP;AACH,OAFD,MAEO;AACH,eAAOA,OAAP;AACH;AACJ;;;iCAEYG,M,EAAQH,O,EAAS;AAC1B,UAAMI,QAAQ,GAAGJ,OAAO,CAACK,OAAR,CAAgBC,MAAM,CAACH,MAAD,CAAtB,CAAjB;AACA,WAAKR,QAAL,CAAcY,OAAd,CAAsB,UAACC,EAAD,EAAKC,KAAL,EAAe;AACjC,YAAIL,QAAQ,KAAKK,KAAjB,EAAwB;AACpBD,UAAAA,EAAE,CAACE,eAAH;AACH,SAFD,MAEO;AACHF,UAAAA,EAAE,CAACG,cAAH;AACH;AACJ,OAND;AAOH",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
      "sourcesContent": [
        "export class Psychic {\r\n    static id() {\r\n        if (!this.latestId) this.latestId = 1;\r\n        else this.latestId += 1;\r\n        return this.latestId;\r\n    }\r\n\r\n    static guessesFunc() {\r\n        return Psychic.randomInteger(10, 99);\r\n    }\r\n\r\n    static randomInteger(min, max) {\r\n        var rand = min + Math.random() * (max - min + 1);\r\n        rand = Math.floor(rand);\r\n        return rand;\r\n    }\r\n\r\n    constructor({ name = '', rating = 0, guess = Psychic.guessesFunc }) {\r\n        this.id = Psychic.id();\r\n        this.name = name;\r\n        this.rating = rating;\r\n        this.guess = guess;\r\n    }\r\n\r\n    ratingIncrement() {\r\n        this.rating += 1;\r\n    }\r\n\r\n    ratingDecrease() {\r\n        this.rating -= 1;\r\n        if (this.rating < 0) {\r\n            this.rating = 0;\r\n        }\r\n    }\r\n\r\n    valueOf() {\r\n        return {\r\n            'name': this.name,\r\n            'rating': this.rating,\r\n        };\r\n    }\r\n}\r\n\r\nexport class Psychics {\r\n    constructor(arrProp) {\r\n        this.psychics = arrProp.map(el => new Psychic(el));\r\n    }\r\n\r\n    valueOf() {\r\n        return this.psychics.map(el => el.valueOf());\r\n    }\r\n\r\n    guesses(isJson = false) {\r\n        const guesses = this.psychics.map(el => el.guess());\r\n        if (isJson) {\r\n            return JSON.stringify(guesses);\r\n        } else {\r\n            return guesses;\r\n        }\r\n    }\r\n\r\n    recalcRating(answer, guesses) {\r\n        const winIndex = guesses.indexOf(Number(answer));\r\n        this.psychics.forEach((ps, index) => {\r\n            if (winIndex === index) {\r\n                ps.ratingIncrement();\r\n            } else {\r\n                ps.ratingDecrease();\r\n            }\r\n        });\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558776008990
  },
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\\\\psychics\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\\\\psychics\\\\psychic.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics\\psychic.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics\\psychic.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics\\psychic.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics",
        "sourceFileName": "psychic.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Psychics = exports.Psychic = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Psychic =\n/*#__PURE__*/\nfunction () {\n  _createClass(Psychic, null, [{\n    key: \"id\",\n    value: function id() {\n      if (!this.latestId) this.latestId = 1;else this.latestId += 1;\n      return this.latestId;\n    }\n  }, {\n    key: \"guessesFunc\",\n    value: function guessesFunc() {\n      return Psychic.randomInteger(10, 99);\n    }\n  }, {\n    key: \"randomInteger\",\n    value: function randomInteger(min, max) {\n      var rand = min + Math.random() * (max - min + 1);\n      rand = Math.floor(rand);\n      return rand;\n    }\n  }]);\n\n  function Psychic(_ref) {\n    var _ref$name = _ref.name,\n        name = _ref$name === void 0 ? '' : _ref$name,\n        _ref$rating = _ref.rating,\n        rating = _ref$rating === void 0 ? 0 : _ref$rating,\n        _ref$guess = _ref.guess,\n        guess = _ref$guess === void 0 ? Psychic.guessesFunc : _ref$guess;\n\n    _classCallCheck(this, Psychic);\n\n    this.id = Psychic.id();\n    this.name = name;\n    this.rating = rating;\n    this.guess = guess;\n  }\n\n  _createClass(Psychic, [{\n    key: \"ratingIncrement\",\n    value: function ratingIncrement() {\n      this.rating += 1;\n    }\n  }, {\n    key: \"ratingDecrease\",\n    value: function ratingDecrease() {\n      this.rating -= 1;\n\n      if (this.rating < 0) {\n        this.rating = 0;\n      }\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return {\n        'name': this.name,\n        'rating': this.rating\n      };\n    }\n  }]);\n\n  return Psychic;\n}();\n\nexports.Psychic = Psychic;\n\nvar Psychics =\n/*#__PURE__*/\nfunction () {\n  function Psychics(arrProp) {\n    _classCallCheck(this, Psychics);\n\n    this.psychics = arrProp.map(function (el) {\n      return new Psychic(el);\n    });\n  }\n\n  _createClass(Psychics, [{\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.psychics.map(function (el) {\n        return el.valueOf();\n      });\n    }\n  }, {\n    key: \"guesses\",\n    value: function guesses() {\n      var isJson = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var guesses = this.psychics.map(function (el) {\n        return el.guess();\n      });\n\n      if (isJson) {\n        return JSON.stringify(guesses);\n      } else {\n        return guesses;\n      }\n    }\n  }, {\n    key: \"recalcRating\",\n    value: function recalcRating(answer, guesses) {\n      var winIndex = guesses.indexOf(Number(answer));\n      this.psychics.forEach(function (ps, index) {\n        if (winIndex === index) {\n          ps.ratingIncrement();\n        } else {\n          ps.ratingDecrease();\n        }\n      });\n    }\n  }]);\n\n  return Psychics;\n}();\n\nexports.Psychics = Psychics;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBzeWNoaWMuanMiXSwibmFtZXMiOlsiUHN5Y2hpYyIsImxhdGVzdElkIiwicmFuZG9tSW50ZWdlciIsIm1pbiIsIm1heCIsInJhbmQiLCJNYXRoIiwicmFuZG9tIiwiZmxvb3IiLCJuYW1lIiwicmF0aW5nIiwiZ3Vlc3MiLCJndWVzc2VzRnVuYyIsImlkIiwiUHN5Y2hpY3MiLCJhcnJQcm9wIiwicHN5Y2hpY3MiLCJtYXAiLCJlbCIsInZhbHVlT2YiLCJpc0pzb24iLCJndWVzc2VzIiwiSlNPTiIsInN0cmluZ2lmeSIsImFuc3dlciIsIndpbkluZGV4IiwiaW5kZXhPZiIsIk51bWJlciIsImZvckVhY2giLCJwcyIsImluZGV4IiwicmF0aW5nSW5jcmVtZW50IiwicmF0aW5nRGVjcmVhc2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7SUFBYUEsTzs7Ozs7eUJBQ0c7QUFDUixVQUFJLENBQUMsS0FBS0MsUUFBVixFQUFvQixLQUFLQSxRQUFMLEdBQWdCLENBQWhCLENBQXBCLEtBQ0ssS0FBS0EsUUFBTCxJQUFpQixDQUFqQjtBQUNMLGFBQU8sS0FBS0EsUUFBWjtBQUNIOzs7a0NBRW9CO0FBQ2pCLGFBQU9ELE9BQU8sQ0FBQ0UsYUFBUixDQUFzQixFQUF0QixFQUEwQixFQUExQixDQUFQO0FBQ0g7OztrQ0FFb0JDLEcsRUFBS0MsRyxFQUFLO0FBQzNCLFVBQUlDLElBQUksR0FBR0YsR0FBRyxHQUFHRyxJQUFJLENBQUNDLE1BQUwsTUFBaUJILEdBQUcsR0FBR0QsR0FBTixHQUFZLENBQTdCLENBQWpCO0FBQ0FFLE1BQUFBLElBQUksR0FBR0MsSUFBSSxDQUFDRSxLQUFMLENBQVdILElBQVgsQ0FBUDtBQUNBLGFBQU9BLElBQVA7QUFDSDs7O0FBRUQseUJBQW9FO0FBQUEseUJBQXRESSxJQUFzRDtBQUFBLFFBQXREQSxJQUFzRCwwQkFBL0MsRUFBK0M7QUFBQSwyQkFBM0NDLE1BQTJDO0FBQUEsUUFBM0NBLE1BQTJDLDRCQUFsQyxDQUFrQztBQUFBLDBCQUEvQkMsS0FBK0I7QUFBQSxRQUEvQkEsS0FBK0IsMkJBQXZCWCxPQUFPLENBQUNZLFdBQWU7O0FBQUE7O0FBQ2hFLFNBQUtDLEVBQUwsR0FBVWIsT0FBTyxDQUFDYSxFQUFSLEVBQVY7QUFDQSxTQUFLSixJQUFMLEdBQVlBLElBQVo7QUFDQSxTQUFLQyxNQUFMLEdBQWNBLE1BQWQ7QUFDQSxTQUFLQyxLQUFMLEdBQWFBLEtBQWI7QUFDSDs7OztzQ0FFaUI7QUFDZCxXQUFLRCxNQUFMLElBQWUsQ0FBZjtBQUNIOzs7cUNBRWdCO0FBQ2IsV0FBS0EsTUFBTCxJQUFlLENBQWY7O0FBQ0EsVUFBSSxLQUFLQSxNQUFMLEdBQWMsQ0FBbEIsRUFBcUI7QUFDakIsYUFBS0EsTUFBTCxHQUFjLENBQWQ7QUFDSDtBQUNKOzs7OEJBRVM7QUFDTixhQUFPO0FBQ0gsZ0JBQVEsS0FBS0QsSUFEVjtBQUVILGtCQUFVLEtBQUtDO0FBRlosT0FBUDtBQUlIOzs7Ozs7OztJQUdRSSxROzs7QUFDVCxvQkFBWUMsT0FBWixFQUFxQjtBQUFBOztBQUNqQixTQUFLQyxRQUFMLEdBQWdCRCxPQUFPLENBQUNFLEdBQVIsQ0FBWSxVQUFBQyxFQUFFO0FBQUEsYUFBSSxJQUFJbEIsT0FBSixDQUFZa0IsRUFBWixDQUFKO0FBQUEsS0FBZCxDQUFoQjtBQUNIOzs7OzhCQUVTO0FBQ04sYUFBTyxLQUFLRixRQUFMLENBQWNDLEdBQWQsQ0FBa0IsVUFBQUMsRUFBRTtBQUFBLGVBQUlBLEVBQUUsQ0FBQ0MsT0FBSCxFQUFKO0FBQUEsT0FBcEIsQ0FBUDtBQUNIOzs7OEJBRXVCO0FBQUEsVUFBaEJDLE1BQWdCLHVFQUFQLEtBQU87QUFDcEIsVUFBTUMsT0FBTyxHQUFHLEtBQUtMLFFBQUwsQ0FBY0MsR0FBZCxDQUFrQixVQUFBQyxFQUFFO0FBQUEsZUFBSUEsRUFBRSxDQUFDUCxLQUFILEVBQUo7QUFBQSxPQUFwQixDQUFoQjs7QUFDQSxVQUFJUyxNQUFKLEVBQVk7QUFDUixlQUFPRSxJQUFJLENBQUNDLFNBQUwsQ0FBZUYsT0FBZixDQUFQO0FBQ0gsT0FGRCxNQUVPO0FBQ0gsZUFBT0EsT0FBUDtBQUNIO0FBQ0o7OztpQ0FFWUcsTSxFQUFRSCxPLEVBQVM7QUFDMUIsVUFBTUksUUFBUSxHQUFHSixPQUFPLENBQUNLLE9BQVIsQ0FBZ0JDLE1BQU0sQ0FBQ0gsTUFBRCxDQUF0QixDQUFqQjtBQUNBLFdBQUtSLFFBQUwsQ0FBY1ksT0FBZCxDQUFzQixVQUFDQyxFQUFELEVBQUtDLEtBQUwsRUFBZTtBQUNqQyxZQUFJTCxRQUFRLEtBQUtLLEtBQWpCLEVBQXdCO0FBQ3BCRCxVQUFBQSxFQUFFLENBQUNFLGVBQUg7QUFDSCxTQUZELE1BRU87QUFDSEYsVUFBQUEsRUFBRSxDQUFDRyxjQUFIO0FBQ0g7QUFDSixPQU5EO0FBT0giLCJzb3VyY2VSb290IjoiRDpcXE9wZW5TZXJ2ZXJcXGRvbWFpbnNcXGxvY2FsLmxvY1xcdGVzdHNcXHRlc3RfZWRpc29uX3RyYWluZWVcXGFwcFxccHN5Y2hpY3MiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgUHN5Y2hpYyB7XHJcbiAgICBzdGF0aWMgaWQoKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmxhdGVzdElkKSB0aGlzLmxhdGVzdElkID0gMTtcclxuICAgICAgICBlbHNlIHRoaXMubGF0ZXN0SWQgKz0gMTtcclxuICAgICAgICByZXR1cm4gdGhpcy5sYXRlc3RJZDtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ3Vlc3Nlc0Z1bmMoKSB7XHJcbiAgICAgICAgcmV0dXJuIFBzeWNoaWMucmFuZG9tSW50ZWdlcigxMCwgOTkpO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyByYW5kb21JbnRlZ2VyKG1pbiwgbWF4KSB7XHJcbiAgICAgICAgdmFyIHJhbmQgPSBtaW4gKyBNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbiArIDEpO1xyXG4gICAgICAgIHJhbmQgPSBNYXRoLmZsb29yKHJhbmQpO1xyXG4gICAgICAgIHJldHVybiByYW5kO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0cnVjdG9yKHsgbmFtZSA9ICcnLCByYXRpbmcgPSAwLCBndWVzcyA9IFBzeWNoaWMuZ3Vlc3Nlc0Z1bmMgfSkge1xyXG4gICAgICAgIHRoaXMuaWQgPSBQc3ljaGljLmlkKCk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICAgICAgICB0aGlzLnJhdGluZyA9IHJhdGluZztcclxuICAgICAgICB0aGlzLmd1ZXNzID0gZ3Vlc3M7XHJcbiAgICB9XHJcblxyXG4gICAgcmF0aW5nSW5jcmVtZW50KCkge1xyXG4gICAgICAgIHRoaXMucmF0aW5nICs9IDE7XHJcbiAgICB9XHJcblxyXG4gICAgcmF0aW5nRGVjcmVhc2UoKSB7XHJcbiAgICAgICAgdGhpcy5yYXRpbmcgLT0gMTtcclxuICAgICAgICBpZiAodGhpcy5yYXRpbmcgPCAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMucmF0aW5nID0gMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdmFsdWVPZigpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAnbmFtZSc6IHRoaXMubmFtZSxcclxuICAgICAgICAgICAgJ3JhdGluZyc6IHRoaXMucmF0aW5nLFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBQc3ljaGljcyB7XHJcbiAgICBjb25zdHJ1Y3RvcihhcnJQcm9wKSB7XHJcbiAgICAgICAgdGhpcy5wc3ljaGljcyA9IGFyclByb3AubWFwKGVsID0+IG5ldyBQc3ljaGljKGVsKSk7XHJcbiAgICB9XHJcblxyXG4gICAgdmFsdWVPZigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5wc3ljaGljcy5tYXAoZWwgPT4gZWwudmFsdWVPZigpKTtcclxuICAgIH1cclxuXHJcbiAgICBndWVzc2VzKGlzSnNvbiA9IGZhbHNlKSB7XHJcbiAgICAgICAgY29uc3QgZ3Vlc3NlcyA9IHRoaXMucHN5Y2hpY3MubWFwKGVsID0+IGVsLmd1ZXNzKCkpO1xyXG4gICAgICAgIGlmIChpc0pzb24pIHtcclxuICAgICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGd1ZXNzZXMpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBndWVzc2VzO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZWNhbGNSYXRpbmcoYW5zd2VyLCBndWVzc2VzKSB7XHJcbiAgICAgICAgY29uc3Qgd2luSW5kZXggPSBndWVzc2VzLmluZGV4T2YoTnVtYmVyKGFuc3dlcikpO1xyXG4gICAgICAgIHRoaXMucHN5Y2hpY3MuZm9yRWFjaCgocHMsIGluZGV4KSA9PiB7XHJcbiAgICAgICAgICAgIGlmICh3aW5JbmRleCA9PT0gaW5kZXgpIHtcclxuICAgICAgICAgICAgICAgIHBzLnJhdGluZ0luY3JlbWVudCgpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcHMucmF0aW5nRGVjcmVhc2UoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "psychic.js"
      ],
      "names": [
        "Psychic",
        "latestId",
        "randomInteger",
        "min",
        "max",
        "rand",
        "Math",
        "random",
        "floor",
        "name",
        "rating",
        "guess",
        "guessesFunc",
        "id",
        "Psychics",
        "arrProp",
        "psychics",
        "map",
        "el",
        "valueOf",
        "isJson",
        "guesses",
        "JSON",
        "stringify",
        "answer",
        "winIndex",
        "indexOf",
        "Number",
        "forEach",
        "ps",
        "index",
        "ratingIncrement",
        "ratingDecrease"
      ],
      "mappings": ";;;;;;;;;;;;;IAAaA,O;;;;;yBACG;AACR,UAAI,CAAC,KAAKC,QAAV,EAAoB,KAAKA,QAAL,GAAgB,CAAhB,CAApB,KACK,KAAKA,QAAL,IAAiB,CAAjB;AACL,aAAO,KAAKA,QAAZ;AACH;;;kCAEoB;AACjB,aAAOD,OAAO,CAACE,aAAR,CAAsB,EAAtB,EAA0B,EAA1B,CAAP;AACH;;;kCAEoBC,G,EAAKC,G,EAAK;AAC3B,UAAIC,IAAI,GAAGF,GAAG,GAAGG,IAAI,CAACC,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAjB;AACAE,MAAAA,IAAI,GAAGC,IAAI,CAACE,KAAL,CAAWH,IAAX,CAAP;AACA,aAAOA,IAAP;AACH;;;AAED,yBAAoE;AAAA,yBAAtDI,IAAsD;AAAA,QAAtDA,IAAsD,0BAA/C,EAA+C;AAAA,2BAA3CC,MAA2C;AAAA,QAA3CA,MAA2C,4BAAlC,CAAkC;AAAA,0BAA/BC,KAA+B;AAAA,QAA/BA,KAA+B,2BAAvBX,OAAO,CAACY,WAAe;;AAAA;;AAChE,SAAKC,EAAL,GAAUb,OAAO,CAACa,EAAR,EAAV;AACA,SAAKJ,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACH;;;;sCAEiB;AACd,WAAKD,MAAL,IAAe,CAAf;AACH;;;qCAEgB;AACb,WAAKA,MAAL,IAAe,CAAf;;AACA,UAAI,KAAKA,MAAL,GAAc,CAAlB,EAAqB;AACjB,aAAKA,MAAL,GAAc,CAAd;AACH;AACJ;;;8BAES;AACN,aAAO;AACH,gBAAQ,KAAKD,IADV;AAEH,kBAAU,KAAKC;AAFZ,OAAP;AAIH;;;;;;;;IAGQI,Q;;;AACT,oBAAYC,OAAZ,EAAqB;AAAA;;AACjB,SAAKC,QAAL,GAAgBD,OAAO,CAACE,GAAR,CAAY,UAAAC,EAAE;AAAA,aAAI,IAAIlB,OAAJ,CAAYkB,EAAZ,CAAJ;AAAA,KAAd,CAAhB;AACH;;;;8BAES;AACN,aAAO,KAAKF,QAAL,CAAcC,GAAd,CAAkB,UAAAC,EAAE;AAAA,eAAIA,EAAE,CAACC,OAAH,EAAJ;AAAA,OAApB,CAAP;AACH;;;8BAEuB;AAAA,UAAhBC,MAAgB,uEAAP,KAAO;AACpB,UAAMC,OAAO,GAAG,KAAKL,QAAL,CAAcC,GAAd,CAAkB,UAAAC,EAAE;AAAA,eAAIA,EAAE,CAACP,KAAH,EAAJ;AAAA,OAApB,CAAhB;;AACA,UAAIS,MAAJ,EAAY;AACR,eAAOE,IAAI,CAACC,SAAL,CAAeF,OAAf,CAAP;AACH,OAFD,MAEO;AACH,eAAOA,OAAP;AACH;AACJ;;;iCAEYG,M,EAAQH,O,EAAS;AAC1B,UAAMI,QAAQ,GAAGJ,OAAO,CAACK,OAAR,CAAgBC,MAAM,CAACH,MAAD,CAAtB,CAAjB;AACA,WAAKR,QAAL,CAAcY,OAAd,CAAsB,UAACC,EAAD,EAAKC,KAAL,EAAe;AACjC,YAAIL,QAAQ,KAAKK,KAAjB,EAAwB;AACpBD,UAAAA,EAAE,CAACE,eAAH;AACH,SAFD,MAEO;AACHF,UAAAA,EAAE,CAACG,cAAH;AACH;AACJ,OAND;AAOH",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics",
      "sourcesContent": [
        "export class Psychic {\r\n    static id() {\r\n        if (!this.latestId) this.latestId = 1;\r\n        else this.latestId += 1;\r\n        return this.latestId;\r\n    }\r\n\r\n    static guessesFunc() {\r\n        return Psychic.randomInteger(10, 99);\r\n    }\r\n\r\n    static randomInteger(min, max) {\r\n        var rand = min + Math.random() * (max - min + 1);\r\n        rand = Math.floor(rand);\r\n        return rand;\r\n    }\r\n\r\n    constructor({ name = '', rating = 0, guess = Psychic.guessesFunc }) {\r\n        this.id = Psychic.id();\r\n        this.name = name;\r\n        this.rating = rating;\r\n        this.guess = guess;\r\n    }\r\n\r\n    ratingIncrement() {\r\n        this.rating += 1;\r\n    }\r\n\r\n    ratingDecrease() {\r\n        this.rating -= 1;\r\n        if (this.rating < 0) {\r\n            this.rating = 0;\r\n        }\r\n    }\r\n\r\n    valueOf() {\r\n        return {\r\n            'name': this.name,\r\n            'rating': this.rating,\r\n        };\r\n    }\r\n}\r\n\r\nexport class Psychics {\r\n    constructor(arrProp) {\r\n        this.psychics = arrProp.map(el => new Psychic(el));\r\n    }\r\n\r\n    valueOf() {\r\n        return this.psychics.map(el => el.valueOf());\r\n    }\r\n\r\n    guesses(isJson = false) {\r\n        const guesses = this.psychics.map(el => el.guess());\r\n        if (isJson) {\r\n            return JSON.stringify(guesses);\r\n        } else {\r\n            return guesses;\r\n        }\r\n    }\r\n\r\n    recalcRating(answer, guesses) {\r\n        const winIndex = guesses.indexOf(Number(answer));\r\n        this.psychics.forEach((ps, index) => {\r\n            if (winIndex === index) {\r\n                ps.ratingIncrement();\r\n            } else {\r\n                ps.ratingDecrease();\r\n            }\r\n        });\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558776008990
  },
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\\\\psychics\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\\\\psychics\\\\curent.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics\\curent.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics\\curent.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics\\curent.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics",
        "sourceFileName": "curent.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _psychic = require(\"./psychic.js\");\n\n// экстрасенсы\nvar psychics = new _psychic.Psychics([{\n  name: 'Ы',\n  rating: 1\n}, {\n  name: '2',\n  rating: 2\n}, {\n  name: 'Синий',\n  rating: 3,\n  guess: function guess() {\n    var arr = [10, 22, 33, 33, 50, 78];\n\n    var rand = _psychic.Psychic.randomInteger(0, arr.length - 1);\n\n    return arr[rand];\n  }\n}]);\nvar _default = psychics;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN1cmVudC5qcyJdLCJuYW1lcyI6WyJwc3ljaGljcyIsIlBzeWNoaWNzIiwibmFtZSIsInJhdGluZyIsImd1ZXNzIiwiYXJyIiwicmFuZCIsIlBzeWNoaWMiLCJyYW5kb21JbnRlZ2VyIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQWtEO0FBRWxELElBQU1BLFFBQVEsR0FBRyxJQUFJQyxpQkFBSixDQUFhLENBQzFCO0FBQUVDLEVBQUFBLElBQUksRUFBRSxHQUFSO0FBQWFDLEVBQUFBLE1BQU0sRUFBRTtBQUFyQixDQUQwQixFQUUxQjtBQUFFRCxFQUFBQSxJQUFJLEVBQUUsR0FBUjtBQUFhQyxFQUFBQSxNQUFNLEVBQUU7QUFBckIsQ0FGMEIsRUFHMUI7QUFDSUQsRUFBQUEsSUFBSSxFQUFFLE9BRFY7QUFDbUJDLEVBQUFBLE1BQU0sRUFBRSxDQUQzQjtBQUM4QkMsRUFBQUEsS0FBSyxFQUFFLGlCQUFNO0FBQ25DLFFBQU1DLEdBQUcsR0FBRyxDQUFDLEVBQUQsRUFBSyxFQUFMLEVBQVMsRUFBVCxFQUFhLEVBQWIsRUFBaUIsRUFBakIsRUFBcUIsRUFBckIsQ0FBWjs7QUFDQSxRQUFNQyxJQUFJLEdBQUdDLGlCQUFRQyxhQUFSLENBQXNCLENBQXRCLEVBQXlCSCxHQUFHLENBQUNJLE1BQUosR0FBYSxDQUF0QyxDQUFiOztBQUNBLFdBQU9KLEdBQUcsQ0FBQ0MsSUFBRCxDQUFWO0FBQ0g7QUFMTCxDQUgwQixDQUFiLENBQWpCO2VBWWVOLFEiLCJzb3VyY2VSb290IjoiRDpcXE9wZW5TZXJ2ZXJcXGRvbWFpbnNcXGxvY2FsLmxvY1xcdGVzdHNcXHRlc3RfZWRpc29uX3RyYWluZWVcXGFwcFxccHN5Y2hpY3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQc3ljaGljLCBQc3ljaGljcyB9IGZyb20gJy4vcHN5Y2hpYy5qcyc7IC8vINGN0LrRgdGC0YDQsNGB0LXQvdGB0YtcclxuXHJcbmNvbnN0IHBzeWNoaWNzID0gbmV3IFBzeWNoaWNzKFtcclxuICAgIHsgbmFtZTogJ9CrJywgcmF0aW5nOiAxIH0sXHJcbiAgICB7IG5hbWU6ICcyJywgcmF0aW5nOiAyIH0sXHJcbiAgICB7XHJcbiAgICAgICAgbmFtZTogJ9Ch0LjQvdC40LknLCByYXRpbmc6IDMsIGd1ZXNzOiAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGFyciA9IFsxMCwgMjIsIDMzLCAzMywgNTAsIDc4XTtcclxuICAgICAgICAgICAgY29uc3QgcmFuZCA9IFBzeWNoaWMucmFuZG9tSW50ZWdlcigwLCBhcnIubGVuZ3RoIC0gMSk7XHJcbiAgICAgICAgICAgIHJldHVybiBhcnJbcmFuZF07XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBwc3ljaGljczsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "curent.js"
      ],
      "names": [
        "psychics",
        "Psychics",
        "name",
        "rating",
        "guess",
        "arr",
        "rand",
        "Psychic",
        "randomInteger",
        "length"
      ],
      "mappings": ";;;;;;;AAAA;;AAAkD;AAElD,IAAMA,QAAQ,GAAG,IAAIC,iBAAJ,CAAa,CAC1B;AAAEC,EAAAA,IAAI,EAAE,GAAR;AAAaC,EAAAA,MAAM,EAAE;AAArB,CAD0B,EAE1B;AAAED,EAAAA,IAAI,EAAE,GAAR;AAAaC,EAAAA,MAAM,EAAE;AAArB,CAF0B,EAG1B;AACID,EAAAA,IAAI,EAAE,OADV;AACmBC,EAAAA,MAAM,EAAE,CAD3B;AAC8BC,EAAAA,KAAK,EAAE,iBAAM;AACnC,QAAMC,GAAG,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAAZ;;AACA,QAAMC,IAAI,GAAGC,iBAAQC,aAAR,CAAsB,CAAtB,EAAyBH,GAAG,CAACI,MAAJ,GAAa,CAAtC,CAAb;;AACA,WAAOJ,GAAG,CAACC,IAAD,CAAV;AACH;AALL,CAH0B,CAAb,CAAjB;eAYeN,Q",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics",
      "sourcesContent": [
        "import { Psychic, Psychics } from './psychic.js'; // экстрасенсы\r\n\r\nconst psychics = new Psychics([\r\n    { name: 'Ы', rating: 1 },\r\n    { name: '2', rating: 2 },\r\n    {\r\n        name: 'Синий', rating: 3, guess: () => {\r\n            const arr = [10, 22, 33, 33, 50, 78];\r\n            const rand = Psychic.randomInteger(0, arr.length - 1);\r\n            return arr[rand];\r\n        }\r\n    },\r\n]);\r\n\r\nexport default psychics;"
      ]
    },
    "sourceType": "script",
    "mtime": 1558776571362
  }
}