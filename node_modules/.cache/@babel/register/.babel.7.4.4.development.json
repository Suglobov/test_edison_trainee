{
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\server\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _curent = _interopRequireDefault(require(\"../app/psychics/curent.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar WebSocket = require('ws');\n\nvar path = require('path');\n\nvar config = require('config');\n\nvar StateMachine = require('javascript-state-machine');\n\nvar port = config.get('server.port');\nvar portWs = config.get('server.portWs');\n// экстрасенсы\nvar ms = {\n  // сообщения\n  error: {\n    wrongFormat: {\n      error: 'не верный формат. json ожидается'\n    },\n    onInvalidTransition: function onInvalidTransition(transition, from, to) {\n      return {\n        error: \"\".concat(transition, \" not allowed \").concat(from, \" \").concat(to, \" state\")\n      };\n    },\n    wrongNumber: {\n      error: 'число должно быть 2х значное'\n    }\n  }\n}; // openning a websocket server\n\nvar wss = new WebSocket.Server({\n  port: portWs\n});\n\nvar broadcast = function broadcast(data) {\n  wss.clients.forEach(function each(client) {\n    if (client.readyState === WebSocket.OPEN) {\n      client.send(JSON.stringify(data));\n    }\n  });\n};\n\nwss.on('connection', function (ws) {\n  var wsJsonSend = function wsJsonSend(data) {\n    var jsonData = JSON.stringify(data);\n    ws.send(jsonData);\n  };\n\n  var guesses = [];\n  var fsm = new StateMachine({\n    /*\n    beginning - отправляем рейтинг, ждем запроса догадок\n    guess - догадки отправлены, ждем правильный ответ\n    */\n    init: 'begin',\n    transitions: [{\n      name: 'toGuess',\n      from: 'begin',\n      to: 'guess'\n    }, {\n      name: 'toBegin',\n      from: 'guess',\n      to: 'begin'\n    }],\n    methods: {\n      onBegin: function onBegin() {\n        wsJsonSend({\n          'psychics': _curent[\"default\"].valueOf(),\n          state: this.state\n        });\n      },\n      onGuess: function onGuess() {\n        guesses = _curent[\"default\"].guesses();\n        wsJsonSend({\n          'guesses': guesses,\n          state: this.state\n        });\n      },\n      onInvalidTransition: function onInvalidTransition(transition, from, to) {\n        wsJsonSend(ms.error.onInvalidTransition(transition, from, to));\n      }\n    }\n  });\n  ws.on('message', function (message) {\n    var msg = {};\n\n    try {\n      msg = JSON.parse(message);\n    } catch (e) {\n      wsJsonSend(ms.error.wrongFormat);\n      return;\n    }\n\n    if (msg.step === 'toGuess') {\n      fsm.toGuess();\n    }\n\n    if (msg.answer !== undefined) {\n      if (msg.answer >= 10 && msg.answer < 100) {\n        _curent[\"default\"].recalcRating(msg.answer, guesses);\n\n        broadcast({\n          'psychics': _curent[\"default\"].valueOf()\n        });\n        fsm.toBegin();\n      } else {\n        wsJsonSend(ms.error.wrongNumber);\n      }\n    } // console.log(message, wss.clients);\n    // wss.clients.forEach((client) => {\n    //     client.send(message);\n    // })\n\n  });\n});\nvar app = express();\napp.listen(port, function () {\n  console.log(\"Server was started on '\".concat(port, \"'\"));\n});\napp.set('view engine', 'pug');\napp.set('views', path.resolve(__dirname, '../views'));\napp.use(express[\"static\"](path.resolve(__dirname, '../assets')));\napp.get('/', function (req, res) {\n  // console.log(new Psychic('name', 0));\n  res.render('index');\n}); // const config = require('config');\n// const express = require('express');\n// let app = express();\n// let expressWs = require('express-ws')(app);\n//\n// app.set('view engine', 'pug');\n//\n// app.ws('/', (ws, req, next) => {\n//     ws.on('message', function (msg) {\n//         console.log('msg:', msg)\n//     })\n// });\n// const port = config.get('port');\n// app.listen(port, () => {\n//     console.log(`Server was started on '${port}'`);\n// });\n// const Express = require('express');\n// const expressWs = require('express-ws');\n//\n// const app = new Express();\n// expressWs(app);\n// app.set('view engine', 'pug');\n//\n// // app.get('/', function (req, res) {\n// //     res.render('index', {})\n// // });\n//\n// app.ws('/', function(ws, req, next) {\n//     ws.on('message', function(msg) {\n//         console.log('msg:', msg)\n//     })\n// });\n//\n// app().listen(config.get('port'), () => {\n//     // eslint-disable-next-line\n//     console.log(`Server was started on '${port}'`);\n// });\n//\n// // export default app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "WebSocket",
        "path",
        "config",
        "StateMachine",
        "port",
        "get",
        "portWs",
        "ms",
        "error",
        "wrongFormat",
        "onInvalidTransition",
        "transition",
        "from",
        "to",
        "wrongNumber",
        "wss",
        "Server",
        "broadcast",
        "data",
        "clients",
        "forEach",
        "each",
        "client",
        "readyState",
        "OPEN",
        "send",
        "JSON",
        "stringify",
        "on",
        "ws",
        "wsJsonSend",
        "jsonData",
        "guesses",
        "fsm",
        "init",
        "transitions",
        "name",
        "methods",
        "onBegin",
        "psychics",
        "valueOf",
        "state",
        "onGuess",
        "message",
        "msg",
        "parse",
        "e",
        "step",
        "toGuess",
        "answer",
        "undefined",
        "recalcRating",
        "toBegin",
        "app",
        "listen",
        "console",
        "log",
        "set",
        "resolve",
        "__dirname",
        "use",
        "req",
        "res",
        "render"
      ],
      "mappings": ";;AAWA;;;;AAXA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,IAAD,CAAzB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMI,YAAY,GAAGJ,OAAO,CAAC,0BAAD,CAA5B;;AAGA,IAAMK,IAAI,GAAGF,MAAM,CAACG,GAAP,CAAW,aAAX,CAAb;AACA,IAAMC,MAAM,GAAGJ,MAAM,CAACG,GAAP,CAAW,eAAX,CAAf;AAGkD;AAElD,IAAME,EAAE,GAAG;AAAE;AACTC,EAAAA,KAAK,EAAE;AACHC,IAAAA,WAAW,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KADV;AAEHE,IAAAA,mBAAmB,EAAE,6BAACC,UAAD,EAAaC,IAAb,EAAmBC,EAAnB;AAAA,aAChB;AAAEL,QAAAA,KAAK,YAAKG,UAAL,0BAA+BC,IAA/B,cAAuCC,EAAvC;AAAP,OADgB;AAAA,KAFlB;AAIHC,IAAAA,WAAW,EAAE;AAAEN,MAAAA,KAAK,EAAE;AAAT;AAJV;AADA,CAAX,C,CASA;;AACA,IAAMO,GAAG,GAAG,IAAIf,SAAS,CAACgB,MAAd,CAAqB;AAAEZ,EAAAA,IAAI,EAAEE;AAAR,CAArB,CAAZ;;AACA,IAAMW,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAU;AACxBH,EAAAA,GAAG,CAACI,OAAJ,CAAYC,OAAZ,CAAoB,SAASC,IAAT,CAAcC,MAAd,EAAsB;AACtC,QAAIA,MAAM,CAACC,UAAP,KAAsBvB,SAAS,CAACwB,IAApC,EAA0C;AACtCF,MAAAA,MAAM,CAACG,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAAZ;AACH;AACJ,GAJD;AAKH,CAND;;AAOAH,GAAG,CAACa,EAAJ,CAAO,YAAP,EAAqB,UAACC,EAAD,EAAQ;AACzB,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACZ,IAAD,EAAU;AACzB,QAAMa,QAAQ,GAAGL,IAAI,CAACC,SAAL,CAAeT,IAAf,CAAjB;AACAW,IAAAA,EAAE,CAACJ,IAAH,CAAQM,QAAR;AACH,GAHD;;AAIA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAMC,GAAG,GAAG,IAAI9B,YAAJ,CAAiB;AACzB;;;;AAIA+B,IAAAA,IAAI,EAAE,OALmB;AAMzBC,IAAAA,WAAW,EAAE,CACT;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBxB,MAAAA,IAAI,EAAE,OAAzB;AAAkCC,MAAAA,EAAE,EAAE;AAAtC,KADS,EAET;AAAEuB,MAAAA,IAAI,EAAE,SAAR;AAAmBxB,MAAAA,IAAI,EAAE,OAAzB;AAAkCC,MAAAA,EAAE,EAAE;AAAtC,KAFS,CANY;AAUzBwB,IAAAA,OAAO,EAAE;AACLC,MAAAA,OAAO,EAAE,mBAAY;AACjBR,QAAAA,UAAU,CAAC;AACP,sBAAYS,mBAASC,OAAT,EADL;AAEPC,UAAAA,KAAK,EAAE,KAAKA;AAFL,SAAD,CAAV;AAIH,OANI;AAOLC,MAAAA,OAAO,EAAE,mBAAY;AACjBV,QAAAA,OAAO,GAAGO,mBAASP,OAAT,EAAV;AACAF,QAAAA,UAAU,CAAC;AACP,qBAAWE,OADJ;AAEPS,UAAAA,KAAK,EAAE,KAAKA;AAFL,SAAD,CAAV;AAIH,OAbI;AAcL/B,MAAAA,mBAAmB,EAAE,6BAACC,UAAD,EAAaC,IAAb,EAAmBC,EAAnB,EAA0B;AAC3CiB,QAAAA,UAAU,CAACvB,EAAE,CAACC,KAAH,CAASE,mBAAT,CAA6BC,UAA7B,EAAyCC,IAAzC,EAA+CC,EAA/C,CAAD,CAAV;AACH;AAhBI;AAVgB,GAAjB,CAAZ;AA8BAgB,EAAAA,EAAE,CAACD,EAAH,CAAM,SAAN,EAAiB,UAACe,OAAD,EAAa;AAC1B,QAAIC,GAAG,GAAG,EAAV;;AACA,QAAI;AACAA,MAAAA,GAAG,GAAGlB,IAAI,CAACmB,KAAL,CAAWF,OAAX,CAAN;AACH,KAFD,CAEE,OAAOG,CAAP,EAAU;AACRhB,MAAAA,UAAU,CAACvB,EAAE,CAACC,KAAH,CAASC,WAAV,CAAV;AACA;AACH;;AAED,QAAImC,GAAG,CAACG,IAAJ,KAAa,SAAjB,EAA4B;AACxBd,MAAAA,GAAG,CAACe,OAAJ;AACH;;AACD,QAAIJ,GAAG,CAACK,MAAJ,KAAeC,SAAnB,EAA8B;AAC1B,UAAIN,GAAG,CAACK,MAAJ,IAAc,EAAd,IAAoBL,GAAG,CAACK,MAAJ,GAAa,GAArC,EAA0C;AACtCV,2BAASY,YAAT,CAAsBP,GAAG,CAACK,MAA1B,EAAkCjB,OAAlC;;AACAf,QAAAA,SAAS,CAAC;AAAE,sBAAYsB,mBAASC,OAAT;AAAd,SAAD,CAAT;AACAP,QAAAA,GAAG,CAACmB,OAAJ;AACH,OAJD,MAIO;AACHtB,QAAAA,UAAU,CAACvB,EAAE,CAACC,KAAH,CAASM,WAAV,CAAV;AACH;AACJ,KApByB,CAqB1B;AAGA;AACA;AACA;;AACH,GA3BD;AA4BH,CAhED;AAkEA,IAAMuC,GAAG,GAAGvD,OAAO,EAAnB;AACAuD,GAAG,CAACC,MAAJ,CAAWlD,IAAX,EAAiB,YAAY;AACzBmD,EAAAA,OAAO,CAACC,GAAR,kCAAsCpD,IAAtC;AACH,CAFD;AAIAiD,GAAG,CAACI,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAJ,GAAG,CAACI,GAAJ,CAAQ,OAAR,EAAiBxD,IAAI,CAACyD,OAAL,CAAaC,SAAb,EAAwB,UAAxB,CAAjB;AACAN,GAAG,CAACO,GAAJ,CAAQ9D,OAAO,UAAP,CAAeG,IAAI,CAACyD,OAAL,CAAaC,SAAb,EAAwB,WAAxB,CAAf,CAAR;AAEAN,GAAG,CAAChD,GAAJ,CAAQ,GAAR,EAAa,UAAUwD,GAAV,EAAeC,GAAf,EAAoB;AAC7B;AACAA,EAAAA,GAAG,CAACC,MAAJ,CAAW,OAAX;AACH,CAHD,E,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
      "sourcesContent": [
        "const express = require('express');\nconst WebSocket = require('ws');\nconst path = require('path');\nconst config = require('config');\nconst StateMachine = require('javascript-state-machine');\n\n\nconst port = config.get('server.port');\nconst portWs = config.get('server.portWs');\n\n\nimport psychics from '../app/psychics/curent.js'; // экстрасенсы\n\nconst ms = { // сообщения\n    error: {\n        wrongFormat: { error: 'не верный формат. json ожидается' },\n        onInvalidTransition: (transition, from, to) =>\n            ({ error: `${transition} not allowed ${from} ${to} state` }),\n        wrongNumber: { error: 'число должно быть 2х значное' },\n    },\n};\n\n// openning a websocket server\nconst wss = new WebSocket.Server({ port: portWs });\nconst broadcast = (data) => {\n    wss.clients.forEach(function each(client) {\n        if (client.readyState === WebSocket.OPEN) {\n            client.send(JSON.stringify(data));\n        }\n    });\n};\nwss.on('connection', (ws) => {\n    const wsJsonSend = (data) => {\n        const jsonData = JSON.stringify(data);\n        ws.send(jsonData);\n    };\n    let guesses = [];\n    const fsm = new StateMachine({\n        /*\n        beginning - отправляем рейтинг, ждем запроса догадок\n        guess - догадки отправлены, ждем правильный ответ\n        */\n        init: 'begin',\n        transitions: [\n            { name: 'toGuess', from: 'begin', to: 'guess' },\n            { name: 'toBegin', from: 'guess', to: 'begin' },\n        ],\n        methods: {\n            onBegin: function () {\n                wsJsonSend({\n                    'psychics': psychics.valueOf(),\n                    state: this.state,\n                });\n            },\n            onGuess: function () {\n                guesses = psychics.guesses();\n                wsJsonSend({\n                    'guesses': guesses,\n                    state: this.state,\n                });\n            },\n            onInvalidTransition: (transition, from, to) => {\n                wsJsonSend(ms.error.onInvalidTransition(transition, from, to));\n            },\n        }\n    });\n\n    ws.on('message', (message) => {\n        let msg = {};\n        try {\n            msg = JSON.parse(message);\n        } catch (e) {\n            wsJsonSend(ms.error.wrongFormat);\n            return;\n        }\n\n        if (msg.step === 'toGuess') {\n            fsm.toGuess();\n        }\n        if (msg.answer !== undefined) {\n            if (msg.answer >= 10 && msg.answer < 100) {\n                psychics.recalcRating(msg.answer, guesses);\n                broadcast({ 'psychics': psychics.valueOf() });\n                fsm.toBegin();\n            } else {\n                wsJsonSend(ms.error.wrongNumber);\n            }\n        }\n        // console.log(message, wss.clients);\n\n\n        // wss.clients.forEach((client) => {\n        //     client.send(message);\n        // })\n    })\n});\n\nconst app = express();\napp.listen(port, function () {\n    console.log(`Server was started on '${port}'`);\n});\n\napp.set('view engine', 'pug');\napp.set('views', path.resolve(__dirname, '../views'));\napp.use(express.static(path.resolve(__dirname, '../assets')));\n\napp.get('/', function (req, res) {\n    // console.log(new Psychic('name', 0));\n    res.render('index');\n});\n\n\n// const config = require('config');\n// const express = require('express');\n// let app = express();\n// let expressWs = require('express-ws')(app);\n//\n// app.set('view engine', 'pug');\n//\n// app.ws('/', (ws, req, next) => {\n//     ws.on('message', function (msg) {\n//         console.log('msg:', msg)\n//     })\n// });\n// const port = config.get('port');\n// app.listen(port, () => {\n//     console.log(`Server was started on '${port}'`);\n// });\n// const Express = require('express');\n// const expressWs = require('express-ws');\n//\n// const app = new Express();\n// expressWs(app);\n// app.set('view engine', 'pug');\n//\n// // app.get('/', function (req, res) {\n// //     res.render('index', {})\n// // });\n//\n// app.ws('/', function(ws, req, next) {\n//     ws.on('message', function(msg) {\n//         console.log('msg:', msg)\n//     })\n// });\n//\n// app().listen(config.get('port'), () => {\n//     // eslint-disable-next-line\n//     console.log(`Server was started on '${port}'`);\n// });\n//\n// // export default app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1558776585281
  },
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\server\\\\psychic.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\psychic.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\psychic.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\psychic.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
        "sourceFileName": "psychic.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Psychics = exports.Psychic = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Psychic =\n/*#__PURE__*/\nfunction () {\n  _createClass(Psychic, null, [{\n    key: \"id\",\n    value: function id() {\n      if (!this.latestId) this.latestId = 1;else this.latestId += 1;\n      return this.latestId;\n    }\n  }, {\n    key: \"guessesFunc\",\n    value: function guessesFunc() {\n      return Psychic.randomInteger(10, 99);\n    }\n  }, {\n    key: \"randomInteger\",\n    value: function randomInteger(min, max) {\n      var rand = min + Math.random() * (max - min + 1);\n      rand = Math.floor(rand);\n      return rand;\n    }\n  }]);\n\n  function Psychic(_ref) {\n    var _ref$name = _ref.name,\n        name = _ref$name === void 0 ? '' : _ref$name,\n        _ref$rating = _ref.rating,\n        rating = _ref$rating === void 0 ? 0 : _ref$rating,\n        _ref$guess = _ref.guess,\n        guess = _ref$guess === void 0 ? Psychic.guessesFunc : _ref$guess;\n\n    _classCallCheck(this, Psychic);\n\n    this.id = Psychic.id();\n    this.name = name;\n    this.rating = rating;\n    this.guess = guess;\n  }\n\n  _createClass(Psychic, [{\n    key: \"ratingIncrement\",\n    value: function ratingIncrement() {\n      this.rating += 1;\n    }\n  }, {\n    key: \"ratingDecrease\",\n    value: function ratingDecrease() {\n      this.rating -= 1;\n\n      if (this.rating < 0) {\n        this.rating = 0;\n      }\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return {\n        'name': this.name,\n        'rating': this.rating\n      };\n    }\n  }]);\n\n  return Psychic;\n}();\n\nexports.Psychic = Psychic;\n\nvar Psychics =\n/*#__PURE__*/\nfunction () {\n  function Psychics(arrProp) {\n    _classCallCheck(this, Psychics);\n\n    this.psychics = arrProp.map(function (el) {\n      return new Psychic(el);\n    });\n  }\n\n  _createClass(Psychics, [{\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.psychics.map(function (el) {\n        return el.valueOf();\n      });\n    }\n  }, {\n    key: \"guesses\",\n    value: function guesses() {\n      var isJson = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var guesses = this.psychics.map(function (el) {\n        return el.guess();\n      });\n\n      if (isJson) {\n        return JSON.stringify(guesses);\n      } else {\n        return guesses;\n      }\n    }\n  }, {\n    key: \"recalcRating\",\n    value: function recalcRating(answer, guesses) {\n      var winIndex = guesses.indexOf(Number(answer));\n      this.psychics.forEach(function (ps, index) {\n        if (winIndex === index) {\n          ps.ratingIncrement();\n        } else {\n          ps.ratingDecrease();\n        }\n      });\n    }\n  }]);\n\n  return Psychics;\n}();\n\nexports.Psychics = Psychics;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBzeWNoaWMuanMiXSwibmFtZXMiOlsiUHN5Y2hpYyIsImxhdGVzdElkIiwicmFuZG9tSW50ZWdlciIsIm1pbiIsIm1heCIsInJhbmQiLCJNYXRoIiwicmFuZG9tIiwiZmxvb3IiLCJuYW1lIiwicmF0aW5nIiwiZ3Vlc3MiLCJndWVzc2VzRnVuYyIsImlkIiwiUHN5Y2hpY3MiLCJhcnJQcm9wIiwicHN5Y2hpY3MiLCJtYXAiLCJlbCIsInZhbHVlT2YiLCJpc0pzb24iLCJndWVzc2VzIiwiSlNPTiIsInN0cmluZ2lmeSIsImFuc3dlciIsIndpbkluZGV4IiwiaW5kZXhPZiIsIk51bWJlciIsImZvckVhY2giLCJwcyIsImluZGV4IiwicmF0aW5nSW5jcmVtZW50IiwicmF0aW5nRGVjcmVhc2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7SUFBYUEsTzs7Ozs7eUJBQ0c7QUFDUixVQUFJLENBQUMsS0FBS0MsUUFBVixFQUFvQixLQUFLQSxRQUFMLEdBQWdCLENBQWhCLENBQXBCLEtBQ0ssS0FBS0EsUUFBTCxJQUFpQixDQUFqQjtBQUNMLGFBQU8sS0FBS0EsUUFBWjtBQUNIOzs7a0NBRW9CO0FBQ2pCLGFBQU9ELE9BQU8sQ0FBQ0UsYUFBUixDQUFzQixFQUF0QixFQUEwQixFQUExQixDQUFQO0FBQ0g7OztrQ0FFb0JDLEcsRUFBS0MsRyxFQUFLO0FBQzNCLFVBQUlDLElBQUksR0FBR0YsR0FBRyxHQUFHRyxJQUFJLENBQUNDLE1BQUwsTUFBaUJILEdBQUcsR0FBR0QsR0FBTixHQUFZLENBQTdCLENBQWpCO0FBQ0FFLE1BQUFBLElBQUksR0FBR0MsSUFBSSxDQUFDRSxLQUFMLENBQVdILElBQVgsQ0FBUDtBQUNBLGFBQU9BLElBQVA7QUFDSDs7O0FBRUQseUJBQW9FO0FBQUEseUJBQXRESSxJQUFzRDtBQUFBLFFBQXREQSxJQUFzRCwwQkFBL0MsRUFBK0M7QUFBQSwyQkFBM0NDLE1BQTJDO0FBQUEsUUFBM0NBLE1BQTJDLDRCQUFsQyxDQUFrQztBQUFBLDBCQUEvQkMsS0FBK0I7QUFBQSxRQUEvQkEsS0FBK0IsMkJBQXZCWCxPQUFPLENBQUNZLFdBQWU7O0FBQUE7O0FBQ2hFLFNBQUtDLEVBQUwsR0FBVWIsT0FBTyxDQUFDYSxFQUFSLEVBQVY7QUFDQSxTQUFLSixJQUFMLEdBQVlBLElBQVo7QUFDQSxTQUFLQyxNQUFMLEdBQWNBLE1BQWQ7QUFDQSxTQUFLQyxLQUFMLEdBQWFBLEtBQWI7QUFDSDs7OztzQ0FFaUI7QUFDZCxXQUFLRCxNQUFMLElBQWUsQ0FBZjtBQUNIOzs7cUNBRWdCO0FBQ2IsV0FBS0EsTUFBTCxJQUFlLENBQWY7O0FBQ0EsVUFBSSxLQUFLQSxNQUFMLEdBQWMsQ0FBbEIsRUFBcUI7QUFDakIsYUFBS0EsTUFBTCxHQUFjLENBQWQ7QUFDSDtBQUNKOzs7OEJBRVM7QUFDTixhQUFPO0FBQ0gsZ0JBQVEsS0FBS0QsSUFEVjtBQUVILGtCQUFVLEtBQUtDO0FBRlosT0FBUDtBQUlIOzs7Ozs7OztJQUdRSSxROzs7QUFDVCxvQkFBWUMsT0FBWixFQUFxQjtBQUFBOztBQUNqQixTQUFLQyxRQUFMLEdBQWdCRCxPQUFPLENBQUNFLEdBQVIsQ0FBWSxVQUFBQyxFQUFFO0FBQUEsYUFBSSxJQUFJbEIsT0FBSixDQUFZa0IsRUFBWixDQUFKO0FBQUEsS0FBZCxDQUFoQjtBQUNIOzs7OzhCQUVTO0FBQ04sYUFBTyxLQUFLRixRQUFMLENBQWNDLEdBQWQsQ0FBa0IsVUFBQUMsRUFBRTtBQUFBLGVBQUlBLEVBQUUsQ0FBQ0MsT0FBSCxFQUFKO0FBQUEsT0FBcEIsQ0FBUDtBQUNIOzs7OEJBRXVCO0FBQUEsVUFBaEJDLE1BQWdCLHVFQUFQLEtBQU87QUFDcEIsVUFBTUMsT0FBTyxHQUFHLEtBQUtMLFFBQUwsQ0FBY0MsR0FBZCxDQUFrQixVQUFBQyxFQUFFO0FBQUEsZUFBSUEsRUFBRSxDQUFDUCxLQUFILEVBQUo7QUFBQSxPQUFwQixDQUFoQjs7QUFDQSxVQUFJUyxNQUFKLEVBQVk7QUFDUixlQUFPRSxJQUFJLENBQUNDLFNBQUwsQ0FBZUYsT0FBZixDQUFQO0FBQ0gsT0FGRCxNQUVPO0FBQ0gsZUFBT0EsT0FBUDtBQUNIO0FBQ0o7OztpQ0FFWUcsTSxFQUFRSCxPLEVBQVM7QUFDMUIsVUFBTUksUUFBUSxHQUFHSixPQUFPLENBQUNLLE9BQVIsQ0FBZ0JDLE1BQU0sQ0FBQ0gsTUFBRCxDQUF0QixDQUFqQjtBQUNBLFdBQUtSLFFBQUwsQ0FBY1ksT0FBZCxDQUFzQixVQUFDQyxFQUFELEVBQUtDLEtBQUwsRUFBZTtBQUNqQyxZQUFJTCxRQUFRLEtBQUtLLEtBQWpCLEVBQXdCO0FBQ3BCRCxVQUFBQSxFQUFFLENBQUNFLGVBQUg7QUFDSCxTQUZELE1BRU87QUFDSEYsVUFBQUEsRUFBRSxDQUFDRyxjQUFIO0FBQ0g7QUFDSixPQU5EO0FBT0giLCJzb3VyY2VSb290IjoiRDpcXE9wZW5TZXJ2ZXJcXGRvbWFpbnNcXGxvY2FsLmxvY1xcdGVzdHNcXHRlc3RfZWRpc29uX3RyYWluZWVcXHNlcnZlciIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBQc3ljaGljIHtcclxuICAgIHN0YXRpYyBpZCgpIHtcclxuICAgICAgICBpZiAoIXRoaXMubGF0ZXN0SWQpIHRoaXMubGF0ZXN0SWQgPSAxO1xyXG4gICAgICAgIGVsc2UgdGhpcy5sYXRlc3RJZCArPSAxO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmxhdGVzdElkO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBndWVzc2VzRnVuYygpIHtcclxuICAgICAgICByZXR1cm4gUHN5Y2hpYy5yYW5kb21JbnRlZ2VyKDEwLCA5OSk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIHJhbmRvbUludGVnZXIobWluLCBtYXgpIHtcclxuICAgICAgICB2YXIgcmFuZCA9IG1pbiArIE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluICsgMSk7XHJcbiAgICAgICAgcmFuZCA9IE1hdGguZmxvb3IocmFuZCk7XHJcbiAgICAgICAgcmV0dXJuIHJhbmQ7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3RydWN0b3IoeyBuYW1lID0gJycsIHJhdGluZyA9IDAsIGd1ZXNzID0gUHN5Y2hpYy5ndWVzc2VzRnVuYyB9KSB7XHJcbiAgICAgICAgdGhpcy5pZCA9IFBzeWNoaWMuaWQoKTtcclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMucmF0aW5nID0gcmF0aW5nO1xyXG4gICAgICAgIHRoaXMuZ3Vlc3MgPSBndWVzcztcclxuICAgIH1cclxuXHJcbiAgICByYXRpbmdJbmNyZW1lbnQoKSB7XHJcbiAgICAgICAgdGhpcy5yYXRpbmcgKz0gMTtcclxuICAgIH1cclxuXHJcbiAgICByYXRpbmdEZWNyZWFzZSgpIHtcclxuICAgICAgICB0aGlzLnJhdGluZyAtPSAxO1xyXG4gICAgICAgIGlmICh0aGlzLnJhdGluZyA8IDApIHtcclxuICAgICAgICAgICAgdGhpcy5yYXRpbmcgPSAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB2YWx1ZU9mKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICduYW1lJzogdGhpcy5uYW1lLFxyXG4gICAgICAgICAgICAncmF0aW5nJzogdGhpcy5yYXRpbmcsXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFBzeWNoaWNzIHtcclxuICAgIGNvbnN0cnVjdG9yKGFyclByb3ApIHtcclxuICAgICAgICB0aGlzLnBzeWNoaWNzID0gYXJyUHJvcC5tYXAoZWwgPT4gbmV3IFBzeWNoaWMoZWwpKTtcclxuICAgIH1cclxuXHJcbiAgICB2YWx1ZU9mKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnBzeWNoaWNzLm1hcChlbCA9PiBlbC52YWx1ZU9mKCkpO1xyXG4gICAgfVxyXG5cclxuICAgIGd1ZXNzZXMoaXNKc29uID0gZmFsc2UpIHtcclxuICAgICAgICBjb25zdCBndWVzc2VzID0gdGhpcy5wc3ljaGljcy5tYXAoZWwgPT4gZWwuZ3Vlc3MoKSk7XHJcbiAgICAgICAgaWYgKGlzSnNvbikge1xyXG4gICAgICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoZ3Vlc3Nlcyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIGd1ZXNzZXM7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJlY2FsY1JhdGluZyhhbnN3ZXIsIGd1ZXNzZXMpIHtcclxuICAgICAgICBjb25zdCB3aW5JbmRleCA9IGd1ZXNzZXMuaW5kZXhPZihOdW1iZXIoYW5zd2VyKSk7XHJcbiAgICAgICAgdGhpcy5wc3ljaGljcy5mb3JFYWNoKChwcywgaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgaWYgKHdpbkluZGV4ID09PSBpbmRleCkge1xyXG4gICAgICAgICAgICAgICAgcHMucmF0aW5nSW5jcmVtZW50KCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBwcy5yYXRpbmdEZWNyZWFzZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "psychic.js"
      ],
      "names": [
        "Psychic",
        "latestId",
        "randomInteger",
        "min",
        "max",
        "rand",
        "Math",
        "random",
        "floor",
        "name",
        "rating",
        "guess",
        "guessesFunc",
        "id",
        "Psychics",
        "arrProp",
        "psychics",
        "map",
        "el",
        "valueOf",
        "isJson",
        "guesses",
        "JSON",
        "stringify",
        "answer",
        "winIndex",
        "indexOf",
        "Number",
        "forEach",
        "ps",
        "index",
        "ratingIncrement",
        "ratingDecrease"
      ],
      "mappings": ";;;;;;;;;;;;;IAAaA,O;;;;;yBACG;AACR,UAAI,CAAC,KAAKC,QAAV,EAAoB,KAAKA,QAAL,GAAgB,CAAhB,CAApB,KACK,KAAKA,QAAL,IAAiB,CAAjB;AACL,aAAO,KAAKA,QAAZ;AACH;;;kCAEoB;AACjB,aAAOD,OAAO,CAACE,aAAR,CAAsB,EAAtB,EAA0B,EAA1B,CAAP;AACH;;;kCAEoBC,G,EAAKC,G,EAAK;AAC3B,UAAIC,IAAI,GAAGF,GAAG,GAAGG,IAAI,CAACC,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAjB;AACAE,MAAAA,IAAI,GAAGC,IAAI,CAACE,KAAL,CAAWH,IAAX,CAAP;AACA,aAAOA,IAAP;AACH;;;AAED,yBAAoE;AAAA,yBAAtDI,IAAsD;AAAA,QAAtDA,IAAsD,0BAA/C,EAA+C;AAAA,2BAA3CC,MAA2C;AAAA,QAA3CA,MAA2C,4BAAlC,CAAkC;AAAA,0BAA/BC,KAA+B;AAAA,QAA/BA,KAA+B,2BAAvBX,OAAO,CAACY,WAAe;;AAAA;;AAChE,SAAKC,EAAL,GAAUb,OAAO,CAACa,EAAR,EAAV;AACA,SAAKJ,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACH;;;;sCAEiB;AACd,WAAKD,MAAL,IAAe,CAAf;AACH;;;qCAEgB;AACb,WAAKA,MAAL,IAAe,CAAf;;AACA,UAAI,KAAKA,MAAL,GAAc,CAAlB,EAAqB;AACjB,aAAKA,MAAL,GAAc,CAAd;AACH;AACJ;;;8BAES;AACN,aAAO;AACH,gBAAQ,KAAKD,IADV;AAEH,kBAAU,KAAKC;AAFZ,OAAP;AAIH;;;;;;;;IAGQI,Q;;;AACT,oBAAYC,OAAZ,EAAqB;AAAA;;AACjB,SAAKC,QAAL,GAAgBD,OAAO,CAACE,GAAR,CAAY,UAAAC,EAAE;AAAA,aAAI,IAAIlB,OAAJ,CAAYkB,EAAZ,CAAJ;AAAA,KAAd,CAAhB;AACH;;;;8BAES;AACN,aAAO,KAAKF,QAAL,CAAcC,GAAd,CAAkB,UAAAC,EAAE;AAAA,eAAIA,EAAE,CAACC,OAAH,EAAJ;AAAA,OAApB,CAAP;AACH;;;8BAEuB;AAAA,UAAhBC,MAAgB,uEAAP,KAAO;AACpB,UAAMC,OAAO,GAAG,KAAKL,QAAL,CAAcC,GAAd,CAAkB,UAAAC,EAAE;AAAA,eAAIA,EAAE,CAACP,KAAH,EAAJ;AAAA,OAApB,CAAhB;;AACA,UAAIS,MAAJ,EAAY;AACR,eAAOE,IAAI,CAACC,SAAL,CAAeF,OAAf,CAAP;AACH,OAFD,MAEO;AACH,eAAOA,OAAP;AACH;AACJ;;;iCAEYG,M,EAAQH,O,EAAS;AAC1B,UAAMI,QAAQ,GAAGJ,OAAO,CAACK,OAAR,CAAgBC,MAAM,CAACH,MAAD,CAAtB,CAAjB;AACA,WAAKR,QAAL,CAAcY,OAAd,CAAsB,UAACC,EAAD,EAAKC,KAAL,EAAe;AACjC,YAAIL,QAAQ,KAAKK,KAAjB,EAAwB;AACpBD,UAAAA,EAAE,CAACE,eAAH;AACH,SAFD,MAEO;AACHF,UAAAA,EAAE,CAACG,cAAH;AACH;AACJ,OAND;AAOH",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
      "sourcesContent": [
        "export class Psychic {\r\n    static id() {\r\n        if (!this.latestId) this.latestId = 1;\r\n        else this.latestId += 1;\r\n        return this.latestId;\r\n    }\r\n\r\n    static guessesFunc() {\r\n        return Psychic.randomInteger(10, 99);\r\n    }\r\n\r\n    static randomInteger(min, max) {\r\n        var rand = min + Math.random() * (max - min + 1);\r\n        rand = Math.floor(rand);\r\n        return rand;\r\n    }\r\n\r\n    constructor({ name = '', rating = 0, guess = Psychic.guessesFunc }) {\r\n        this.id = Psychic.id();\r\n        this.name = name;\r\n        this.rating = rating;\r\n        this.guess = guess;\r\n    }\r\n\r\n    ratingIncrement() {\r\n        this.rating += 1;\r\n    }\r\n\r\n    ratingDecrease() {\r\n        this.rating -= 1;\r\n        if (this.rating < 0) {\r\n            this.rating = 0;\r\n        }\r\n    }\r\n\r\n    valueOf() {\r\n        return {\r\n            'name': this.name,\r\n            'rating': this.rating,\r\n        };\r\n    }\r\n}\r\n\r\nexport class Psychics {\r\n    constructor(arrProp) {\r\n        this.psychics = arrProp.map(el => new Psychic(el));\r\n    }\r\n\r\n    valueOf() {\r\n        return this.psychics.map(el => el.valueOf());\r\n    }\r\n\r\n    guesses(isJson = false) {\r\n        const guesses = this.psychics.map(el => el.guess());\r\n        if (isJson) {\r\n            return JSON.stringify(guesses);\r\n        } else {\r\n            return guesses;\r\n        }\r\n    }\r\n\r\n    recalcRating(answer, guesses) {\r\n        const winIndex = guesses.indexOf(Number(answer));\r\n        this.psychics.forEach((ps, index) => {\r\n            if (winIndex === index) {\r\n                ps.ratingIncrement();\r\n            } else {\r\n                ps.ratingDecrease();\r\n            }\r\n        });\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558776008990
  },
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\\\\psychics\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\\\\psychics\\\\psychic.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics\\psychic.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics\\psychic.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics\\psychic.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics",
        "sourceFileName": "psychic.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Psychics = exports.Psychic = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Psychic =\n/*#__PURE__*/\nfunction () {\n  function Psychic(_ref) {\n    var _ref$name = _ref.name,\n        name = _ref$name === void 0 ? '' : _ref$name,\n        _ref$rating = _ref.rating,\n        rating = _ref$rating === void 0 ? 0 : _ref$rating,\n        _ref$guess = _ref.guess,\n        guess = _ref$guess === void 0 ? Psychic.guessesFunc : _ref$guess,\n        _ref$photoPath = _ref.photoPath,\n        photoPath = _ref$photoPath === void 0 ? '' : _ref$photoPath;\n\n    _classCallCheck(this, Psychic);\n\n    this.id = Psychic.id();\n    this.name = name;\n    this.rating = rating;\n    this.guess = guess;\n    this.photoPath = photoPath;\n  }\n\n  _createClass(Psychic, [{\n    key: \"ratingIncrement\",\n    value: function ratingIncrement() {\n      this.rating += 1;\n    }\n  }, {\n    key: \"ratingDecrease\",\n    value: function ratingDecrease() {\n      this.rating -= 1;\n\n      if (this.rating < 0) {\n        this.rating = 0;\n      }\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return {\n        name: this.name,\n        rating: this.rating,\n        photoPath: this.photoPath\n      };\n    }\n  }], [{\n    key: \"id\",\n    value: function id() {\n      if (!this.latestId) this.latestId = 1;else this.latestId += 1;\n      return this.latestId;\n    }\n  }, {\n    key: \"guessesFunc\",\n    value: function guessesFunc() {\n      return Psychic.randomInteger(10, 99);\n    }\n  }, {\n    key: \"randomInteger\",\n    value: function randomInteger(min, max) {\n      var rand = min + Math.random() * (max - min + 1);\n      rand = Math.floor(rand);\n      return rand;\n    }\n  }]);\n\n  return Psychic;\n}();\n\nexports.Psychic = Psychic;\nvar clientsMap = new Map();\n\nvar Psychics =\n/*#__PURE__*/\nfunction () {\n  function Psychics(arrProp) {\n    _classCallCheck(this, Psychics);\n\n    this.psychics = arrProp.map(function (el) {\n      return new Psychic(el);\n    });\n  }\n\n  _createClass(Psychics, [{\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.psychics.map(function (el) {\n        return el.valueOf();\n      });\n    }\n  }, {\n    key: \"guesses\",\n    value: function guesses(client) {\n      var guesses = this.psychics.map(function (el) {\n        return el.guess();\n      });\n      clientsMap.set(client, guesses);\n      return guesses;\n    }\n  }, {\n    key: \"recalcRating\",\n    value: function recalcRating(client, answer) {\n      var guesses = clientsMap.get(client);\n      var winIndex = guesses.indexOf(Number(answer));\n      this.psychics.forEach(function (ps, index) {\n        if (winIndex === index) {\n          ps.ratingIncrement();\n        } else {\n          ps.ratingDecrease();\n        }\n      });\n    }\n  }, {\n    key: \"deleteClientMap\",\n    value: function deleteClientMap(client) {\n      clientsMap[\"delete\"](client);\n    }\n  }]);\n\n  return Psychics;\n}();\n\nexports.Psychics = Psychics;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBzeWNoaWMuanMiXSwibmFtZXMiOlsiUHN5Y2hpYyIsIm5hbWUiLCJyYXRpbmciLCJndWVzcyIsImd1ZXNzZXNGdW5jIiwicGhvdG9QYXRoIiwiaWQiLCJsYXRlc3RJZCIsInJhbmRvbUludGVnZXIiLCJtaW4iLCJtYXgiLCJyYW5kIiwiTWF0aCIsInJhbmRvbSIsImZsb29yIiwiY2xpZW50c01hcCIsIk1hcCIsIlBzeWNoaWNzIiwiYXJyUHJvcCIsInBzeWNoaWNzIiwibWFwIiwiZWwiLCJ2YWx1ZU9mIiwiY2xpZW50IiwiZ3Vlc3NlcyIsInNldCIsImFuc3dlciIsImdldCIsIndpbkluZGV4IiwiaW5kZXhPZiIsIk51bWJlciIsImZvckVhY2giLCJwcyIsImluZGV4IiwicmF0aW5nSW5jcmVtZW50IiwicmF0aW5nRGVjcmVhc2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7SUFBYUEsTzs7O0FBQ1QseUJBQW9GO0FBQUEseUJBQXRFQyxJQUFzRTtBQUFBLFFBQXRFQSxJQUFzRSwwQkFBL0QsRUFBK0Q7QUFBQSwyQkFBM0RDLE1BQTJEO0FBQUEsUUFBM0RBLE1BQTJELDRCQUFsRCxDQUFrRDtBQUFBLDBCQUEvQ0MsS0FBK0M7QUFBQSxRQUEvQ0EsS0FBK0MsMkJBQXZDSCxPQUFPLENBQUNJLFdBQStCO0FBQUEsOEJBQWxCQyxTQUFrQjtBQUFBLFFBQWxCQSxTQUFrQiwrQkFBTixFQUFNOztBQUFBOztBQUNoRixTQUFLQyxFQUFMLEdBQVVOLE9BQU8sQ0FBQ00sRUFBUixFQUFWO0FBQ0EsU0FBS0wsSUFBTCxHQUFZQSxJQUFaO0FBQ0EsU0FBS0MsTUFBTCxHQUFjQSxNQUFkO0FBQ0EsU0FBS0MsS0FBTCxHQUFhQSxLQUFiO0FBQ0EsU0FBS0UsU0FBTCxHQUFpQkEsU0FBakI7QUFDSDs7OztzQ0FrQmlCO0FBQ2QsV0FBS0gsTUFBTCxJQUFlLENBQWY7QUFDSDs7O3FDQUVnQjtBQUNiLFdBQUtBLE1BQUwsSUFBZSxDQUFmOztBQUNBLFVBQUksS0FBS0EsTUFBTCxHQUFjLENBQWxCLEVBQXFCO0FBQ2pCLGFBQUtBLE1BQUwsR0FBYyxDQUFkO0FBQ0g7QUFDSjs7OzhCQUVTO0FBQ04sYUFBTztBQUNIRCxRQUFBQSxJQUFJLEVBQUUsS0FBS0EsSUFEUjtBQUVIQyxRQUFBQSxNQUFNLEVBQUUsS0FBS0EsTUFGVjtBQUdIRyxRQUFBQSxTQUFTLEVBQUUsS0FBS0E7QUFIYixPQUFQO0FBS0g7Ozt5QkFqQ1c7QUFDUixVQUFJLENBQUMsS0FBS0UsUUFBVixFQUFvQixLQUFLQSxRQUFMLEdBQWdCLENBQWhCLENBQXBCLEtBQ0ssS0FBS0EsUUFBTCxJQUFpQixDQUFqQjtBQUNMLGFBQU8sS0FBS0EsUUFBWjtBQUNIOzs7a0NBRW9CO0FBQ2pCLGFBQU9QLE9BQU8sQ0FBQ1EsYUFBUixDQUFzQixFQUF0QixFQUEwQixFQUExQixDQUFQO0FBQ0g7OztrQ0FFb0JDLEcsRUFBS0MsRyxFQUFLO0FBQzNCLFVBQUlDLElBQUksR0FBR0YsR0FBRyxHQUFHRyxJQUFJLENBQUNDLE1BQUwsTUFBaUJILEdBQUcsR0FBR0QsR0FBTixHQUFZLENBQTdCLENBQWpCO0FBQ0FFLE1BQUFBLElBQUksR0FBR0MsSUFBSSxDQUFDRSxLQUFMLENBQVdILElBQVgsQ0FBUDtBQUNBLGFBQU9BLElBQVA7QUFDSDs7Ozs7OztBQXNCTCxJQUFJSSxVQUFVLEdBQUcsSUFBSUMsR0FBSixFQUFqQjs7SUFFYUMsUTs7O0FBQ1Qsb0JBQVlDLE9BQVosRUFBcUI7QUFBQTs7QUFDakIsU0FBS0MsUUFBTCxHQUFnQkQsT0FBTyxDQUFDRSxHQUFSLENBQVksVUFBQUMsRUFBRTtBQUFBLGFBQUksSUFBSXJCLE9BQUosQ0FBWXFCLEVBQVosQ0FBSjtBQUFBLEtBQWQsQ0FBaEI7QUFDSDs7Ozs4QkFFUztBQUNOLGFBQU8sS0FBS0YsUUFBTCxDQUFjQyxHQUFkLENBQWtCLFVBQUFDLEVBQUU7QUFBQSxlQUFJQSxFQUFFLENBQUNDLE9BQUgsRUFBSjtBQUFBLE9BQXBCLENBQVA7QUFDSDs7OzRCQUVPQyxNLEVBQVE7QUFDWixVQUFNQyxPQUFPLEdBQUcsS0FBS0wsUUFBTCxDQUFjQyxHQUFkLENBQWtCLFVBQUFDLEVBQUU7QUFBQSxlQUFJQSxFQUFFLENBQUNsQixLQUFILEVBQUo7QUFBQSxPQUFwQixDQUFoQjtBQUNBWSxNQUFBQSxVQUFVLENBQUNVLEdBQVgsQ0FBZUYsTUFBZixFQUF1QkMsT0FBdkI7QUFDQSxhQUFPQSxPQUFQO0FBQ0g7OztpQ0FFWUQsTSxFQUFRRyxNLEVBQVE7QUFDekIsVUFBTUYsT0FBTyxHQUFHVCxVQUFVLENBQUNZLEdBQVgsQ0FBZUosTUFBZixDQUFoQjtBQUNBLFVBQU1LLFFBQVEsR0FBR0osT0FBTyxDQUFDSyxPQUFSLENBQWdCQyxNQUFNLENBQUNKLE1BQUQsQ0FBdEIsQ0FBakI7QUFDQSxXQUFLUCxRQUFMLENBQWNZLE9BQWQsQ0FBc0IsVUFBQ0MsRUFBRCxFQUFLQyxLQUFMLEVBQWU7QUFDakMsWUFBSUwsUUFBUSxLQUFLSyxLQUFqQixFQUF3QjtBQUNwQkQsVUFBQUEsRUFBRSxDQUFDRSxlQUFIO0FBQ0gsU0FGRCxNQUVPO0FBQ0hGLFVBQUFBLEVBQUUsQ0FBQ0csY0FBSDtBQUNIO0FBQ0osT0FORDtBQU9IOzs7b0NBRWVaLE0sRUFBUTtBQUNwQlIsTUFBQUEsVUFBVSxVQUFWLENBQWtCUSxNQUFsQjtBQUNIIiwic291cmNlUm9vdCI6IkQ6XFxPcGVuU2VydmVyXFxkb21haW5zXFxsb2NhbC5sb2NcXHRlc3RzXFx0ZXN0X2VkaXNvbl90cmFpbmVlXFxhcHBcXHBzeWNoaWNzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFBzeWNoaWMge1xyXG4gICAgY29uc3RydWN0b3IoeyBuYW1lID0gJycsIHJhdGluZyA9IDAsIGd1ZXNzID0gUHN5Y2hpYy5ndWVzc2VzRnVuYywgcGhvdG9QYXRoID0gJycgfSkge1xyXG4gICAgICAgIHRoaXMuaWQgPSBQc3ljaGljLmlkKCk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICAgICAgICB0aGlzLnJhdGluZyA9IHJhdGluZztcclxuICAgICAgICB0aGlzLmd1ZXNzID0gZ3Vlc3M7XHJcbiAgICAgICAgdGhpcy5waG90b1BhdGggPSBwaG90b1BhdGg7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGlkKCkge1xyXG4gICAgICAgIGlmICghdGhpcy5sYXRlc3RJZCkgdGhpcy5sYXRlc3RJZCA9IDE7XHJcbiAgICAgICAgZWxzZSB0aGlzLmxhdGVzdElkICs9IDE7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubGF0ZXN0SWQ7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGd1ZXNzZXNGdW5jKCkge1xyXG4gICAgICAgIHJldHVybiBQc3ljaGljLnJhbmRvbUludGVnZXIoMTAsIDk5KTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgcmFuZG9tSW50ZWdlcihtaW4sIG1heCkge1xyXG4gICAgICAgIHZhciByYW5kID0gbWluICsgTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4gKyAxKTtcclxuICAgICAgICByYW5kID0gTWF0aC5mbG9vcihyYW5kKTtcclxuICAgICAgICByZXR1cm4gcmFuZDtcclxuICAgIH1cclxuXHJcbiAgICByYXRpbmdJbmNyZW1lbnQoKSB7XHJcbiAgICAgICAgdGhpcy5yYXRpbmcgKz0gMTtcclxuICAgIH1cclxuXHJcbiAgICByYXRpbmdEZWNyZWFzZSgpIHtcclxuICAgICAgICB0aGlzLnJhdGluZyAtPSAxO1xyXG4gICAgICAgIGlmICh0aGlzLnJhdGluZyA8IDApIHtcclxuICAgICAgICAgICAgdGhpcy5yYXRpbmcgPSAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB2YWx1ZU9mKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZSxcclxuICAgICAgICAgICAgcmF0aW5nOiB0aGlzLnJhdGluZyxcclxuICAgICAgICAgICAgcGhvdG9QYXRoOiB0aGlzLnBob3RvUGF0aCxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcblxyXG5sZXQgY2xpZW50c01hcCA9IG5ldyBNYXAoKTtcclxuXHJcbmV4cG9ydCBjbGFzcyBQc3ljaGljcyB7XHJcbiAgICBjb25zdHJ1Y3RvcihhcnJQcm9wKSB7XHJcbiAgICAgICAgdGhpcy5wc3ljaGljcyA9IGFyclByb3AubWFwKGVsID0+IG5ldyBQc3ljaGljKGVsKSk7XHJcbiAgICB9XHJcblxyXG4gICAgdmFsdWVPZigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5wc3ljaGljcy5tYXAoZWwgPT4gZWwudmFsdWVPZigpKTtcclxuICAgIH1cclxuXHJcbiAgICBndWVzc2VzKGNsaWVudCkge1xyXG4gICAgICAgIGNvbnN0IGd1ZXNzZXMgPSB0aGlzLnBzeWNoaWNzLm1hcChlbCA9PiBlbC5ndWVzcygpKTtcclxuICAgICAgICBjbGllbnRzTWFwLnNldChjbGllbnQsIGd1ZXNzZXMpO1xyXG4gICAgICAgIHJldHVybiBndWVzc2VzO1xyXG4gICAgfVxyXG5cclxuICAgIHJlY2FsY1JhdGluZyhjbGllbnQsIGFuc3dlcikge1xyXG4gICAgICAgIGNvbnN0IGd1ZXNzZXMgPSBjbGllbnRzTWFwLmdldChjbGllbnQpO1xyXG4gICAgICAgIGNvbnN0IHdpbkluZGV4ID0gZ3Vlc3Nlcy5pbmRleE9mKE51bWJlcihhbnN3ZXIpKTtcclxuICAgICAgICB0aGlzLnBzeWNoaWNzLmZvckVhY2goKHBzLCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAod2luSW5kZXggPT09IGluZGV4KSB7XHJcbiAgICAgICAgICAgICAgICBwcy5yYXRpbmdJbmNyZW1lbnQoKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHBzLnJhdGluZ0RlY3JlYXNlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBkZWxldGVDbGllbnRNYXAoY2xpZW50KSB7XHJcbiAgICAgICAgY2xpZW50c01hcC5kZWxldGUoY2xpZW50KTtcclxuICAgIH1cclxufVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "psychic.js"
      ],
      "names": [
        "Psychic",
        "name",
        "rating",
        "guess",
        "guessesFunc",
        "photoPath",
        "id",
        "latestId",
        "randomInteger",
        "min",
        "max",
        "rand",
        "Math",
        "random",
        "floor",
        "clientsMap",
        "Map",
        "Psychics",
        "arrProp",
        "psychics",
        "map",
        "el",
        "valueOf",
        "client",
        "guesses",
        "set",
        "answer",
        "get",
        "winIndex",
        "indexOf",
        "Number",
        "forEach",
        "ps",
        "index",
        "ratingIncrement",
        "ratingDecrease"
      ],
      "mappings": ";;;;;;;;;;;;;IAAaA,O;;;AACT,yBAAoF;AAAA,yBAAtEC,IAAsE;AAAA,QAAtEA,IAAsE,0BAA/D,EAA+D;AAAA,2BAA3DC,MAA2D;AAAA,QAA3DA,MAA2D,4BAAlD,CAAkD;AAAA,0BAA/CC,KAA+C;AAAA,QAA/CA,KAA+C,2BAAvCH,OAAO,CAACI,WAA+B;AAAA,8BAAlBC,SAAkB;AAAA,QAAlBA,SAAkB,+BAAN,EAAM;;AAAA;;AAChF,SAAKC,EAAL,GAAUN,OAAO,CAACM,EAAR,EAAV;AACA,SAAKL,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKE,SAAL,GAAiBA,SAAjB;AACH;;;;sCAkBiB;AACd,WAAKH,MAAL,IAAe,CAAf;AACH;;;qCAEgB;AACb,WAAKA,MAAL,IAAe,CAAf;;AACA,UAAI,KAAKA,MAAL,GAAc,CAAlB,EAAqB;AACjB,aAAKA,MAAL,GAAc,CAAd;AACH;AACJ;;;8BAES;AACN,aAAO;AACHD,QAAAA,IAAI,EAAE,KAAKA,IADR;AAEHC,QAAAA,MAAM,EAAE,KAAKA,MAFV;AAGHG,QAAAA,SAAS,EAAE,KAAKA;AAHb,OAAP;AAKH;;;yBAjCW;AACR,UAAI,CAAC,KAAKE,QAAV,EAAoB,KAAKA,QAAL,GAAgB,CAAhB,CAApB,KACK,KAAKA,QAAL,IAAiB,CAAjB;AACL,aAAO,KAAKA,QAAZ;AACH;;;kCAEoB;AACjB,aAAOP,OAAO,CAACQ,aAAR,CAAsB,EAAtB,EAA0B,EAA1B,CAAP;AACH;;;kCAEoBC,G,EAAKC,G,EAAK;AAC3B,UAAIC,IAAI,GAAGF,GAAG,GAAGG,IAAI,CAACC,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAjB;AACAE,MAAAA,IAAI,GAAGC,IAAI,CAACE,KAAL,CAAWH,IAAX,CAAP;AACA,aAAOA,IAAP;AACH;;;;;;;AAsBL,IAAII,UAAU,GAAG,IAAIC,GAAJ,EAAjB;;IAEaC,Q;;;AACT,oBAAYC,OAAZ,EAAqB;AAAA;;AACjB,SAAKC,QAAL,GAAgBD,OAAO,CAACE,GAAR,CAAY,UAAAC,EAAE;AAAA,aAAI,IAAIrB,OAAJ,CAAYqB,EAAZ,CAAJ;AAAA,KAAd,CAAhB;AACH;;;;8BAES;AACN,aAAO,KAAKF,QAAL,CAAcC,GAAd,CAAkB,UAAAC,EAAE;AAAA,eAAIA,EAAE,CAACC,OAAH,EAAJ;AAAA,OAApB,CAAP;AACH;;;4BAEOC,M,EAAQ;AACZ,UAAMC,OAAO,GAAG,KAAKL,QAAL,CAAcC,GAAd,CAAkB,UAAAC,EAAE;AAAA,eAAIA,EAAE,CAAClB,KAAH,EAAJ;AAAA,OAApB,CAAhB;AACAY,MAAAA,UAAU,CAACU,GAAX,CAAeF,MAAf,EAAuBC,OAAvB;AACA,aAAOA,OAAP;AACH;;;iCAEYD,M,EAAQG,M,EAAQ;AACzB,UAAMF,OAAO,GAAGT,UAAU,CAACY,GAAX,CAAeJ,MAAf,CAAhB;AACA,UAAMK,QAAQ,GAAGJ,OAAO,CAACK,OAAR,CAAgBC,MAAM,CAACJ,MAAD,CAAtB,CAAjB;AACA,WAAKP,QAAL,CAAcY,OAAd,CAAsB,UAACC,EAAD,EAAKC,KAAL,EAAe;AACjC,YAAIL,QAAQ,KAAKK,KAAjB,EAAwB;AACpBD,UAAAA,EAAE,CAACE,eAAH;AACH,SAFD,MAEO;AACHF,UAAAA,EAAE,CAACG,cAAH;AACH;AACJ,OAND;AAOH;;;oCAEeZ,M,EAAQ;AACpBR,MAAAA,UAAU,UAAV,CAAkBQ,MAAlB;AACH",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics",
      "sourcesContent": [
        "export class Psychic {\r\n    constructor({ name = '', rating = 0, guess = Psychic.guessesFunc, photoPath = '' }) {\r\n        this.id = Psychic.id();\r\n        this.name = name;\r\n        this.rating = rating;\r\n        this.guess = guess;\r\n        this.photoPath = photoPath;\r\n    }\r\n\r\n    static id() {\r\n        if (!this.latestId) this.latestId = 1;\r\n        else this.latestId += 1;\r\n        return this.latestId;\r\n    }\r\n\r\n    static guessesFunc() {\r\n        return Psychic.randomInteger(10, 99);\r\n    }\r\n\r\n    static randomInteger(min, max) {\r\n        var rand = min + Math.random() * (max - min + 1);\r\n        rand = Math.floor(rand);\r\n        return rand;\r\n    }\r\n\r\n    ratingIncrement() {\r\n        this.rating += 1;\r\n    }\r\n\r\n    ratingDecrease() {\r\n        this.rating -= 1;\r\n        if (this.rating < 0) {\r\n            this.rating = 0;\r\n        }\r\n    }\r\n\r\n    valueOf() {\r\n        return {\r\n            name: this.name,\r\n            rating: this.rating,\r\n            photoPath: this.photoPath,\r\n        };\r\n    }\r\n}\r\n\r\nlet clientsMap = new Map();\r\n\r\nexport class Psychics {\r\n    constructor(arrProp) {\r\n        this.psychics = arrProp.map(el => new Psychic(el));\r\n    }\r\n\r\n    valueOf() {\r\n        return this.psychics.map(el => el.valueOf());\r\n    }\r\n\r\n    guesses(client) {\r\n        const guesses = this.psychics.map(el => el.guess());\r\n        clientsMap.set(client, guesses);\r\n        return guesses;\r\n    }\r\n\r\n    recalcRating(client, answer) {\r\n        const guesses = clientsMap.get(client);\r\n        const winIndex = guesses.indexOf(Number(answer));\r\n        this.psychics.forEach((ps, index) => {\r\n            if (winIndex === index) {\r\n                ps.ratingIncrement();\r\n            } else {\r\n                ps.ratingDecrease();\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteClientMap(client) {\r\n        clientsMap.delete(client);\r\n    }\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560705255684
  },
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\\\\psychics\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\\\\psychics\\\\curent.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics\\curent.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics\\curent.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics\\curent.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics",
        "sourceFileName": "curent.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _psychic = require(\"./psychic.js\");\n\n// экстрасенсы\nvar psychics = new _psychic.Psychics([{\n  name: 'Ы',\n  rating: 1,\n  photoPath: 'images/Ы.jpg'\n}, {\n  name: '2',\n  rating: 2,\n  photoPath: 'images/2.jpg'\n}, {\n  name: 'Синий',\n  rating: 3,\n  photoPath: 'images/123.jpg',\n  guess: function guess() {\n    var arr = [10, 22, 33, 33, 50, 78];\n\n    var rand = _psychic.Psychic.randomInteger(0, arr.length - 1);\n\n    return arr[rand];\n  }\n}]);\nvar _default = psychics;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN1cmVudC5qcyJdLCJuYW1lcyI6WyJwc3ljaGljcyIsIlBzeWNoaWNzIiwibmFtZSIsInJhdGluZyIsInBob3RvUGF0aCIsImd1ZXNzIiwiYXJyIiwicmFuZCIsIlBzeWNoaWMiLCJyYW5kb21JbnRlZ2VyIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQWtEO0FBRWxELElBQU1BLFFBQVEsR0FBRyxJQUFJQyxpQkFBSixDQUFhLENBQzFCO0FBQUVDLEVBQUFBLElBQUksRUFBRSxHQUFSO0FBQWFDLEVBQUFBLE1BQU0sRUFBRSxDQUFyQjtBQUF3QkMsRUFBQUEsU0FBUyxFQUFFO0FBQW5DLENBRDBCLEVBRTFCO0FBQUVGLEVBQUFBLElBQUksRUFBRSxHQUFSO0FBQWFDLEVBQUFBLE1BQU0sRUFBRSxDQUFyQjtBQUF3QkMsRUFBQUEsU0FBUyxFQUFFO0FBQW5DLENBRjBCLEVBRzFCO0FBQ0lGLEVBQUFBLElBQUksRUFBRSxPQURWO0FBQ21CQyxFQUFBQSxNQUFNLEVBQUUsQ0FEM0I7QUFDOEJDLEVBQUFBLFNBQVMsRUFBRSxnQkFEekM7QUFDMkRDLEVBQUFBLEtBQUssRUFBRSxpQkFBTTtBQUNoRSxRQUFNQyxHQUFHLEdBQUcsQ0FBQyxFQUFELEVBQUssRUFBTCxFQUFTLEVBQVQsRUFBYSxFQUFiLEVBQWlCLEVBQWpCLEVBQXFCLEVBQXJCLENBQVo7O0FBQ0EsUUFBTUMsSUFBSSxHQUFHQyxpQkFBUUMsYUFBUixDQUFzQixDQUF0QixFQUF5QkgsR0FBRyxDQUFDSSxNQUFKLEdBQWEsQ0FBdEMsQ0FBYjs7QUFDQSxXQUFPSixHQUFHLENBQUNDLElBQUQsQ0FBVjtBQUNIO0FBTEwsQ0FIMEIsQ0FBYixDQUFqQjtlQVllUCxRIiwic291cmNlUm9vdCI6IkQ6XFxPcGVuU2VydmVyXFxkb21haW5zXFxsb2NhbC5sb2NcXHRlc3RzXFx0ZXN0X2VkaXNvbl90cmFpbmVlXFxhcHBcXHBzeWNoaWNzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHN5Y2hpYywgUHN5Y2hpY3MgfSBmcm9tICcuL3BzeWNoaWMuanMnOyAvLyDRjdC60YHRgtGA0LDRgdC10L3RgdGLXHJcblxyXG5jb25zdCBwc3ljaGljcyA9IG5ldyBQc3ljaGljcyhbXHJcbiAgICB7IG5hbWU6ICfQqycsIHJhdGluZzogMSwgcGhvdG9QYXRoOiAnaW1hZ2VzL9CrLmpwZycgfSxcclxuICAgIHsgbmFtZTogJzInLCByYXRpbmc6IDIsIHBob3RvUGF0aDogJ2ltYWdlcy8yLmpwZycgfSxcclxuICAgIHtcclxuICAgICAgICBuYW1lOiAn0KHQuNC90LjQuScsIHJhdGluZzogMywgcGhvdG9QYXRoOiAnaW1hZ2VzLzEyMy5qcGcnLCBndWVzczogKCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBhcnIgPSBbMTAsIDIyLCAzMywgMzMsIDUwLCA3OF07XHJcbiAgICAgICAgICAgIGNvbnN0IHJhbmQgPSBQc3ljaGljLnJhbmRvbUludGVnZXIoMCwgYXJyLmxlbmd0aCAtIDEpO1xyXG4gICAgICAgICAgICByZXR1cm4gYXJyW3JhbmRdO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbl0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgcHN5Y2hpY3M7Il19",
    "map": {
      "version": 3,
      "sources": [
        "curent.js"
      ],
      "names": [
        "psychics",
        "Psychics",
        "name",
        "rating",
        "photoPath",
        "guess",
        "arr",
        "rand",
        "Psychic",
        "randomInteger",
        "length"
      ],
      "mappings": ";;;;;;;AAAA;;AAAkD;AAElD,IAAMA,QAAQ,GAAG,IAAIC,iBAAJ,CAAa,CAC1B;AAAEC,EAAAA,IAAI,EAAE,GAAR;AAAaC,EAAAA,MAAM,EAAE,CAArB;AAAwBC,EAAAA,SAAS,EAAE;AAAnC,CAD0B,EAE1B;AAAEF,EAAAA,IAAI,EAAE,GAAR;AAAaC,EAAAA,MAAM,EAAE,CAArB;AAAwBC,EAAAA,SAAS,EAAE;AAAnC,CAF0B,EAG1B;AACIF,EAAAA,IAAI,EAAE,OADV;AACmBC,EAAAA,MAAM,EAAE,CAD3B;AAC8BC,EAAAA,SAAS,EAAE,gBADzC;AAC2DC,EAAAA,KAAK,EAAE,iBAAM;AAChE,QAAMC,GAAG,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAAZ;;AACA,QAAMC,IAAI,GAAGC,iBAAQC,aAAR,CAAsB,CAAtB,EAAyBH,GAAG,CAACI,MAAJ,GAAa,CAAtC,CAAb;;AACA,WAAOJ,GAAG,CAACC,IAAD,CAAV;AACH;AALL,CAH0B,CAAb,CAAjB;eAYeP,Q",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics",
      "sourcesContent": [
        "import { Psychic, Psychics } from './psychic.js'; // экстрасенсы\r\n\r\nconst psychics = new Psychics([\r\n    { name: 'Ы', rating: 1, photoPath: 'images/Ы.jpg' },\r\n    { name: '2', rating: 2, photoPath: 'images/2.jpg' },\r\n    {\r\n        name: 'Синий', rating: 3, photoPath: 'images/123.jpg', guess: () => {\r\n            const arr = [10, 22, 33, 33, 50, 78];\r\n            const rand = Psychic.randomInteger(0, arr.length - 1);\r\n            return arr[rand];\r\n        }\r\n    },\r\n]);\r\n\r\nexport default psychics;"
      ]
    },
    "sourceType": "script",
    "mtime": 1558877854842
  },
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _servetWebSocet = _interopRequireDefault(require(\"./app/server/servetWebSocet\"));\n\nvar _message = _interopRequireDefault(require(\"./app/message\"));\n\nvar _psychic = _interopRequireDefault(require(\"./app/psychics/psychic.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nrequire('./app/server/serverHtml');\n\n// экстрасенсы\nvar webSocketServer = (0, _servetWebSocet[\"default\"])(function (client) {\n  webSocketServer.sendJson(client, {\n    psychics: _psychic[\"default\"].valueOf(),\n    state: 'begin'\n  });\n}, function (message) {\n  console.log(message);\n}); // webSocketServer.on('connection', (client) => {\n//     // console.dir(client);\n//     client.on('message', (message) => {\n//         let msg = {};\n//         try {\n//             msg = JSON.parse(message);\n//         } catch (e) {\n//             wsJsonSend(ms.er.wrongFormat);\n//             return;\n//         }\n//     })\n// });\n// console.log(WebSocketServer);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJ3ZWJTb2NrZXRTZXJ2ZXIiLCJjbGllbnQiLCJzZW5kSnNvbiIsInBzeWNoaWNzIiwidmFsdWVPZiIsInN0YXRlIiwibWVzc2FnZSIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFIQUEsT0FBTyxDQUFDLHlCQUFELENBQVA7O0FBR2tEO0FBRWxELElBQUlDLGVBQWUsR0FBRyxnQ0FBaUIsVUFBQ0MsTUFBRCxFQUFZO0FBQzNDRCxFQUFBQSxlQUFlLENBQUNFLFFBQWhCLENBQXlCRCxNQUF6QixFQUFpQztBQUM3QkUsSUFBQUEsUUFBUSxFQUFFQSxvQkFBU0MsT0FBVCxFQURtQjtBQUU3QkMsSUFBQUEsS0FBSyxFQUFFO0FBRnNCLEdBQWpDO0FBSUgsQ0FMaUIsRUFNbEIsVUFBQ0MsT0FBRCxFQUFhO0FBQ1RDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixPQUFaO0FBQ0gsQ0FSaUIsQ0FBdEIsQyxDQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IkQ6XFxPcGVuU2VydmVyXFxkb21haW5zXFxsb2NhbC5sb2NcXHRlc3RzXFx0ZXN0X2VkaXNvbl90cmFpbmVlIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi9hcHAvc2VydmVyL3NlcnZlckh0bWwnKTtcclxuaW1wb3J0IHdlYlNvY2V0TGlzdGVuZXIgZnJvbSAnLi9hcHAvc2VydmVyL3NlcnZldFdlYlNvY2V0JztcclxuaW1wb3J0IG1zIGZyb20gJy4vYXBwL21lc3NhZ2UnO1xyXG5pbXBvcnQgcHN5Y2hpY3MgZnJvbSAnLi9hcHAvcHN5Y2hpY3MvcHN5Y2hpYy5qcyc7IC8vINGN0LrRgdGC0YDQsNGB0LXQvdGB0YtcclxuXHJcbmxldCB3ZWJTb2NrZXRTZXJ2ZXIgPSB3ZWJTb2NldExpc3RlbmVyKChjbGllbnQpID0+IHtcclxuICAgICAgICB3ZWJTb2NrZXRTZXJ2ZXIuc2VuZEpzb24oY2xpZW50LCB7XHJcbiAgICAgICAgICAgIHBzeWNoaWNzOiBwc3ljaGljcy52YWx1ZU9mKCksXHJcbiAgICAgICAgICAgIHN0YXRlOiAnYmVnaW4nXHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgKG1lc3NhZ2UpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhtZXNzYWdlKTtcclxuICAgIH0pO1xyXG4vLyB3ZWJTb2NrZXRTZXJ2ZXIub24oJ2Nvbm5lY3Rpb24nLCAoY2xpZW50KSA9PiB7XHJcbi8vICAgICAvLyBjb25zb2xlLmRpcihjbGllbnQpO1xyXG4vLyAgICAgY2xpZW50Lm9uKCdtZXNzYWdlJywgKG1lc3NhZ2UpID0+IHtcclxuLy8gICAgICAgICBsZXQgbXNnID0ge307XHJcbi8vICAgICAgICAgdHJ5IHtcclxuLy8gICAgICAgICAgICAgbXNnID0gSlNPTi5wYXJzZShtZXNzYWdlKTtcclxuLy8gICAgICAgICB9IGNhdGNoIChlKSB7XHJcbi8vICAgICAgICAgICAgIHdzSnNvblNlbmQobXMuZXIud3JvbmdGb3JtYXQpO1xyXG4vLyAgICAgICAgICAgICByZXR1cm47XHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgfSlcclxuLy8gfSk7XHJcbi8vIGNvbnNvbGUubG9nKFdlYlNvY2tldFNlcnZlcik7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "webSocketServer",
        "client",
        "sendJson",
        "psychics",
        "valueOf",
        "state",
        "message",
        "console",
        "log"
      ],
      "mappings": ";;AACA;;AACA;;AACA;;;;AAHAA,OAAO,CAAC,yBAAD,CAAP;;AAGkD;AAElD,IAAIC,eAAe,GAAG,gCAAiB,UAACC,MAAD,EAAY;AAC3CD,EAAAA,eAAe,CAACE,QAAhB,CAAyBD,MAAzB,EAAiC;AAC7BE,IAAAA,QAAQ,EAAEA,oBAASC,OAAT,EADmB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAjC;AAIH,CALiB,EAMlB,UAACC,OAAD,EAAa;AACTC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACH,CARiB,CAAtB,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourcesContent": [
        "require('./app/server/serverHtml');\r\nimport webSocetListener from './app/server/servetWebSocet';\r\nimport ms from './app/message';\r\nimport psychics from './app/psychics/psychic.js'; // экстрасенсы\r\n\r\nlet webSocketServer = webSocetListener((client) => {\r\n        webSocketServer.sendJson(client, {\r\n            psychics: psychics.valueOf(),\r\n            state: 'begin'\r\n        });\r\n    },\r\n    (message) => {\r\n        console.log(message);\r\n    });\r\n// webSocketServer.on('connection', (client) => {\r\n//     // console.dir(client);\r\n//     client.on('message', (message) => {\r\n//         let msg = {};\r\n//         try {\r\n//             msg = JSON.parse(message);\r\n//         } catch (e) {\r\n//             wsJsonSend(ms.er.wrongFormat);\r\n//             return;\r\n//         }\r\n//     })\r\n// });\r\n// console.log(WebSocketServer);"
      ]
    },
    "sourceType": "script",
    "mtime": 1559109392101
  },
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\server\\\\serverHtml.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\serverHtml.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\serverHtml.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\serverHtml.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
        "sourceFileName": "serverHtml.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _config = _interopRequireDefault(require(\"config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar port = _config[\"default\"].get('server.port');\n\nvar app = (0, _express[\"default\"])();\napp.set('view engine', 'pug');\napp.set('views', _path[\"default\"].resolve(__dirname, '../views'));\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].resolve(__dirname, '../assets')));\napp.get('/', function (req, res) {\n  res.render('index');\n});\napp.listen(port, function () {\n  console.log(\"Server was started on port '\".concat(port, \"'\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlckh0bWwuanMiXSwibmFtZXMiOlsicG9ydCIsImNvbmZpZyIsImdldCIsImFwcCIsInNldCIsInBhdGgiLCJyZXNvbHZlIiwiX19kaXJuYW1lIiwidXNlIiwiZXhwcmVzcyIsInJlcSIsInJlcyIsInJlbmRlciIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxJQUFJLEdBQUdDLG1CQUFPQyxHQUFQLENBQVcsYUFBWCxDQUFiOztBQUVBLElBQU1DLEdBQUcsR0FBRywwQkFBWjtBQUVBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxhQUFSLEVBQXVCLEtBQXZCO0FBQ0FELEdBQUcsQ0FBQ0MsR0FBSixDQUFRLE9BQVIsRUFBaUJDLGlCQUFLQyxPQUFMLENBQWFDLFNBQWIsRUFBd0IsVUFBeEIsQ0FBakI7QUFDQUosR0FBRyxDQUFDSyxHQUFKLENBQVFDLDhCQUFlSixpQkFBS0MsT0FBTCxDQUFhQyxTQUFiLEVBQXdCLFdBQXhCLENBQWYsQ0FBUjtBQUVBSixHQUFHLENBQUNELEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBVVEsR0FBVixFQUFlQyxHQUFmLEVBQW9CO0FBQzdCQSxFQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxPQUFYO0FBQ0gsQ0FGRDtBQUlBVCxHQUFHLENBQUNVLE1BQUosQ0FBV2IsSUFBWCxFQUFpQixZQUFZO0FBQ3pCYyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsdUNBQTJDZixJQUEzQztBQUNILENBRkQiLCJzb3VyY2VSb290IjoiRDpcXE9wZW5TZXJ2ZXJcXGRvbWFpbnNcXGxvY2FsLmxvY1xcdGVzdHNcXHRlc3RfZWRpc29uX3RyYWluZWVcXHNlcnZlciIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcclxuaW1wb3J0IGNvbmZpZyBmcm9tICdjb25maWcnO1xyXG5cclxuY29uc3QgcG9ydCA9IGNvbmZpZy5nZXQoJ3NlcnZlci5wb3J0Jyk7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG5hcHAuc2V0KCd2aWV3IGVuZ2luZScsICdwdWcnKTtcclxuYXBwLnNldCgndmlld3MnLCBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4vdmlld3MnKSk7XHJcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uL2Fzc2V0cycpKSk7XHJcblxyXG5hcHAuZ2V0KCcvJywgZnVuY3Rpb24gKHJlcSwgcmVzKSB7XHJcbiAgICByZXMucmVuZGVyKCdpbmRleCcpO1xyXG59KTtcclxuXHJcbmFwcC5saXN0ZW4ocG9ydCwgZnVuY3Rpb24gKCkge1xyXG4gICAgY29uc29sZS5sb2coYFNlcnZlciB3YXMgc3RhcnRlZCBvbiBwb3J0ICcke3BvcnR9J2ApO1xyXG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "serverHtml.js"
      ],
      "names": [
        "port",
        "config",
        "get",
        "app",
        "set",
        "path",
        "resolve",
        "__dirname",
        "use",
        "express",
        "req",
        "res",
        "render",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,IAAI,GAAGC,mBAAOC,GAAP,CAAW,aAAX,CAAb;;AAEA,IAAMC,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAD,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBC,iBAAKC,OAAL,CAAaC,SAAb,EAAwB,UAAxB,CAAjB;AACAJ,GAAG,CAACK,GAAJ,CAAQC,8BAAeJ,iBAAKC,OAAL,CAAaC,SAAb,EAAwB,WAAxB,CAAf,CAAR;AAEAJ,GAAG,CAACD,GAAJ,CAAQ,GAAR,EAAa,UAAUQ,GAAV,EAAeC,GAAf,EAAoB;AAC7BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,OAAX;AACH,CAFD;AAIAT,GAAG,CAACU,MAAJ,CAAWb,IAAX,EAAiB,YAAY;AACzBc,EAAAA,OAAO,CAACC,GAAR,uCAA2Cf,IAA3C;AACH,CAFD",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
      "sourcesContent": [
        "import express from 'express';\r\nimport path from 'path';\r\nimport config from 'config';\r\n\r\nconst port = config.get('server.port');\r\n\r\nconst app = express();\r\n\r\napp.set('view engine', 'pug');\r\napp.set('views', path.resolve(__dirname, '../views'));\r\napp.use(express.static(path.resolve(__dirname, '../assets')));\r\n\r\napp.get('/', function (req, res) {\r\n    res.render('index');\r\n});\r\n\r\napp.listen(port, function () {\r\n    console.log(`Server was started on port '${port}'`);\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1558882107132
  },
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\server\\\\servetWebSocet.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\servetWebSocet.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\servetWebSocet.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\servetWebSocet.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
        "sourceFileName": "servetWebSocet.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ws = _interopRequireDefault(require(\"ws\"));\n\nvar _config = _interopRequireDefault(require(\"config\"));\n\nvar _curent = _interopRequireDefault(require(\"../app/psychics/curent\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar portWs = _config[\"default\"].get('server.portWs');\n\nvar WebSocketServer = new _ws[\"default\"].Server({\n  port: portWs\n});\n\nvar broadcast = function broadcast(data) {\n  wss.clients.forEach(function each(client) {\n    if (client.readyState === _ws[\"default\"].OPEN) {\n      client.send(JSON.stringify(data));\n    }\n  });\n};\n\nvar _default = WebSocketServer; // wss.on('connection', (ws) => {\n//     export default ws;\n//     // const wsJsonSend = (data) => {\n//     //     const jsonData = JSON.stringify(data);\n//     //     ws.send(jsonData);\n//     // };\n//     // let guesses = [];\n//     // const fsm = new StateMachine({\n//     //     /*\n//     //     beginning - отправляем рейтинг, ждем запроса догадок\n//     //     guess - догадки отправлены, ждем правильный ответ\n//     //     */\n//     //     init: 'begin',\n//     //     transitions: [\n//     //         { name: 'toGuess', from: 'begin', to: 'guess' },\n//     //         { name: 'toBegin', from: 'guess', to: 'begin' },\n//     //     ],\n//     //     methods: {\n//     //         onBegin: function () {\n//     //             wsJsonSend({\n//     //                 'psychics': psychics.valueOf(),\n//     //                 state: this.state,\n//     //             });\n//     //         },\n//     //         onGuess: function () {\n//     //             guesses = psychics.guesses();\n//     //             wsJsonSend({\n//     //                 'guesses': guesses,\n//     //                 state: this.state,\n//     //             });\n//     //         },\n//     //         onInvalidTransition: (transition, from, to) => {\n//     //             wsJsonSend(ms.error.onInvalidTransition(transition, from, to));\n//     //         },\n//     //     }\n//     // });\n//     //\n//     // ws.on('message', (message) => {\n//     //     let msg = {};\n//     //     try {\n//     //         msg = JSON.parse(message);\n//     //     } catch (e) {\n//     //         wsJsonSend(ms.error.wrongFormat);\n//     //         return;\n//     //     }\n//     //\n//     //     if (msg.step === 'toGuess') {\n//     //         fsm.toGuess();\n//     //     }\n//     //     if (msg.answer !== undefined) {\n//     //         if (msg.answer >= 10 && msg.answer < 100) {\n//     //             psychics.recalcRating(msg.answer, guesses);\n//     //             broadcast({ 'psychics': psychics.valueOf() });\n//     //             fsm.toBegin();\n//     //         } else {\n//     //             wsJsonSend(ms.error.wrongNumber);\n//     //         }\n//     //     }\n//     //     // console.log(message, wss.clients);\n//     //\n//     //\n//     //     // wss.clients.forEach((client) => {\n//     //     //     client.send(message);\n//     //     // })\n//     // })\n// });\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZldFdlYlNvY2V0LmpzIl0sIm5hbWVzIjpbInBvcnRXcyIsImNvbmZpZyIsImdldCIsIldlYlNvY2tldFNlcnZlciIsIldlYlNvY2tldCIsIlNlcnZlciIsInBvcnQiLCJicm9hZGNhc3QiLCJkYXRhIiwid3NzIiwiY2xpZW50cyIsImZvckVhY2giLCJlYWNoIiwiY2xpZW50IiwicmVhZHlTdGF0ZSIsIk9QRU4iLCJzZW5kIiwiSlNPTiIsInN0cmluZ2lmeSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsTUFBTSxHQUFHQyxtQkFBT0MsR0FBUCxDQUFXLGVBQVgsQ0FBZjs7QUFFQSxJQUFNQyxlQUFlLEdBQUcsSUFBSUMsZUFBVUMsTUFBZCxDQUFxQjtBQUFFQyxFQUFBQSxJQUFJLEVBQUVOO0FBQVIsQ0FBckIsQ0FBeEI7O0FBRUEsSUFBTU8sU0FBUyxHQUFHLFNBQVpBLFNBQVksQ0FBQ0MsSUFBRCxFQUFVO0FBQ3hCQyxFQUFBQSxHQUFHLENBQUNDLE9BQUosQ0FBWUMsT0FBWixDQUFvQixTQUFTQyxJQUFULENBQWNDLE1BQWQsRUFBc0I7QUFDdEMsUUFBSUEsTUFBTSxDQUFDQyxVQUFQLEtBQXNCVixlQUFVVyxJQUFwQyxFQUEwQztBQUN0Q0YsTUFBQUEsTUFBTSxDQUFDRyxJQUFQLENBQVlDLElBQUksQ0FBQ0MsU0FBTCxDQUFlVixJQUFmLENBQVo7QUFDSDtBQUNKLEdBSkQ7QUFLSCxDQU5EOztlQVFnQkwsZSxFQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiRDpcXE9wZW5TZXJ2ZXJcXGRvbWFpbnNcXGxvY2FsLmxvY1xcdGVzdHNcXHRlc3RfZWRpc29uX3RyYWluZWVcXHNlcnZlciIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBXZWJTb2NrZXQgZnJvbSAnd3MnO1xyXG5pbXBvcnQgY29uZmlnIGZyb20gJ2NvbmZpZyc7XHJcbmltcG9ydCBwc3ljaGljcyBmcm9tIFwiLi4vYXBwL3BzeWNoaWNzL2N1cmVudFwiO1xyXG5cclxuY29uc3QgcG9ydFdzID0gY29uZmlnLmdldCgnc2VydmVyLnBvcnRXcycpO1xyXG5cclxuY29uc3QgV2ViU29ja2V0U2VydmVyID0gbmV3IFdlYlNvY2tldC5TZXJ2ZXIoeyBwb3J0OiBwb3J0V3MgfSk7XHJcblxyXG5jb25zdCBicm9hZGNhc3QgPSAoZGF0YSkgPT4ge1xyXG4gICAgd3NzLmNsaWVudHMuZm9yRWFjaChmdW5jdGlvbiBlYWNoKGNsaWVudCkge1xyXG4gICAgICAgIGlmIChjbGllbnQucmVhZHlTdGF0ZSA9PT0gV2ViU29ja2V0Lk9QRU4pIHtcclxuICAgICAgICAgICAgY2xpZW50LnNlbmQoSlNPTi5zdHJpbmdpZnkoZGF0YSkpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgIFdlYlNvY2tldFNlcnZlcjtcclxuLy8gd3NzLm9uKCdjb25uZWN0aW9uJywgKHdzKSA9PiB7XHJcbi8vICAgICBleHBvcnQgZGVmYXVsdCB3cztcclxuLy8gICAgIC8vIGNvbnN0IHdzSnNvblNlbmQgPSAoZGF0YSkgPT4ge1xyXG4vLyAgICAgLy8gICAgIGNvbnN0IGpzb25EYXRhID0gSlNPTi5zdHJpbmdpZnkoZGF0YSk7XHJcbi8vICAgICAvLyAgICAgd3Muc2VuZChqc29uRGF0YSk7XHJcbi8vICAgICAvLyB9O1xyXG4vLyAgICAgLy8gbGV0IGd1ZXNzZXMgPSBbXTtcclxuLy8gICAgIC8vIGNvbnN0IGZzbSA9IG5ldyBTdGF0ZU1hY2hpbmUoe1xyXG4vLyAgICAgLy8gICAgIC8qXHJcbi8vICAgICAvLyAgICAgYmVnaW5uaW5nIC0g0L7RgtC/0YDQsNCy0LvRj9C10Lwg0YDQtdC50YLQuNC90LMsINC20LTQtdC8INC30LDQv9GA0L7RgdCwINC00L7Qs9Cw0LTQvtC6XHJcbi8vICAgICAvLyAgICAgZ3Vlc3MgLSDQtNC+0LPQsNC00LrQuCDQvtGC0L/RgNCw0LLQu9C10L3Riywg0LbQtNC10Lwg0L/RgNCw0LLQuNC70YzQvdGL0Lkg0L7RgtCy0LXRglxyXG4vLyAgICAgLy8gICAgICovXHJcbi8vICAgICAvLyAgICAgaW5pdDogJ2JlZ2luJyxcclxuLy8gICAgIC8vICAgICB0cmFuc2l0aW9uczogW1xyXG4vLyAgICAgLy8gICAgICAgICB7IG5hbWU6ICd0b0d1ZXNzJywgZnJvbTogJ2JlZ2luJywgdG86ICdndWVzcycgfSxcclxuLy8gICAgIC8vICAgICAgICAgeyBuYW1lOiAndG9CZWdpbicsIGZyb206ICdndWVzcycsIHRvOiAnYmVnaW4nIH0sXHJcbi8vICAgICAvLyAgICAgXSxcclxuLy8gICAgIC8vICAgICBtZXRob2RzOiB7XHJcbi8vICAgICAvLyAgICAgICAgIG9uQmVnaW46IGZ1bmN0aW9uICgpIHtcclxuLy8gICAgIC8vICAgICAgICAgICAgIHdzSnNvblNlbmQoe1xyXG4vLyAgICAgLy8gICAgICAgICAgICAgICAgICdwc3ljaGljcyc6IHBzeWNoaWNzLnZhbHVlT2YoKSxcclxuLy8gICAgIC8vICAgICAgICAgICAgICAgICBzdGF0ZTogdGhpcy5zdGF0ZSxcclxuLy8gICAgIC8vICAgICAgICAgICAgIH0pO1xyXG4vLyAgICAgLy8gICAgICAgICB9LFxyXG4vLyAgICAgLy8gICAgICAgICBvbkd1ZXNzOiBmdW5jdGlvbiAoKSB7XHJcbi8vICAgICAvLyAgICAgICAgICAgICBndWVzc2VzID0gcHN5Y2hpY3MuZ3Vlc3NlcygpO1xyXG4vLyAgICAgLy8gICAgICAgICAgICAgd3NKc29uU2VuZCh7XHJcbi8vICAgICAvLyAgICAgICAgICAgICAgICAgJ2d1ZXNzZXMnOiBndWVzc2VzLFxyXG4vLyAgICAgLy8gICAgICAgICAgICAgICAgIHN0YXRlOiB0aGlzLnN0YXRlLFxyXG4vLyAgICAgLy8gICAgICAgICAgICAgfSk7XHJcbi8vICAgICAvLyAgICAgICAgIH0sXHJcbi8vICAgICAvLyAgICAgICAgIG9uSW52YWxpZFRyYW5zaXRpb246ICh0cmFuc2l0aW9uLCBmcm9tLCB0bykgPT4ge1xyXG4vLyAgICAgLy8gICAgICAgICAgICAgd3NKc29uU2VuZChtcy5lcnJvci5vbkludmFsaWRUcmFuc2l0aW9uKHRyYW5zaXRpb24sIGZyb20sIHRvKSk7XHJcbi8vICAgICAvLyAgICAgICAgIH0sXHJcbi8vICAgICAvLyAgICAgfVxyXG4vLyAgICAgLy8gfSk7XHJcbi8vICAgICAvL1xyXG4vLyAgICAgLy8gd3Mub24oJ21lc3NhZ2UnLCAobWVzc2FnZSkgPT4ge1xyXG4vLyAgICAgLy8gICAgIGxldCBtc2cgPSB7fTtcclxuLy8gICAgIC8vICAgICB0cnkge1xyXG4vLyAgICAgLy8gICAgICAgICBtc2cgPSBKU09OLnBhcnNlKG1lc3NhZ2UpO1xyXG4vLyAgICAgLy8gICAgIH0gY2F0Y2ggKGUpIHtcclxuLy8gICAgIC8vICAgICAgICAgd3NKc29uU2VuZChtcy5lcnJvci53cm9uZ0Zvcm1hdCk7XHJcbi8vICAgICAvLyAgICAgICAgIHJldHVybjtcclxuLy8gICAgIC8vICAgICB9XHJcbi8vICAgICAvL1xyXG4vLyAgICAgLy8gICAgIGlmIChtc2cuc3RlcCA9PT0gJ3RvR3Vlc3MnKSB7XHJcbi8vICAgICAvLyAgICAgICAgIGZzbS50b0d1ZXNzKCk7XHJcbi8vICAgICAvLyAgICAgfVxyXG4vLyAgICAgLy8gICAgIGlmIChtc2cuYW5zd2VyICE9PSB1bmRlZmluZWQpIHtcclxuLy8gICAgIC8vICAgICAgICAgaWYgKG1zZy5hbnN3ZXIgPj0gMTAgJiYgbXNnLmFuc3dlciA8IDEwMCkge1xyXG4vLyAgICAgLy8gICAgICAgICAgICAgcHN5Y2hpY3MucmVjYWxjUmF0aW5nKG1zZy5hbnN3ZXIsIGd1ZXNzZXMpO1xyXG4vLyAgICAgLy8gICAgICAgICAgICAgYnJvYWRjYXN0KHsgJ3BzeWNoaWNzJzogcHN5Y2hpY3MudmFsdWVPZigpIH0pO1xyXG4vLyAgICAgLy8gICAgICAgICAgICAgZnNtLnRvQmVnaW4oKTtcclxuLy8gICAgIC8vICAgICAgICAgfSBlbHNlIHtcclxuLy8gICAgIC8vICAgICAgICAgICAgIHdzSnNvblNlbmQobXMuZXJyb3Iud3JvbmdOdW1iZXIpO1xyXG4vLyAgICAgLy8gICAgICAgICB9XHJcbi8vICAgICAvLyAgICAgfVxyXG4vLyAgICAgLy8gICAgIC8vIGNvbnNvbGUubG9nKG1lc3NhZ2UsIHdzcy5jbGllbnRzKTtcclxuLy8gICAgIC8vXHJcbi8vICAgICAvL1xyXG4vLyAgICAgLy8gICAgIC8vIHdzcy5jbGllbnRzLmZvckVhY2goKGNsaWVudCkgPT4ge1xyXG4vLyAgICAgLy8gICAgIC8vICAgICBjbGllbnQuc2VuZChtZXNzYWdlKTtcclxuLy8gICAgIC8vICAgICAvLyB9KVxyXG4vLyAgICAgLy8gfSlcclxuLy8gfSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "servetWebSocet.js"
      ],
      "names": [
        "portWs",
        "config",
        "get",
        "WebSocketServer",
        "WebSocket",
        "Server",
        "port",
        "broadcast",
        "data",
        "wss",
        "clients",
        "forEach",
        "each",
        "client",
        "readyState",
        "OPEN",
        "send",
        "JSON",
        "stringify"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,mBAAOC,GAAP,CAAW,eAAX,CAAf;;AAEA,IAAMC,eAAe,GAAG,IAAIC,eAAUC,MAAd,CAAqB;AAAEC,EAAAA,IAAI,EAAEN;AAAR,CAArB,CAAxB;;AAEA,IAAMO,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAU;AACxBC,EAAAA,GAAG,CAACC,OAAJ,CAAYC,OAAZ,CAAoB,SAASC,IAAT,CAAcC,MAAd,EAAsB;AACtC,QAAIA,MAAM,CAACC,UAAP,KAAsBV,eAAUW,IAApC,EAA0C;AACtCF,MAAAA,MAAM,CAACG,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAeV,IAAf,CAAZ;AACH;AACJ,GAJD;AAKH,CAND;;eAQgBL,e,EAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
      "sourcesContent": [
        "import WebSocket from 'ws';\r\nimport config from 'config';\r\nimport psychics from \"../app/psychics/curent\";\r\n\r\nconst portWs = config.get('server.portWs');\r\n\r\nconst WebSocketServer = new WebSocket.Server({ port: portWs });\r\n\r\nconst broadcast = (data) => {\r\n    wss.clients.forEach(function each(client) {\r\n        if (client.readyState === WebSocket.OPEN) {\r\n            client.send(JSON.stringify(data));\r\n        }\r\n    });\r\n};\r\n\r\nexport default  WebSocketServer;\r\n// wss.on('connection', (ws) => {\r\n//     export default ws;\r\n//     // const wsJsonSend = (data) => {\r\n//     //     const jsonData = JSON.stringify(data);\r\n//     //     ws.send(jsonData);\r\n//     // };\r\n//     // let guesses = [];\r\n//     // const fsm = new StateMachine({\r\n//     //     /*\r\n//     //     beginning - отправляем рейтинг, ждем запроса догадок\r\n//     //     guess - догадки отправлены, ждем правильный ответ\r\n//     //     */\r\n//     //     init: 'begin',\r\n//     //     transitions: [\r\n//     //         { name: 'toGuess', from: 'begin', to: 'guess' },\r\n//     //         { name: 'toBegin', from: 'guess', to: 'begin' },\r\n//     //     ],\r\n//     //     methods: {\r\n//     //         onBegin: function () {\r\n//     //             wsJsonSend({\r\n//     //                 'psychics': psychics.valueOf(),\r\n//     //                 state: this.state,\r\n//     //             });\r\n//     //         },\r\n//     //         onGuess: function () {\r\n//     //             guesses = psychics.guesses();\r\n//     //             wsJsonSend({\r\n//     //                 'guesses': guesses,\r\n//     //                 state: this.state,\r\n//     //             });\r\n//     //         },\r\n//     //         onInvalidTransition: (transition, from, to) => {\r\n//     //             wsJsonSend(ms.error.onInvalidTransition(transition, from, to));\r\n//     //         },\r\n//     //     }\r\n//     // });\r\n//     //\r\n//     // ws.on('message', (message) => {\r\n//     //     let msg = {};\r\n//     //     try {\r\n//     //         msg = JSON.parse(message);\r\n//     //     } catch (e) {\r\n//     //         wsJsonSend(ms.error.wrongFormat);\r\n//     //         return;\r\n//     //     }\r\n//     //\r\n//     //     if (msg.step === 'toGuess') {\r\n//     //         fsm.toGuess();\r\n//     //     }\r\n//     //     if (msg.answer !== undefined) {\r\n//     //         if (msg.answer >= 10 && msg.answer < 100) {\r\n//     //             psychics.recalcRating(msg.answer, guesses);\r\n//     //             broadcast({ 'psychics': psychics.valueOf() });\r\n//     //             fsm.toBegin();\r\n//     //         } else {\r\n//     //             wsJsonSend(ms.error.wrongNumber);\r\n//     //         }\r\n//     //     }\r\n//     //     // console.log(message, wss.clients);\r\n//     //\r\n//     //\r\n//     //     // wss.clients.forEach((client) => {\r\n//     //     //     client.send(message);\r\n//     //     // })\r\n//     // })\r\n// });"
      ]
    },
    "sourceType": "script",
    "mtime": 1558882804529
  },
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\\\\server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\\\\server\\\\servetWebSocet.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\server\\servetWebSocet.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\server\\servetWebSocet.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\server\\servetWebSocet.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\server",
        "sourceFileName": "servetWebSocet.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.listenClient = exports.onConnect = exports.wss = void 0;\n\nvar _ws = _interopRequireDefault(require(\"ws\"));\n\nvar _config = _interopRequireDefault(require(\"config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar portWs = _config[\"default\"].get('server.portWs');\n\nvar webSocketServer = new _ws[\"default\"].Server({\n  port: portWs\n});\n\nif (!webSocketServer.sendJson) {\n  webSocketServer.sendJson = function (client, data) {\n    var dataJson = JSON.stringify(data);\n    client.send(dataJson);\n  };\n}\n\nif (!webSocketServer.broadcastJson) {\n  webSocketServer.broadcastJson = function (data) {\n    webSocketServer.clients.forEach(function (client) {\n      if (client.readyState === _ws[\"default\"].OPEN) {\n        webSocketServer.sendJson(client, data);\n      }\n    });\n  };\n}\n\nvar wss = webSocketServer;\nexports.wss = wss;\n\nvar onConnect = function onConnect(cb) {\n  webSocketServer.on('connection', function (client) {\n    cb(client);\n  });\n};\n\nexports.onConnect = onConnect;\n\nvar listenClient = function listenClient(client, cbMessage, cbClose, cbMessageError) {\n  client.on('message', function (msgJson) {\n    try {\n      var messageObj = JSON.parse(msgJson);\n      cbMessage(messageObj);\n    } catch (er) {\n      cbMessageError(er);\n    }\n  });\n  client.on('close', function () {\n    cbClose();\n  });\n};\n\nexports.listenClient = listenClient;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZldFdlYlNvY2V0LmpzIl0sIm5hbWVzIjpbInBvcnRXcyIsImNvbmZpZyIsImdldCIsIndlYlNvY2tldFNlcnZlciIsIldlYlNvY2tldCIsIlNlcnZlciIsInBvcnQiLCJzZW5kSnNvbiIsImNsaWVudCIsImRhdGEiLCJkYXRhSnNvbiIsIkpTT04iLCJzdHJpbmdpZnkiLCJzZW5kIiwiYnJvYWRjYXN0SnNvbiIsImNsaWVudHMiLCJmb3JFYWNoIiwicmVhZHlTdGF0ZSIsIk9QRU4iLCJ3c3MiLCJvbkNvbm5lY3QiLCJjYiIsIm9uIiwibGlzdGVuQ2xpZW50IiwiY2JNZXNzYWdlIiwiY2JDbG9zZSIsImNiTWVzc2FnZUVycm9yIiwibXNnSnNvbiIsIm1lc3NhZ2VPYmoiLCJwYXJzZSIsImVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUdDLG1CQUFPQyxHQUFQLENBQVcsZUFBWCxDQUFmOztBQUNBLElBQU1DLGVBQWUsR0FBRyxJQUFJQyxlQUFVQyxNQUFkLENBQXFCO0FBQUVDLEVBQUFBLElBQUksRUFBRU47QUFBUixDQUFyQixDQUF4Qjs7QUFFQSxJQUFJLENBQUNHLGVBQWUsQ0FBQ0ksUUFBckIsRUFBK0I7QUFDM0JKLEVBQUFBLGVBQWUsQ0FBQ0ksUUFBaEIsR0FBMkIsVUFBQ0MsTUFBRCxFQUFTQyxJQUFULEVBQWtCO0FBQ3pDLFFBQU1DLFFBQVEsR0FBR0MsSUFBSSxDQUFDQyxTQUFMLENBQWVILElBQWYsQ0FBakI7QUFDQUQsSUFBQUEsTUFBTSxDQUFDSyxJQUFQLENBQVlILFFBQVo7QUFDSCxHQUhEO0FBSUg7O0FBRUQsSUFBSSxDQUFDUCxlQUFlLENBQUNXLGFBQXJCLEVBQW9DO0FBQ2hDWCxFQUFBQSxlQUFlLENBQUNXLGFBQWhCLEdBQWdDLFVBQUNMLElBQUQsRUFBVTtBQUN0Q04sSUFBQUEsZUFBZSxDQUFDWSxPQUFoQixDQUF3QkMsT0FBeEIsQ0FBZ0MsVUFBQ1IsTUFBRCxFQUFZO0FBQ3hDLFVBQUlBLE1BQU0sQ0FBQ1MsVUFBUCxLQUFzQmIsZUFBVWMsSUFBcEMsRUFBMEM7QUFDdENmLFFBQUFBLGVBQWUsQ0FBQ0ksUUFBaEIsQ0FBeUJDLE1BQXpCLEVBQWlDQyxJQUFqQztBQUNIO0FBQ0osS0FKRDtBQUtILEdBTkQ7QUFPSDs7QUFFTSxJQUFNVSxHQUFHLEdBQUdoQixlQUFaOzs7QUFFQSxJQUFNaUIsU0FBUyxHQUFHLFNBQVpBLFNBQVksQ0FBQ0MsRUFBRCxFQUFRO0FBQzdCbEIsRUFBQUEsZUFBZSxDQUFDbUIsRUFBaEIsQ0FBbUIsWUFBbkIsRUFBaUMsVUFBQ2QsTUFBRCxFQUFZO0FBQ3pDYSxJQUFBQSxFQUFFLENBQUNiLE1BQUQsQ0FBRjtBQUNILEdBRkQ7QUFHSCxDQUpNOzs7O0FBTUEsSUFBTWUsWUFBWSxHQUFHLFNBQWZBLFlBQWUsQ0FBQ2YsTUFBRCxFQUFTZ0IsU0FBVCxFQUFvQkMsT0FBcEIsRUFBNkJDLGNBQTdCLEVBQWdEO0FBQ3hFbEIsRUFBQUEsTUFBTSxDQUFDYyxFQUFQLENBQVUsU0FBVixFQUFxQixVQUFDSyxPQUFELEVBQWE7QUFDOUIsUUFBSTtBQUNBLFVBQU1DLFVBQVUsR0FBR2pCLElBQUksQ0FBQ2tCLEtBQUwsQ0FBV0YsT0FBWCxDQUFuQjtBQUNBSCxNQUFBQSxTQUFTLENBQUNJLFVBQUQsQ0FBVDtBQUNILEtBSEQsQ0FHRSxPQUFPRSxFQUFQLEVBQVc7QUFDVEosTUFBQUEsY0FBYyxDQUFDSSxFQUFELENBQWQ7QUFDSDtBQUNKLEdBUEQ7QUFRQXRCLEVBQUFBLE1BQU0sQ0FBQ2MsRUFBUCxDQUFVLE9BQVYsRUFBbUIsWUFBTTtBQUNyQkcsSUFBQUEsT0FBTztBQUNWLEdBRkQ7QUFHSCxDQVpNIiwic291cmNlUm9vdCI6IkQ6XFxPcGVuU2VydmVyXFxkb21haW5zXFxsb2NhbC5sb2NcXHRlc3RzXFx0ZXN0X2VkaXNvbl90cmFpbmVlXFxhcHBcXHNlcnZlciIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBXZWJTb2NrZXQgZnJvbSAnd3MnO1xyXG5pbXBvcnQgY29uZmlnIGZyb20gJ2NvbmZpZyc7XHJcblxyXG5jb25zdCBwb3J0V3MgPSBjb25maWcuZ2V0KCdzZXJ2ZXIucG9ydFdzJyk7XHJcbmNvbnN0IHdlYlNvY2tldFNlcnZlciA9IG5ldyBXZWJTb2NrZXQuU2VydmVyKHsgcG9ydDogcG9ydFdzIH0pO1xyXG5cclxuaWYgKCF3ZWJTb2NrZXRTZXJ2ZXIuc2VuZEpzb24pIHtcclxuICAgIHdlYlNvY2tldFNlcnZlci5zZW5kSnNvbiA9IChjbGllbnQsIGRhdGEpID0+IHtcclxuICAgICAgICBjb25zdCBkYXRhSnNvbiA9IEpTT04uc3RyaW5naWZ5KGRhdGEpO1xyXG4gICAgICAgIGNsaWVudC5zZW5kKGRhdGFKc29uKTtcclxuICAgIH1cclxufVxyXG5cclxuaWYgKCF3ZWJTb2NrZXRTZXJ2ZXIuYnJvYWRjYXN0SnNvbikge1xyXG4gICAgd2ViU29ja2V0U2VydmVyLmJyb2FkY2FzdEpzb24gPSAoZGF0YSkgPT4ge1xyXG4gICAgICAgIHdlYlNvY2tldFNlcnZlci5jbGllbnRzLmZvckVhY2goKGNsaWVudCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoY2xpZW50LnJlYWR5U3RhdGUgPT09IFdlYlNvY2tldC5PUEVOKSB7XHJcbiAgICAgICAgICAgICAgICB3ZWJTb2NrZXRTZXJ2ZXIuc2VuZEpzb24oY2xpZW50LCBkYXRhKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHdzcyA9IHdlYlNvY2tldFNlcnZlcjtcclxuXHJcbmV4cG9ydCBjb25zdCBvbkNvbm5lY3QgPSAoY2IpID0+IHtcclxuICAgIHdlYlNvY2tldFNlcnZlci5vbignY29ubmVjdGlvbicsIChjbGllbnQpID0+IHtcclxuICAgICAgICBjYihjbGllbnQpO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgbGlzdGVuQ2xpZW50ID0gKGNsaWVudCwgY2JNZXNzYWdlLCBjYkNsb3NlLCBjYk1lc3NhZ2VFcnJvcikgPT4ge1xyXG4gICAgY2xpZW50Lm9uKCdtZXNzYWdlJywgKG1zZ0pzb24pID0+IHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCBtZXNzYWdlT2JqID0gSlNPTi5wYXJzZShtc2dKc29uKTtcclxuICAgICAgICAgICAgY2JNZXNzYWdlKG1lc3NhZ2VPYmopO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVyKSB7XHJcbiAgICAgICAgICAgIGNiTWVzc2FnZUVycm9yKGVyKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIGNsaWVudC5vbignY2xvc2UnLCAoKSA9PiB7XHJcbiAgICAgICAgY2JDbG9zZSgpO1xyXG4gICAgfSk7XHJcbn07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "servetWebSocet.js"
      ],
      "names": [
        "portWs",
        "config",
        "get",
        "webSocketServer",
        "WebSocket",
        "Server",
        "port",
        "sendJson",
        "client",
        "data",
        "dataJson",
        "JSON",
        "stringify",
        "send",
        "broadcastJson",
        "clients",
        "forEach",
        "readyState",
        "OPEN",
        "wss",
        "onConnect",
        "cb",
        "on",
        "listenClient",
        "cbMessage",
        "cbClose",
        "cbMessageError",
        "msgJson",
        "messageObj",
        "parse",
        "er"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,mBAAOC,GAAP,CAAW,eAAX,CAAf;;AACA,IAAMC,eAAe,GAAG,IAAIC,eAAUC,MAAd,CAAqB;AAAEC,EAAAA,IAAI,EAAEN;AAAR,CAArB,CAAxB;;AAEA,IAAI,CAACG,eAAe,CAACI,QAArB,EAA+B;AAC3BJ,EAAAA,eAAe,CAACI,QAAhB,GAA2B,UAACC,MAAD,EAASC,IAAT,EAAkB;AACzC,QAAMC,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAjB;AACAD,IAAAA,MAAM,CAACK,IAAP,CAAYH,QAAZ;AACH,GAHD;AAIH;;AAED,IAAI,CAACP,eAAe,CAACW,aAArB,EAAoC;AAChCX,EAAAA,eAAe,CAACW,aAAhB,GAAgC,UAACL,IAAD,EAAU;AACtCN,IAAAA,eAAe,CAACY,OAAhB,CAAwBC,OAAxB,CAAgC,UAACR,MAAD,EAAY;AACxC,UAAIA,MAAM,CAACS,UAAP,KAAsBb,eAAUc,IAApC,EAA0C;AACtCf,QAAAA,eAAe,CAACI,QAAhB,CAAyBC,MAAzB,EAAiCC,IAAjC;AACH;AACJ,KAJD;AAKH,GAND;AAOH;;AAEM,IAAMU,GAAG,GAAGhB,eAAZ;;;AAEA,IAAMiB,SAAS,GAAG,SAAZA,SAAY,CAACC,EAAD,EAAQ;AAC7BlB,EAAAA,eAAe,CAACmB,EAAhB,CAAmB,YAAnB,EAAiC,UAACd,MAAD,EAAY;AACzCa,IAAAA,EAAE,CAACb,MAAD,CAAF;AACH,GAFD;AAGH,CAJM;;;;AAMA,IAAMe,YAAY,GAAG,SAAfA,YAAe,CAACf,MAAD,EAASgB,SAAT,EAAoBC,OAApB,EAA6BC,cAA7B,EAAgD;AACxElB,EAAAA,MAAM,CAACc,EAAP,CAAU,SAAV,EAAqB,UAACK,OAAD,EAAa;AAC9B,QAAI;AACA,UAAMC,UAAU,GAAGjB,IAAI,CAACkB,KAAL,CAAWF,OAAX,CAAnB;AACAH,MAAAA,SAAS,CAACI,UAAD,CAAT;AACH,KAHD,CAGE,OAAOE,EAAP,EAAW;AACTJ,MAAAA,cAAc,CAACI,EAAD,CAAd;AACH;AACJ,GAPD;AAQAtB,EAAAA,MAAM,CAACc,EAAP,CAAU,OAAV,EAAmB,YAAM;AACrBG,IAAAA,OAAO;AACV,GAFD;AAGH,CAZM",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\server",
      "sourcesContent": [
        "import WebSocket from 'ws';\r\nimport config from 'config';\r\n\r\nconst portWs = config.get('server.portWs');\r\nconst webSocketServer = new WebSocket.Server({ port: portWs });\r\n\r\nif (!webSocketServer.sendJson) {\r\n    webSocketServer.sendJson = (client, data) => {\r\n        const dataJson = JSON.stringify(data);\r\n        client.send(dataJson);\r\n    }\r\n}\r\n\r\nif (!webSocketServer.broadcastJson) {\r\n    webSocketServer.broadcastJson = (data) => {\r\n        webSocketServer.clients.forEach((client) => {\r\n            if (client.readyState === WebSocket.OPEN) {\r\n                webSocketServer.sendJson(client, data);\r\n            }\r\n        });\r\n    };\r\n}\r\n\r\nexport const wss = webSocketServer;\r\n\r\nexport const onConnect = (cb) => {\r\n    webSocketServer.on('connection', (client) => {\r\n        cb(client);\r\n    });\r\n};\r\n\r\nexport const listenClient = (client, cbMessage, cbClose, cbMessageError) => {\r\n    client.on('message', (msgJson) => {\r\n        try {\r\n            const messageObj = JSON.parse(msgJson);\r\n            cbMessage(messageObj);\r\n        } catch (er) {\r\n            cbMessageError(er);\r\n        }\r\n    });\r\n    client.on('close', () => {\r\n        cbClose();\r\n    });\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560785405503
  },
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\\\\server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\\\\server\\\\serverHtml.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\server\\serverHtml.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\server\\serverHtml.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\server\\serverHtml.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\server",
        "sourceFileName": "serverHtml.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _config = _interopRequireDefault(require(\"config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar rootPath = process.cwd();\n\nvar port = _config[\"default\"].get('server.port');\n\nvar app = (0, _express[\"default\"])();\napp.set('view engine', 'pug');\napp.set('views', _path[\"default\"].resolve(rootPath, './views'));\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].resolve(rootPath, './assets')));\napp.get('/', function (req, res) {\n  res.render('index');\n});\napp.listen(port, function () {\n  console.log(\"Server was started on port '\".concat(port, \"'\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlckh0bWwuanMiXSwibmFtZXMiOlsicm9vdFBhdGgiLCJwcm9jZXNzIiwiY3dkIiwicG9ydCIsImNvbmZpZyIsImdldCIsImFwcCIsInNldCIsInBhdGgiLCJyZXNvbHZlIiwidXNlIiwiZXhwcmVzcyIsInJlcSIsInJlcyIsInJlbmRlciIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixFQUFqQjs7QUFDQSxJQUFNQyxJQUFJLEdBQUdDLG1CQUFPQyxHQUFQLENBQVcsYUFBWCxDQUFiOztBQUNBLElBQU1DLEdBQUcsR0FBRywwQkFBWjtBQUVBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxhQUFSLEVBQXVCLEtBQXZCO0FBQ0FELEdBQUcsQ0FBQ0MsR0FBSixDQUFRLE9BQVIsRUFBaUJDLGlCQUFLQyxPQUFMLENBQWFULFFBQWIsRUFBdUIsU0FBdkIsQ0FBakI7QUFDQU0sR0FBRyxDQUFDSSxHQUFKLENBQVFDLDhCQUFlSCxpQkFBS0MsT0FBTCxDQUFhVCxRQUFiLEVBQXVCLFVBQXZCLENBQWYsQ0FBUjtBQUVBTSxHQUFHLENBQUNELEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBVU8sR0FBVixFQUFlQyxHQUFmLEVBQW9CO0FBQzdCQSxFQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxPQUFYO0FBQ0gsQ0FGRDtBQUlBUixHQUFHLENBQUNTLE1BQUosQ0FBV1osSUFBWCxFQUFpQixZQUFZO0FBQ3pCYSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsdUNBQTJDZCxJQUEzQztBQUNILENBRkQiLCJzb3VyY2VSb290IjoiRDpcXE9wZW5TZXJ2ZXJcXGRvbWFpbnNcXGxvY2FsLmxvY1xcdGVzdHNcXHRlc3RfZWRpc29uX3RyYWluZWVcXGFwcFxcc2VydmVyIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xyXG5pbXBvcnQgY29uZmlnIGZyb20gJ2NvbmZpZyc7XHJcblxyXG5jb25zdCByb290UGF0aCA9IHByb2Nlc3MuY3dkKCk7XHJcbmNvbnN0IHBvcnQgPSBjb25maWcuZ2V0KCdzZXJ2ZXIucG9ydCcpO1xyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG5hcHAuc2V0KCd2aWV3IGVuZ2luZScsICdwdWcnKTtcclxuYXBwLnNldCgndmlld3MnLCBwYXRoLnJlc29sdmUocm9vdFBhdGgsICcuL3ZpZXdzJykpO1xyXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGgucmVzb2x2ZShyb290UGF0aCwgJy4vYXNzZXRzJykpKTtcclxuXHJcbmFwcC5nZXQoJy8nLCBmdW5jdGlvbiAocmVxLCByZXMpIHtcclxuICAgIHJlcy5yZW5kZXIoJ2luZGV4Jyk7XHJcbn0pO1xyXG5cclxuYXBwLmxpc3Rlbihwb3J0LCBmdW5jdGlvbiAoKSB7XHJcbiAgICBjb25zb2xlLmxvZyhgU2VydmVyIHdhcyBzdGFydGVkIG9uIHBvcnQgJyR7cG9ydH0nYCk7XHJcbn0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "serverHtml.js"
      ],
      "names": [
        "rootPath",
        "process",
        "cwd",
        "port",
        "config",
        "get",
        "app",
        "set",
        "path",
        "resolve",
        "use",
        "express",
        "req",
        "res",
        "render",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAR,EAAjB;;AACA,IAAMC,IAAI,GAAGC,mBAAOC,GAAP,CAAW,aAAX,CAAb;;AACA,IAAMC,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAD,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBC,iBAAKC,OAAL,CAAaT,QAAb,EAAuB,SAAvB,CAAjB;AACAM,GAAG,CAACI,GAAJ,CAAQC,8BAAeH,iBAAKC,OAAL,CAAaT,QAAb,EAAuB,UAAvB,CAAf,CAAR;AAEAM,GAAG,CAACD,GAAJ,CAAQ,GAAR,EAAa,UAAUO,GAAV,EAAeC,GAAf,EAAoB;AAC7BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,OAAX;AACH,CAFD;AAIAR,GAAG,CAACS,MAAJ,CAAWZ,IAAX,EAAiB,YAAY;AACzBa,EAAAA,OAAO,CAACC,GAAR,uCAA2Cd,IAA3C;AACH,CAFD",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\server",
      "sourcesContent": [
        "import express from 'express';\r\nimport path from 'path';\r\nimport config from 'config';\r\n\r\nconst rootPath = process.cwd();\r\nconst port = config.get('server.port');\r\nconst app = express();\r\n\r\napp.set('view engine', 'pug');\r\napp.set('views', path.resolve(rootPath, './views'));\r\napp.use(express.static(path.resolve(rootPath, './assets')));\r\n\r\napp.get('/', function (req, res) {\r\n    res.render('index');\r\n});\r\n\r\napp.listen(port, function () {\r\n    console.log(`Server was started on port '${port}'`);\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1558886109864
  },
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\\\\message.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\message.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\message.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\message.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app",
        "sourceFileName": "message.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _default = {\n  er: {\n    // errors\n    wrongFormat: {\n      error: 'Не верный формат. Ожидается json.'\n    },\n    onInvalidTransition: function onInvalidTransition(transition, from, to) {\n      return {\n        error: \"\".concat(transition, \" not allowed from:\").concat(from, \" to:\").concat(to, \" state\")\n      };\n    },\n    wrongNumber: {\n      error: 'число должно быть 2х значное'\n    }\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lc3NhZ2UuanMiXSwibmFtZXMiOlsiZXIiLCJ3cm9uZ0Zvcm1hdCIsImVycm9yIiwib25JbnZhbGlkVHJhbnNpdGlvbiIsInRyYW5zaXRpb24iLCJmcm9tIiwidG8iLCJ3cm9uZ051bWJlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2VBQWU7QUFDWEEsRUFBQUEsRUFBRSxFQUFFO0FBQUU7QUFDRkMsSUFBQUEsV0FBVyxFQUFFO0FBQUVDLE1BQUFBLEtBQUssRUFBRTtBQUFULEtBRGI7QUFFQUMsSUFBQUEsbUJBQW1CLEVBQUUsNkJBQUNDLFVBQUQsRUFBYUMsSUFBYixFQUFtQkMsRUFBbkI7QUFBQSxhQUEyQjtBQUFFSixRQUFBQSxLQUFLLFlBQUtFLFVBQUwsK0JBQW9DQyxJQUFwQyxpQkFBK0NDLEVBQS9DO0FBQVAsT0FBM0I7QUFBQSxLQUZyQjtBQUdBQyxJQUFBQSxXQUFXLEVBQUU7QUFBRUwsTUFBQUEsS0FBSyxFQUFFO0FBQVQ7QUFIYjtBQURPLEMiLCJzb3VyY2VSb290IjoiRDpcXE9wZW5TZXJ2ZXJcXGRvbWFpbnNcXGxvY2FsLmxvY1xcdGVzdHNcXHRlc3RfZWRpc29uX3RyYWluZWVcXGFwcCIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGVyOiB7IC8vIGVycm9yc1xyXG4gICAgICAgIHdyb25nRm9ybWF0OiB7IGVycm9yOiAn0J3QtSDQstC10YDQvdGL0Lkg0YTQvtGA0LzQsNGCLiDQntC20LjQtNCw0LXRgtGB0Y8ganNvbi4nIH0sXHJcbiAgICAgICAgb25JbnZhbGlkVHJhbnNpdGlvbjogKHRyYW5zaXRpb24sIGZyb20sIHRvKSA9PiAoeyBlcnJvcjogYCR7dHJhbnNpdGlvbn0gbm90IGFsbG93ZWQgZnJvbToke2Zyb219IHRvOiR7dG99IHN0YXRlYCB9KSxcclxuICAgICAgICB3cm9uZ051bWJlcjogeyBlcnJvcjogJ9GH0LjRgdC70L4g0LTQvtC70LbQvdC+INCx0YvRgtGMIDLRhSDQt9C90LDRh9C90L7QtScgfSxcclxuICAgIH1cclxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "message.js"
      ],
      "names": [
        "er",
        "wrongFormat",
        "error",
        "onInvalidTransition",
        "transition",
        "from",
        "to",
        "wrongNumber"
      ],
      "mappings": ";;;;;;eAAe;AACXA,EAAAA,EAAE,EAAE;AAAE;AACFC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADb;AAEAC,IAAAA,mBAAmB,EAAE,6BAACC,UAAD,EAAaC,IAAb,EAAmBC,EAAnB;AAAA,aAA2B;AAAEJ,QAAAA,KAAK,YAAKE,UAAL,+BAAoCC,IAApC,iBAA+CC,EAA/C;AAAP,OAA3B;AAAA,KAFrB;AAGAC,IAAAA,WAAW,EAAE;AAAEL,MAAAA,KAAK,EAAE;AAAT;AAHb;AADO,C",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app",
      "sourcesContent": [
        "export default {\r\n    er: { // errors\r\n        wrongFormat: { error: 'Не верный формат. Ожидается json.' },\r\n        onInvalidTransition: (transition, from, to) => ({ error: `${transition} not allowed from:${from} to:${to} state` }),\r\n        wrongNumber: { error: 'число должно быть 2х значное' },\r\n    }\r\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1559577813494
  },
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\\\\psychics\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\\\\psychics\\\\factory.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics\\factory.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics\\factory.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics\\factory.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics",
        "sourceFileName": "factory.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _psychic = require(\"./psychic.js\");\n\n// экстрасенсы\nvar psychics = new _psychic.Psychics([{\n  name: 'Ы',\n  rating: 1,\n  photoPath: 'images/Ы.jpg'\n}, {\n  name: '2',\n  rating: 2,\n  photoPath: 'images/2.jpg'\n}, {\n  name: 'Синий',\n  rating: 3,\n  photoPath: 'images/123.jpg',\n  guess: function guess() {\n    var arr = [10, 22, 33, 33, 50, 78];\n\n    var rand = _psychic.Psychic.randomInteger(0, arr.length - 1);\n\n    return arr[rand];\n  }\n}]);\nvar _default = psychics;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZhY3RvcnkuanMiXSwibmFtZXMiOlsicHN5Y2hpY3MiLCJQc3ljaGljcyIsIm5hbWUiLCJyYXRpbmciLCJwaG90b1BhdGgiLCJndWVzcyIsImFyciIsInJhbmQiLCJQc3ljaGljIiwicmFuZG9tSW50ZWdlciIsImxlbmd0aCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUFrRDtBQUVsRCxJQUFNQSxRQUFRLEdBQUcsSUFBSUMsaUJBQUosQ0FBYSxDQUMxQjtBQUFFQyxFQUFBQSxJQUFJLEVBQUUsR0FBUjtBQUFhQyxFQUFBQSxNQUFNLEVBQUUsQ0FBckI7QUFBd0JDLEVBQUFBLFNBQVMsRUFBRTtBQUFuQyxDQUQwQixFQUUxQjtBQUFFRixFQUFBQSxJQUFJLEVBQUUsR0FBUjtBQUFhQyxFQUFBQSxNQUFNLEVBQUUsQ0FBckI7QUFBd0JDLEVBQUFBLFNBQVMsRUFBRTtBQUFuQyxDQUYwQixFQUcxQjtBQUNJRixFQUFBQSxJQUFJLEVBQUUsT0FEVjtBQUNtQkMsRUFBQUEsTUFBTSxFQUFFLENBRDNCO0FBQzhCQyxFQUFBQSxTQUFTLEVBQUUsZ0JBRHpDO0FBQzJEQyxFQUFBQSxLQUFLLEVBQUUsaUJBQU07QUFDaEUsUUFBTUMsR0FBRyxHQUFHLENBQUMsRUFBRCxFQUFLLEVBQUwsRUFBUyxFQUFULEVBQWEsRUFBYixFQUFpQixFQUFqQixFQUFxQixFQUFyQixDQUFaOztBQUNBLFFBQU1DLElBQUksR0FBR0MsaUJBQVFDLGFBQVIsQ0FBc0IsQ0FBdEIsRUFBeUJILEdBQUcsQ0FBQ0ksTUFBSixHQUFhLENBQXRDLENBQWI7O0FBQ0EsV0FBT0osR0FBRyxDQUFDQyxJQUFELENBQVY7QUFDSDtBQUxMLENBSDBCLENBQWIsQ0FBakI7ZUFZZVAsUSIsInNvdXJjZVJvb3QiOiJEOlxcT3BlblNlcnZlclxcZG9tYWluc1xcbG9jYWwubG9jXFx0ZXN0c1xcdGVzdF9lZGlzb25fdHJhaW5lZVxcYXBwXFxwc3ljaGljcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBzeWNoaWMsIFBzeWNoaWNzIH0gZnJvbSAnLi9wc3ljaGljLmpzJzsgLy8g0Y3QutGB0YLRgNCw0YHQtdC90YHRi1xyXG5cclxuY29uc3QgcHN5Y2hpY3MgPSBuZXcgUHN5Y2hpY3MoW1xyXG4gICAgeyBuYW1lOiAn0KsnLCByYXRpbmc6IDEsIHBob3RvUGF0aDogJ2ltYWdlcy/Qqy5qcGcnIH0sXHJcbiAgICB7IG5hbWU6ICcyJywgcmF0aW5nOiAyLCBwaG90b1BhdGg6ICdpbWFnZXMvMi5qcGcnIH0sXHJcbiAgICB7XHJcbiAgICAgICAgbmFtZTogJ9Ch0LjQvdC40LknLCByYXRpbmc6IDMsIHBob3RvUGF0aDogJ2ltYWdlcy8xMjMuanBnJywgZ3Vlc3M6ICgpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgYXJyID0gWzEwLCAyMiwgMzMsIDMzLCA1MCwgNzhdO1xyXG4gICAgICAgICAgICBjb25zdCByYW5kID0gUHN5Y2hpYy5yYW5kb21JbnRlZ2VyKDAsIGFyci5sZW5ndGggLSAxKTtcclxuICAgICAgICAgICAgcmV0dXJuIGFycltyYW5kXTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5dKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHBzeWNoaWNzOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "factory.js"
      ],
      "names": [
        "psychics",
        "Psychics",
        "name",
        "rating",
        "photoPath",
        "guess",
        "arr",
        "rand",
        "Psychic",
        "randomInteger",
        "length"
      ],
      "mappings": ";;;;;;;AAAA;;AAAkD;AAElD,IAAMA,QAAQ,GAAG,IAAIC,iBAAJ,CAAa,CAC1B;AAAEC,EAAAA,IAAI,EAAE,GAAR;AAAaC,EAAAA,MAAM,EAAE,CAArB;AAAwBC,EAAAA,SAAS,EAAE;AAAnC,CAD0B,EAE1B;AAAEF,EAAAA,IAAI,EAAE,GAAR;AAAaC,EAAAA,MAAM,EAAE,CAArB;AAAwBC,EAAAA,SAAS,EAAE;AAAnC,CAF0B,EAG1B;AACIF,EAAAA,IAAI,EAAE,OADV;AACmBC,EAAAA,MAAM,EAAE,CAD3B;AAC8BC,EAAAA,SAAS,EAAE,gBADzC;AAC2DC,EAAAA,KAAK,EAAE,iBAAM;AAChE,QAAMC,GAAG,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAAZ;;AACA,QAAMC,IAAI,GAAGC,iBAAQC,aAAR,CAAsB,CAAtB,EAAyBH,GAAG,CAACI,MAAJ,GAAa,CAAtC,CAAb;;AACA,WAAOJ,GAAG,CAACC,IAAD,CAAV;AACH;AALL,CAH0B,CAAb,CAAjB;eAYeP,Q",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics",
      "sourcesContent": [
        "import { Psychic, Psychics } from './psychic.js'; // экстрасенсы\r\n\r\nconst psychics = new Psychics([\r\n    { name: 'Ы', rating: 1, photoPath: 'images/Ы.jpg' },\r\n    { name: '2', rating: 2, photoPath: 'images/2.jpg' },\r\n    {\r\n        name: 'Синий', rating: 3, photoPath: 'images/123.jpg', guess: () => {\r\n            const arr = [10, 22, 33, 33, 50, 78];\r\n            const rand = Psychic.randomInteger(0, arr.length - 1);\r\n            return arr[rand];\r\n        }\r\n    },\r\n]);\r\n\r\nexport default psychics;"
      ]
    },
    "sourceType": "script",
    "mtime": 1558877854842
  },
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\indexNode.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\indexNode.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\indexNode.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\indexNode.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
        "sourceFileName": "indexNode.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _servetWebSocet = _interopRequireDefault(require(\"./app/server/servetWebSocet\"));\n\nvar _message = _interopRequireDefault(require(\"./app/message\"));\n\nvar _psychic = _interopRequireDefault(require(\"./app/psychics/psychic.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nrequire('./app/server/serverHtml');\n\n// экстрасенсы\nvar webSocketServer = (0, _servetWebSocet[\"default\"])(function (client) {\n  webSocketServer.sendJson(client, {\n    psychics: _psychic[\"default\"].valueOf(),\n    state: 'begin'\n  });\n}, function (message) {\n  console.log(message);\n}); // webSocketServer.on('connection', (client) => {\n//     // console.dir(client);\n//     client.on('message', (message) => {\n//         let msg = {};\n//         try {\n//             msg = JSON.parse(message);\n//         } catch (e) {\n//             wsJsonSend(ms.er.wrongFormat);\n//             return;\n//         }\n//     })\n// });\n// console.log(WebSocketServer);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4Tm9kZS5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwid2ViU29ja2V0U2VydmVyIiwiY2xpZW50Iiwic2VuZEpzb24iLCJwc3ljaGljcyIsInZhbHVlT2YiLCJzdGF0ZSIsIm1lc3NhZ2UiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUNBOztBQUNBOztBQUNBOzs7O0FBSEFBLE9BQU8sQ0FBQyx5QkFBRCxDQUFQOztBQUdrRDtBQUVsRCxJQUFJQyxlQUFlLEdBQUcsZ0NBQWlCLFVBQUNDLE1BQUQsRUFBWTtBQUMzQ0QsRUFBQUEsZUFBZSxDQUFDRSxRQUFoQixDQUF5QkQsTUFBekIsRUFBaUM7QUFDN0JFLElBQUFBLFFBQVEsRUFBRUEsb0JBQVNDLE9BQVQsRUFEbUI7QUFFN0JDLElBQUFBLEtBQUssRUFBRTtBQUZzQixHQUFqQztBQUlILENBTGlCLEVBTWxCLFVBQUNDLE9BQUQsRUFBYTtBQUNUQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsT0FBWjtBQUNILENBUmlCLENBQXRCLEMsQ0FTQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiJEOlxcT3BlblNlcnZlclxcZG9tYWluc1xcbG9jYWwubG9jXFx0ZXN0c1xcdGVzdF9lZGlzb25fdHJhaW5lZSIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vYXBwL3NlcnZlci9zZXJ2ZXJIdG1sJyk7XHJcbmltcG9ydCB3ZWJTb2NldExpc3RlbmVyIGZyb20gJy4vYXBwL3NlcnZlci9zZXJ2ZXRXZWJTb2NldCc7XHJcbmltcG9ydCBtcyBmcm9tICcuL2FwcC9tZXNzYWdlJztcclxuaW1wb3J0IHBzeWNoaWNzIGZyb20gJy4vYXBwL3BzeWNoaWNzL3BzeWNoaWMuanMnOyAvLyDRjdC60YHRgtGA0LDRgdC10L3RgdGLXHJcblxyXG5sZXQgd2ViU29ja2V0U2VydmVyID0gd2ViU29jZXRMaXN0ZW5lcigoY2xpZW50KSA9PiB7XHJcbiAgICAgICAgd2ViU29ja2V0U2VydmVyLnNlbmRKc29uKGNsaWVudCwge1xyXG4gICAgICAgICAgICBwc3ljaGljczogcHN5Y2hpY3MudmFsdWVPZigpLFxyXG4gICAgICAgICAgICBzdGF0ZTogJ2JlZ2luJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIChtZXNzYWdlKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2cobWVzc2FnZSk7XHJcbiAgICB9KTtcclxuLy8gd2ViU29ja2V0U2VydmVyLm9uKCdjb25uZWN0aW9uJywgKGNsaWVudCkgPT4ge1xyXG4vLyAgICAgLy8gY29uc29sZS5kaXIoY2xpZW50KTtcclxuLy8gICAgIGNsaWVudC5vbignbWVzc2FnZScsIChtZXNzYWdlKSA9PiB7XHJcbi8vICAgICAgICAgbGV0IG1zZyA9IHt9O1xyXG4vLyAgICAgICAgIHRyeSB7XHJcbi8vICAgICAgICAgICAgIG1zZyA9IEpTT04ucGFyc2UobWVzc2FnZSk7XHJcbi8vICAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4vLyAgICAgICAgICAgICB3c0pzb25TZW5kKG1zLmVyLndyb25nRm9ybWF0KTtcclxuLy8gICAgICAgICAgICAgcmV0dXJuO1xyXG4vLyAgICAgICAgIH1cclxuLy8gICAgIH0pXHJcbi8vIH0pO1xyXG4vLyBjb25zb2xlLmxvZyhXZWJTb2NrZXRTZXJ2ZXIpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "indexNode.js"
      ],
      "names": [
        "require",
        "webSocketServer",
        "client",
        "sendJson",
        "psychics",
        "valueOf",
        "state",
        "message",
        "console",
        "log"
      ],
      "mappings": ";;AACA;;AACA;;AACA;;;;AAHAA,OAAO,CAAC,yBAAD,CAAP;;AAGkD;AAElD,IAAIC,eAAe,GAAG,gCAAiB,UAACC,MAAD,EAAY;AAC3CD,EAAAA,eAAe,CAACE,QAAhB,CAAyBD,MAAzB,EAAiC;AAC7BE,IAAAA,QAAQ,EAAEA,oBAASC,OAAT,EADmB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAjC;AAIH,CALiB,EAMlB,UAACC,OAAD,EAAa;AACTC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACH,CARiB,CAAtB,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourcesContent": [
        "require('./app/server/serverHtml');\r\nimport webSocetListener from './app/server/servetWebSocet';\r\nimport ms from './app/message';\r\nimport psychics from './app/psychics/psychic.js'; // экстрасенсы\r\n\r\nlet webSocketServer = webSocetListener((client) => {\r\n        webSocketServer.sendJson(client, {\r\n            psychics: psychics.valueOf(),\r\n            state: 'begin'\r\n        });\r\n    },\r\n    (message) => {\r\n        console.log(message);\r\n    });\r\n// webSocketServer.on('connection', (client) => {\r\n//     // console.dir(client);\r\n//     client.on('message', (message) => {\r\n//         let msg = {};\r\n//         try {\r\n//             msg = JSON.parse(message);\r\n//         } catch (e) {\r\n//             wsJsonSend(ms.er.wrongFormat);\r\n//             return;\r\n//         }\r\n//     })\r\n// });\r\n// console.log(WebSocketServer);"
      ]
    },
    "sourceType": "script",
    "mtime": 1559109392101
  },
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\\\\indexNode.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\indexNode.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\indexNode.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\indexNode.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app",
        "sourceFileName": "indexNode.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _servetWebSocet = require(\"./server/servetWebSocet\");\n\nvar _message = _interopRequireDefault(require(\"./message\"));\n\nvar _index = _interopRequireDefault(require(\"./psychics/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nrequire('./server/serverHtml');\n\n// экстрасенсы\n(0, _servetWebSocet.onConnect)(function (client) {\n  _servetWebSocet.wss.sendJson(client, {\n    psychics: _index[\"default\"].valueOf(),\n    state: 'begin'\n  });\n\n  (0, _servetWebSocet.listenClient)(client, function (message) {\n    console.log(message);\n\n    if (message.step === 'toGuess') {\n      var guesses = _index[\"default\"].guesses(client);\n\n      _servetWebSocet.wss.sendJson(client, {\n        guesses: guesses,\n        state: 'guess'\n      });\n    }\n\n    if (message.step === 'toAnswer') {\n      _index[\"default\"].recalcRating(client, message.answer);\n\n      _servetWebSocet.wss.broadcastJson({\n        psychics: _index[\"default\"].valueOf()\n      });\n\n      _servetWebSocet.wss.sendJson(client, {\n        state: 'begin'\n      });\n    }\n  }, function () {\n    _index[\"default\"].deleteClientMap(client);\n  }, function (er) {\n    _servetWebSocet.wss.sendJson(client, {\n      error: _message[\"default\"].er.wrongFormat,\n      er: er\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4Tm9kZS5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiY2xpZW50Iiwid3NzIiwic2VuZEpzb24iLCJwc3ljaGljcyIsInZhbHVlT2YiLCJzdGF0ZSIsIm1lc3NhZ2UiLCJjb25zb2xlIiwibG9nIiwic3RlcCIsImd1ZXNzZXMiLCJyZWNhbGNSYXRpbmciLCJhbnN3ZXIiLCJicm9hZGNhc3RKc29uIiwiZGVsZXRlQ2xpZW50TWFwIiwiZXIiLCJlcnJvciIsIm1zIiwid3JvbmdGb3JtYXQiXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFIQUEsT0FBTyxDQUFDLHFCQUFELENBQVA7O0FBRzRDO0FBRTVDLCtCQUFVLFVBQUNDLE1BQUQsRUFBWTtBQUNsQkMsc0JBQUlDLFFBQUosQ0FBYUYsTUFBYixFQUFxQjtBQUNqQkcsSUFBQUEsUUFBUSxFQUFFQSxrQkFBU0MsT0FBVCxFQURPO0FBRWpCQyxJQUFBQSxLQUFLLEVBQUU7QUFGVSxHQUFyQjs7QUFJQSxvQ0FBYUwsTUFBYixFQUNJLFVBQUNNLE9BQUQsRUFBYTtBQUNUQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsT0FBWjs7QUFDQSxRQUFJQSxPQUFPLENBQUNHLElBQVIsS0FBaUIsU0FBckIsRUFBZ0M7QUFDNUIsVUFBSUMsT0FBTyxHQUFHUCxrQkFBU08sT0FBVCxDQUFpQlYsTUFBakIsQ0FBZDs7QUFDQUMsMEJBQUlDLFFBQUosQ0FBYUYsTUFBYixFQUFxQjtBQUNqQlUsUUFBQUEsT0FBTyxFQUFFQSxPQURRO0FBRWpCTCxRQUFBQSxLQUFLLEVBQUU7QUFGVSxPQUFyQjtBQUlIOztBQUNELFFBQUlDLE9BQU8sQ0FBQ0csSUFBUixLQUFpQixVQUFyQixFQUFpQztBQUM3Qk4sd0JBQVNRLFlBQVQsQ0FBc0JYLE1BQXRCLEVBQThCTSxPQUFPLENBQUNNLE1BQXRDOztBQUNBWCwwQkFBSVksYUFBSixDQUFrQjtBQUNkVixRQUFBQSxRQUFRLEVBQUVBLGtCQUFTQyxPQUFUO0FBREksT0FBbEI7O0FBR0FILDBCQUFJQyxRQUFKLENBQWFGLE1BQWIsRUFBcUI7QUFDakJLLFFBQUFBLEtBQUssRUFBRTtBQURVLE9BQXJCO0FBR0g7QUFDSixHQW5CTCxFQW9CSSxZQUFNO0FBQ0ZGLHNCQUFTVyxlQUFULENBQXlCZCxNQUF6QjtBQUNILEdBdEJMLEVBdUJJLFVBQUNlLEVBQUQsRUFBUTtBQUNKZCx3QkFBSUMsUUFBSixDQUFhRixNQUFiLEVBQXFCO0FBQ2pCZ0IsTUFBQUEsS0FBSyxFQUFFQyxvQkFBR0YsRUFBSCxDQUFNRyxXQURJO0FBRWpCSCxNQUFBQSxFQUFFLEVBQUZBO0FBRmlCLEtBQXJCO0FBSUgsR0E1Qkw7QUE4QkgsQ0FuQ0QiLCJzb3VyY2VSb290IjoiRDpcXE9wZW5TZXJ2ZXJcXGRvbWFpbnNcXGxvY2FsLmxvY1xcdGVzdHNcXHRlc3RfZWRpc29uX3RyYWluZWVcXGFwcCIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vc2VydmVyL3NlcnZlckh0bWwnKTtcclxuaW1wb3J0IHsgd3NzLCBvbkNvbm5lY3QsIGxpc3RlbkNsaWVudCB9IGZyb20gJy4vc2VydmVyL3NlcnZldFdlYlNvY2V0JztcclxuaW1wb3J0IG1zIGZyb20gJy4vbWVzc2FnZSc7IC8vINGB0L7QvtCx0YnQtdC90LjRj1xyXG5pbXBvcnQgcHN5Y2hpY3MgZnJvbSAnLi9wc3ljaGljcy9pbmRleC5qcyc7IC8vINGN0LrRgdGC0YDQsNGB0LXQvdGB0YtcclxuXHJcbm9uQ29ubmVjdCgoY2xpZW50KSA9PiB7XHJcbiAgICB3c3Muc2VuZEpzb24oY2xpZW50LCB7XHJcbiAgICAgICAgcHN5Y2hpY3M6IHBzeWNoaWNzLnZhbHVlT2YoKSxcclxuICAgICAgICBzdGF0ZTogJ2JlZ2luJyxcclxuICAgIH0pO1xyXG4gICAgbGlzdGVuQ2xpZW50KGNsaWVudCxcclxuICAgICAgICAobWVzc2FnZSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhtZXNzYWdlKTtcclxuICAgICAgICAgICAgaWYgKG1lc3NhZ2Uuc3RlcCA9PT0gJ3RvR3Vlc3MnKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgZ3Vlc3NlcyA9IHBzeWNoaWNzLmd1ZXNzZXMoY2xpZW50KTtcclxuICAgICAgICAgICAgICAgIHdzcy5zZW5kSnNvbihjbGllbnQsIHtcclxuICAgICAgICAgICAgICAgICAgICBndWVzc2VzOiBndWVzc2VzLFxyXG4gICAgICAgICAgICAgICAgICAgIHN0YXRlOiAnZ3Vlc3MnLFxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKG1lc3NhZ2Uuc3RlcCA9PT0gJ3RvQW5zd2VyJykge1xyXG4gICAgICAgICAgICAgICAgcHN5Y2hpY3MucmVjYWxjUmF0aW5nKGNsaWVudCwgbWVzc2FnZS5hbnN3ZXIpO1xyXG4gICAgICAgICAgICAgICAgd3NzLmJyb2FkY2FzdEpzb24oe1xyXG4gICAgICAgICAgICAgICAgICAgIHBzeWNoaWNzOiBwc3ljaGljcy52YWx1ZU9mKCksXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHdzcy5zZW5kSnNvbihjbGllbnQsIHtcclxuICAgICAgICAgICAgICAgICAgICBzdGF0ZTogJ2JlZ2luJyxcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICAoKSA9PiB7XHJcbiAgICAgICAgICAgIHBzeWNoaWNzLmRlbGV0ZUNsaWVudE1hcChjbGllbnQpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgKGVyKSA9PiB7XHJcbiAgICAgICAgICAgIHdzcy5zZW5kSnNvbihjbGllbnQsIHtcclxuICAgICAgICAgICAgICAgIGVycm9yOiBtcy5lci53cm9uZ0Zvcm1hdCxcclxuICAgICAgICAgICAgICAgIGVyLFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9LFxyXG4gICAgKTtcclxufSk7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "indexNode.js"
      ],
      "names": [
        "require",
        "client",
        "wss",
        "sendJson",
        "psychics",
        "valueOf",
        "state",
        "message",
        "console",
        "log",
        "step",
        "guesses",
        "recalcRating",
        "answer",
        "broadcastJson",
        "deleteClientMap",
        "er",
        "error",
        "ms",
        "wrongFormat"
      ],
      "mappings": ";;AACA;;AACA;;AACA;;;;AAHAA,OAAO,CAAC,qBAAD,CAAP;;AAG4C;AAE5C,+BAAU,UAACC,MAAD,EAAY;AAClBC,sBAAIC,QAAJ,CAAaF,MAAb,EAAqB;AACjBG,IAAAA,QAAQ,EAAEA,kBAASC,OAAT,EADO;AAEjBC,IAAAA,KAAK,EAAE;AAFU,GAArB;;AAIA,oCAAaL,MAAb,EACI,UAACM,OAAD,EAAa;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,QAAIA,OAAO,CAACG,IAAR,KAAiB,SAArB,EAAgC;AAC5B,UAAIC,OAAO,GAAGP,kBAASO,OAAT,CAAiBV,MAAjB,CAAd;;AACAC,0BAAIC,QAAJ,CAAaF,MAAb,EAAqB;AACjBU,QAAAA,OAAO,EAAEA,OADQ;AAEjBL,QAAAA,KAAK,EAAE;AAFU,OAArB;AAIH;;AACD,QAAIC,OAAO,CAACG,IAAR,KAAiB,UAArB,EAAiC;AAC7BN,wBAASQ,YAAT,CAAsBX,MAAtB,EAA8BM,OAAO,CAACM,MAAtC;;AACAX,0BAAIY,aAAJ,CAAkB;AACdV,QAAAA,QAAQ,EAAEA,kBAASC,OAAT;AADI,OAAlB;;AAGAH,0BAAIC,QAAJ,CAAaF,MAAb,EAAqB;AACjBK,QAAAA,KAAK,EAAE;AADU,OAArB;AAGH;AACJ,GAnBL,EAoBI,YAAM;AACFF,sBAASW,eAAT,CAAyBd,MAAzB;AACH,GAtBL,EAuBI,UAACe,EAAD,EAAQ;AACJd,wBAAIC,QAAJ,CAAaF,MAAb,EAAqB;AACjBgB,MAAAA,KAAK,EAAEC,oBAAGF,EAAH,CAAMG,WADI;AAEjBH,MAAAA,EAAE,EAAFA;AAFiB,KAArB;AAIH,GA5BL;AA8BH,CAnCD",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app",
      "sourcesContent": [
        "require('./server/serverHtml');\r\nimport { wss, onConnect, listenClient } from './server/servetWebSocet';\r\nimport ms from './message'; // сообщения\r\nimport psychics from './psychics/index.js'; // экстрасенсы\r\n\r\nonConnect((client) => {\r\n    wss.sendJson(client, {\r\n        psychics: psychics.valueOf(),\r\n        state: 'begin',\r\n    });\r\n    listenClient(client,\r\n        (message) => {\r\n            console.log(message);\r\n            if (message.step === 'toGuess') {\r\n                let guesses = psychics.guesses(client);\r\n                wss.sendJson(client, {\r\n                    guesses: guesses,\r\n                    state: 'guess',\r\n                });\r\n            }\r\n            if (message.step === 'toAnswer') {\r\n                psychics.recalcRating(client, message.answer);\r\n                wss.broadcastJson({\r\n                    psychics: psychics.valueOf(),\r\n                });\r\n                wss.sendJson(client, {\r\n                    state: 'begin',\r\n                });\r\n            }\r\n        },\r\n        () => {\r\n            psychics.deleteClientMap(client);\r\n        },\r\n        (er) => {\r\n            wss.sendJson(client, {\r\n                error: ms.er.wrongFormat,\r\n                er,\r\n            });\r\n        },\r\n    );\r\n});\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562346877738
  },
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\\\\stateMachine.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\stateMachine.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\stateMachine.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\stateMachine.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app",
        "sourceFileName": "stateMachine.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _javascriptStateMachine = _interopRequireDefault(require(\"javascript-state-machine\"));\n\nvar _message = _interopRequireDefault(require(\"./message\"));\n\nvar _index = _interopRequireDefault(require(\"./psychics/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// сообщения\n// экстрасенсы\nvar clientsMap = new Map();\n\nvar FSM = _javascriptStateMachine[\"default\"].factory({\n  init: 'connect',\n  transitions: [{\n    name: 'toBegin',\n    from: 'connect',\n    to: 'begin'\n  }, {\n    name: 'toGuess',\n    from: 'begin',\n    to: 'guess'\n  }, {\n    name: 'toAnswer',\n    from: 'guess',\n    to: 'begin'\n  }],\n  data: function data(wss, client) {\n    return {\n      wss: wss,\n      client: client\n    };\n  },\n  methods: {\n    onConnect: function onConnect() {\n      clientsMap.set(client, []);\n      this.wss.sendJson(this.client, {\n        psychics: _index[\"default\"].valueOf()\n      });\n    },\n    onBegin: function onBegin() {\n      this.wss.sendJson(this.client, {\n        state: this.state\n      });\n    },\n    onGuess: function onGuess() {// guesses = psychics.guesses();\n      // wss.sendJson({\n      //     'guesses': guesses,\n      //     state: this.state,\n      // });\n    },\n    onInvalidTransition: function onInvalidTransition(transition, from, to) {\n      this.wss.sendJson(this.client, _message[\"default\"].er.onInvalidTransition(transition, from, to));\n    }\n  }\n});\n\nvar _default = FSM;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXRlTWFjaGluZS5qcyJdLCJuYW1lcyI6WyJjbGllbnRzTWFwIiwiTWFwIiwiRlNNIiwiU3RhdGVNYWNoaW5lIiwiZmFjdG9yeSIsImluaXQiLCJ0cmFuc2l0aW9ucyIsIm5hbWUiLCJmcm9tIiwidG8iLCJkYXRhIiwid3NzIiwiY2xpZW50IiwibWV0aG9kcyIsIm9uQ29ubmVjdCIsInNldCIsInNlbmRKc29uIiwicHN5Y2hpY3MiLCJ2YWx1ZU9mIiwib25CZWdpbiIsInN0YXRlIiwib25HdWVzcyIsIm9uSW52YWxpZFRyYW5zaXRpb24iLCJ0cmFuc2l0aW9uIiwibXMiLCJlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7O0FBRDRCO0FBQ2dCO0FBRTVDLElBQU1BLFVBQVUsR0FBRyxJQUFJQyxHQUFKLEVBQW5COztBQUVBLElBQUlDLEdBQUcsR0FBR0MsbUNBQWFDLE9BQWIsQ0FBcUI7QUFDM0JDLEVBQUFBLElBQUksRUFBRSxTQURxQjtBQUUzQkMsRUFBQUEsV0FBVyxFQUFFLENBQ1Q7QUFBRUMsSUFBQUEsSUFBSSxFQUFFLFNBQVI7QUFBbUJDLElBQUFBLElBQUksRUFBRSxTQUF6QjtBQUFvQ0MsSUFBQUEsRUFBRSxFQUFFO0FBQXhDLEdBRFMsRUFFVDtBQUFFRixJQUFBQSxJQUFJLEVBQUUsU0FBUjtBQUFtQkMsSUFBQUEsSUFBSSxFQUFFLE9BQXpCO0FBQWtDQyxJQUFBQSxFQUFFLEVBQUU7QUFBdEMsR0FGUyxFQUdUO0FBQUVGLElBQUFBLElBQUksRUFBRSxVQUFSO0FBQW9CQyxJQUFBQSxJQUFJLEVBQUUsT0FBMUI7QUFBbUNDLElBQUFBLEVBQUUsRUFBRTtBQUF2QyxHQUhTLENBRmM7QUFPM0JDLEVBQUFBLElBQUksRUFBRSxjQUFDQyxHQUFELEVBQU1DLE1BQU4sRUFBaUI7QUFDbkIsV0FBTztBQUFFRCxNQUFBQSxHQUFHLEVBQUVBLEdBQVA7QUFBWUMsTUFBQUEsTUFBTSxFQUFFQTtBQUFwQixLQUFQO0FBQ0gsR0FUMEI7QUFVM0JDLEVBQUFBLE9BQU8sRUFBRTtBQUNMQyxJQUFBQSxTQUFTLEVBQUUscUJBQVk7QUFDbkJkLE1BQUFBLFVBQVUsQ0FBQ2UsR0FBWCxDQUFlSCxNQUFmLEVBQXVCLEVBQXZCO0FBQ0EsV0FBS0QsR0FBTCxDQUFTSyxRQUFULENBQWtCLEtBQUtKLE1BQXZCLEVBQStCO0FBQzNCSyxRQUFBQSxRQUFRLEVBQUVBLGtCQUFTQyxPQUFUO0FBRGlCLE9BQS9CO0FBR0gsS0FOSTtBQU9MQyxJQUFBQSxPQUFPLEVBQUUsbUJBQVk7QUFDakIsV0FBS1IsR0FBTCxDQUFTSyxRQUFULENBQWtCLEtBQUtKLE1BQXZCLEVBQStCO0FBQzNCUSxRQUFBQSxLQUFLLEVBQUUsS0FBS0E7QUFEZSxPQUEvQjtBQUdILEtBWEk7QUFZTEMsSUFBQUEsT0FBTyxFQUFFLG1CQUFZLENBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDSCxLQWxCSTtBQW1CTEMsSUFBQUEsbUJBQW1CLEVBQUUsNkJBQVVDLFVBQVYsRUFBc0JmLElBQXRCLEVBQTRCQyxFQUE1QixFQUFnQztBQUNqRCxXQUFLRSxHQUFMLENBQVNLLFFBQVQsQ0FDSSxLQUFLSixNQURULEVBRUlZLG9CQUFHQyxFQUFILENBQU1ILG1CQUFOLENBQTBCQyxVQUExQixFQUFzQ2YsSUFBdEMsRUFBNENDLEVBQTVDLENBRko7QUFJSDtBQXhCSTtBQVZrQixDQUFyQixDQUFWOztlQXNDZVAsRyIsInNvdXJjZVJvb3QiOiJEOlxcT3BlblNlcnZlclxcZG9tYWluc1xcbG9jYWwubG9jXFx0ZXN0c1xcdGVzdF9lZGlzb25fdHJhaW5lZVxcYXBwIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFN0YXRlTWFjaGluZSBmcm9tICdqYXZhc2NyaXB0LXN0YXRlLW1hY2hpbmUnO1xyXG5pbXBvcnQgbXMgZnJvbSAnLi9tZXNzYWdlJzsgLy8g0YHQvtC+0LHRidC10L3QuNGPXHJcbmltcG9ydCBwc3ljaGljcyBmcm9tICcuL3BzeWNoaWNzL2luZGV4LmpzJzsgLy8g0Y3QutGB0YLRgNCw0YHQtdC90YHRi1xyXG5cclxuY29uc3QgY2xpZW50c01hcCA9IG5ldyBNYXAoKTtcclxuXHJcbnZhciBGU00gPSBTdGF0ZU1hY2hpbmUuZmFjdG9yeSh7XHJcbiAgICBpbml0OiAnY29ubmVjdCcsXHJcbiAgICB0cmFuc2l0aW9uczogW1xyXG4gICAgICAgIHsgbmFtZTogJ3RvQmVnaW4nLCBmcm9tOiAnY29ubmVjdCcsIHRvOiAnYmVnaW4nIH0sXHJcbiAgICAgICAgeyBuYW1lOiAndG9HdWVzcycsIGZyb206ICdiZWdpbicsIHRvOiAnZ3Vlc3MnIH0sXHJcbiAgICAgICAgeyBuYW1lOiAndG9BbnN3ZXInLCBmcm9tOiAnZ3Vlc3MnLCB0bzogJ2JlZ2luJyB9LFxyXG4gICAgXSxcclxuICAgIGRhdGE6ICh3c3MsIGNsaWVudCkgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHdzczogd3NzLCBjbGllbnQ6IGNsaWVudCB9XHJcbiAgICB9LFxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgICAgIG9uQ29ubmVjdDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBjbGllbnRzTWFwLnNldChjbGllbnQsIFtdKTtcclxuICAgICAgICAgICAgdGhpcy53c3Muc2VuZEpzb24odGhpcy5jbGllbnQsIHtcclxuICAgICAgICAgICAgICAgIHBzeWNoaWNzOiBwc3ljaGljcy52YWx1ZU9mKCksXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25CZWdpbjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLndzcy5zZW5kSnNvbih0aGlzLmNsaWVudCwge1xyXG4gICAgICAgICAgICAgICAgc3RhdGU6IHRoaXMuc3RhdGUsXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25HdWVzczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvLyBndWVzc2VzID0gcHN5Y2hpY3MuZ3Vlc3NlcygpO1xyXG4gICAgICAgICAgICAvLyB3c3Muc2VuZEpzb24oe1xyXG4gICAgICAgICAgICAvLyAgICAgJ2d1ZXNzZXMnOiBndWVzc2VzLFxyXG4gICAgICAgICAgICAvLyAgICAgc3RhdGU6IHRoaXMuc3RhdGUsXHJcbiAgICAgICAgICAgIC8vIH0pO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25JbnZhbGlkVHJhbnNpdGlvbjogZnVuY3Rpb24gKHRyYW5zaXRpb24sIGZyb20sIHRvKSB7XHJcbiAgICAgICAgICAgIHRoaXMud3NzLnNlbmRKc29uKFxyXG4gICAgICAgICAgICAgICAgdGhpcy5jbGllbnQsXHJcbiAgICAgICAgICAgICAgICBtcy5lci5vbkludmFsaWRUcmFuc2l0aW9uKHRyYW5zaXRpb24sIGZyb20sIHRvKVxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH0sXHJcbiAgICB9XHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRlNNO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "stateMachine.js"
      ],
      "names": [
        "clientsMap",
        "Map",
        "FSM",
        "StateMachine",
        "factory",
        "init",
        "transitions",
        "name",
        "from",
        "to",
        "data",
        "wss",
        "client",
        "methods",
        "onConnect",
        "set",
        "sendJson",
        "psychics",
        "valueOf",
        "onBegin",
        "state",
        "onGuess",
        "onInvalidTransition",
        "transition",
        "ms",
        "er"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAD4B;AACgB;AAE5C,IAAMA,UAAU,GAAG,IAAIC,GAAJ,EAAnB;;AAEA,IAAIC,GAAG,GAAGC,mCAAaC,OAAb,CAAqB;AAC3BC,EAAAA,IAAI,EAAE,SADqB;AAE3BC,EAAAA,WAAW,EAAE,CACT;AAAEC,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,IAAI,EAAE,SAAzB;AAAoCC,IAAAA,EAAE,EAAE;AAAxC,GADS,EAET;AAAEF,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,IAAI,EAAE,OAAzB;AAAkCC,IAAAA,EAAE,EAAE;AAAtC,GAFS,EAGT;AAAEF,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,IAAI,EAAE,OAA1B;AAAmCC,IAAAA,EAAE,EAAE;AAAvC,GAHS,CAFc;AAO3BC,EAAAA,IAAI,EAAE,cAACC,GAAD,EAAMC,MAAN,EAAiB;AACnB,WAAO;AAAED,MAAAA,GAAG,EAAEA,GAAP;AAAYC,MAAAA,MAAM,EAAEA;AAApB,KAAP;AACH,GAT0B;AAU3BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,EAAE,qBAAY;AACnBd,MAAAA,UAAU,CAACe,GAAX,CAAeH,MAAf,EAAuB,EAAvB;AACA,WAAKD,GAAL,CAASK,QAAT,CAAkB,KAAKJ,MAAvB,EAA+B;AAC3BK,QAAAA,QAAQ,EAAEA,kBAASC,OAAT;AADiB,OAA/B;AAGH,KANI;AAOLC,IAAAA,OAAO,EAAE,mBAAY;AACjB,WAAKR,GAAL,CAASK,QAAT,CAAkB,KAAKJ,MAAvB,EAA+B;AAC3BQ,QAAAA,KAAK,EAAE,KAAKA;AADe,OAA/B;AAGH,KAXI;AAYLC,IAAAA,OAAO,EAAE,mBAAY,CACjB;AACA;AACA;AACA;AACA;AACH,KAlBI;AAmBLC,IAAAA,mBAAmB,EAAE,6BAAUC,UAAV,EAAsBf,IAAtB,EAA4BC,EAA5B,EAAgC;AACjD,WAAKE,GAAL,CAASK,QAAT,CACI,KAAKJ,MADT,EAEIY,oBAAGC,EAAH,CAAMH,mBAAN,CAA0BC,UAA1B,EAAsCf,IAAtC,EAA4CC,EAA5C,CAFJ;AAIH;AAxBI;AAVkB,CAArB,CAAV;;eAsCeP,G",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app",
      "sourcesContent": [
        "import StateMachine from 'javascript-state-machine';\r\nimport ms from './message'; // сообщения\r\nimport psychics from './psychics/index.js'; // экстрасенсы\r\n\r\nconst clientsMap = new Map();\r\n\r\nvar FSM = StateMachine.factory({\r\n    init: 'connect',\r\n    transitions: [\r\n        { name: 'toBegin', from: 'connect', to: 'begin' },\r\n        { name: 'toGuess', from: 'begin', to: 'guess' },\r\n        { name: 'toAnswer', from: 'guess', to: 'begin' },\r\n    ],\r\n    data: (wss, client) => {\r\n        return { wss: wss, client: client }\r\n    },\r\n    methods: {\r\n        onConnect: function () {\r\n            clientsMap.set(client, []);\r\n            this.wss.sendJson(this.client, {\r\n                psychics: psychics.valueOf(),\r\n            });\r\n        },\r\n        onBegin: function () {\r\n            this.wss.sendJson(this.client, {\r\n                state: this.state,\r\n            });\r\n        },\r\n        onGuess: function () {\r\n            // guesses = psychics.guesses();\r\n            // wss.sendJson({\r\n            //     'guesses': guesses,\r\n            //     state: this.state,\r\n            // });\r\n        },\r\n        onInvalidTransition: function (transition, from, to) {\r\n            this.wss.sendJson(\r\n                this.client,\r\n                ms.er.onInvalidTransition(transition, from, to)\r\n            );\r\n        },\r\n    }\r\n});\r\n\r\nexport default FSM;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562346688969
  },
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\\\\psychics\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\app\\\\psychics\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _psychic = require(\"./psychic\");\n\nvar psychics = new _psychic.Psychics([{\n  name: 'Ы',\n  rating: 1,\n  photoPath: 'images/Ы.jpg'\n}, {\n  name: '2',\n  rating: 2,\n  photoPath: 'images/2.jpg'\n}, {\n  name: 'Синий',\n  rating: 3,\n  photoPath: 'images/123.jpg',\n  guess: function guess() {\n    var arr = [10, 22, 33, 33, 50, 78];\n\n    var rand = _psychic.Psychic.randomInteger(0, arr.length - 1);\n\n    return arr[rand];\n  }\n}]);\nvar _default = psychics;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInBzeWNoaWNzIiwiUHN5Y2hpY3MiLCJuYW1lIiwicmF0aW5nIiwicGhvdG9QYXRoIiwiZ3Vlc3MiLCJhcnIiLCJyYW5kIiwiUHN5Y2hpYyIsInJhbmRvbUludGVnZXIiLCJsZW5ndGgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQSxJQUFNQSxRQUFRLEdBQUcsSUFBSUMsaUJBQUosQ0FBYSxDQUMxQjtBQUFFQyxFQUFBQSxJQUFJLEVBQUUsR0FBUjtBQUFhQyxFQUFBQSxNQUFNLEVBQUUsQ0FBckI7QUFBd0JDLEVBQUFBLFNBQVMsRUFBRTtBQUFuQyxDQUQwQixFQUUxQjtBQUFFRixFQUFBQSxJQUFJLEVBQUUsR0FBUjtBQUFhQyxFQUFBQSxNQUFNLEVBQUUsQ0FBckI7QUFBd0JDLEVBQUFBLFNBQVMsRUFBRTtBQUFuQyxDQUYwQixFQUcxQjtBQUNJRixFQUFBQSxJQUFJLEVBQUUsT0FEVjtBQUNtQkMsRUFBQUEsTUFBTSxFQUFFLENBRDNCO0FBQzhCQyxFQUFBQSxTQUFTLEVBQUUsZ0JBRHpDO0FBQzJEQyxFQUFBQSxLQUFLLEVBQUUsaUJBQU07QUFDaEUsUUFBTUMsR0FBRyxHQUFHLENBQUMsRUFBRCxFQUFLLEVBQUwsRUFBUyxFQUFULEVBQWEsRUFBYixFQUFpQixFQUFqQixFQUFxQixFQUFyQixDQUFaOztBQUNBLFFBQU1DLElBQUksR0FBR0MsaUJBQVFDLGFBQVIsQ0FBc0IsQ0FBdEIsRUFBeUJILEdBQUcsQ0FBQ0ksTUFBSixHQUFhLENBQXRDLENBQWI7O0FBQ0EsV0FBT0osR0FBRyxDQUFDQyxJQUFELENBQVY7QUFDSDtBQUxMLENBSDBCLENBQWIsQ0FBakI7ZUFZZVAsUSIsInNvdXJjZVJvb3QiOiJEOlxcT3BlblNlcnZlclxcZG9tYWluc1xcbG9jYWwubG9jXFx0ZXN0c1xcdGVzdF9lZGlzb25fdHJhaW5lZVxcYXBwXFxwc3ljaGljcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UHN5Y2hpYywgUHN5Y2hpY3N9IGZyb20gJy4vcHN5Y2hpYyc7XHJcblxyXG5jb25zdCBwc3ljaGljcyA9IG5ldyBQc3ljaGljcyhbXHJcbiAgICB7IG5hbWU6ICfQqycsIHJhdGluZzogMSwgcGhvdG9QYXRoOiAnaW1hZ2VzL9CrLmpwZycgfSxcclxuICAgIHsgbmFtZTogJzInLCByYXRpbmc6IDIsIHBob3RvUGF0aDogJ2ltYWdlcy8yLmpwZycgfSxcclxuICAgIHtcclxuICAgICAgICBuYW1lOiAn0KHQuNC90LjQuScsIHJhdGluZzogMywgcGhvdG9QYXRoOiAnaW1hZ2VzLzEyMy5qcGcnLCBndWVzczogKCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBhcnIgPSBbMTAsIDIyLCAzMywgMzMsIDUwLCA3OF07XHJcbiAgICAgICAgICAgIGNvbnN0IHJhbmQgPSBQc3ljaGljLnJhbmRvbUludGVnZXIoMCwgYXJyLmxlbmd0aCAtIDEpO1xyXG4gICAgICAgICAgICByZXR1cm4gYXJyW3JhbmRdO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbl0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgcHN5Y2hpY3M7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "psychics",
        "Psychics",
        "name",
        "rating",
        "photoPath",
        "guess",
        "arr",
        "rand",
        "Psychic",
        "randomInteger",
        "length"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,IAAMA,QAAQ,GAAG,IAAIC,iBAAJ,CAAa,CAC1B;AAAEC,EAAAA,IAAI,EAAE,GAAR;AAAaC,EAAAA,MAAM,EAAE,CAArB;AAAwBC,EAAAA,SAAS,EAAE;AAAnC,CAD0B,EAE1B;AAAEF,EAAAA,IAAI,EAAE,GAAR;AAAaC,EAAAA,MAAM,EAAE,CAArB;AAAwBC,EAAAA,SAAS,EAAE;AAAnC,CAF0B,EAG1B;AACIF,EAAAA,IAAI,EAAE,OADV;AACmBC,EAAAA,MAAM,EAAE,CAD3B;AAC8BC,EAAAA,SAAS,EAAE,gBADzC;AAC2DC,EAAAA,KAAK,EAAE,iBAAM;AAChE,QAAMC,GAAG,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAAZ;;AACA,QAAMC,IAAI,GAAGC,iBAAQC,aAAR,CAAsB,CAAtB,EAAyBH,GAAG,CAACI,MAAJ,GAAa,CAAtC,CAAb;;AACA,WAAOJ,GAAG,CAACC,IAAD,CAAV;AACH;AALL,CAH0B,CAAb,CAAjB;eAYeP,Q",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\app\\psychics",
      "sourcesContent": [
        "import {Psychic, Psychics} from './psychic';\r\n\r\nconst psychics = new Psychics([\r\n    { name: 'Ы', rating: 1, photoPath: 'images/Ы.jpg' },\r\n    { name: '2', rating: 2, photoPath: 'images/2.jpg' },\r\n    {\r\n        name: 'Синий', rating: 3, photoPath: 'images/123.jpg', guess: () => {\r\n            const arr = [10, 22, 33, 33, 50, 78];\r\n            const rand = Psychic.randomInteger(0, arr.length - 1);\r\n            return arr[rand];\r\n        }\r\n    },\r\n]);\r\n\r\nexport default psychics;"
      ]
    },
    "sourceType": "script",
    "mtime": 1560689124429
  }
}