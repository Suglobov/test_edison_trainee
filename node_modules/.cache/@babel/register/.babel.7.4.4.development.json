{
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\server\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _psychic = _interopRequireDefault(require(\"./psychic.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar WebSocket = require('ws');\n\nvar path = require('path');\n\nvar config = require('config');\n\nvar StateMachine = require('javascript-state-machine');\n\nvar port = config.get('server.port');\nvar portWs = config.get('server.portWs');\n// экстрасенсы\nvar psychics = [new _psychic[\"default\"]('Ы', 10), new _psychic[\"default\"]('2', 11), new _psychic[\"default\"]('Синий', 12, function () {\n  var arr = [10, 22, 33, 33, 50, 78];\n\n  var rand = _psychic[\"default\"].randomInteger(0, arr.length - 1);\n\n  return arr[rand];\n})]; // console.log(psychics[0].toString());\n// console.log(psychics[0].valueOf());\n// psychics[0].rating = 1;\n// console.log(psychics[0].rating);\n// console.log(psychics[1].id);\n// psychics[0].ratingIncrement();\n// console.log(psychics[0].rating);\n// psychics[0].ratingDecrease();\n// console.log(psychics[0].rating);\n// console.log(psychics[1].rating);\n\nvar ms = {\n  // сообщения\n  error: {\n    wrongFormat: JSON.stringify({\n      error: 'не верный формат. json ожидается'\n    }),\n    onInvalidTransition: function onInvalidTransition(transition, from, to) {\n      return JSON.stringify({\n        error: \"\".concat(transition, \" not allowed \").concat(from, \" \").concat(to, \" state\")\n      });\n    },\n    wrongNumber: JSON.stringify({\n      error: 'число должно быть 2х значное'\n    })\n  }\n}; // openning a websocket server\n\nvar wss = new WebSocket.Server({\n  port: portWs\n});\n\nvar broadcast = function broadcast(data) {\n  wss.clients.forEach(function each(client) {\n    if (client.readyState === WebSocket.OPEN) {\n      client.send(JSON.stringify(data));\n    }\n  });\n};\n\nwss.on('connection', function (ws) {\n  // console.log(ws);\n  var guesses = [];\n  var fsm = new StateMachine({\n    /*\n    beginning - отправляем рейтинг, ждем запроса догадок\n    guess - догадки отправлены, ждем правильный ответ\n    answer - получили ответ, возвращаем все в начало\n    */\n    init: 'begin',\n    transitions: [{\n      name: 'toGuess',\n      from: 'begin',\n      to: 'guess'\n    }, {\n      name: 'toBegin',\n      from: 'guess',\n      to: 'begin'\n    }],\n    methods: {\n      onBegin: function onBegin() {\n        ws.send(JSON.stringify({\n          'psychics': psychics.map(function (el) {\n            return el.valueOf();\n          }),\n          state: this.state\n        }));\n      },\n      onGuess: function onGuess() {\n        guesses = psychics.map(function (el) {\n          return el.guess();\n        });\n        ws.send(JSON.stringify({\n          'guesses': guesses,\n          state: this.state\n        }));\n      },\n      onInvalidTransition: function onInvalidTransition(transition, from, to) {\n        ws.send(ms.error.onInvalidTransition(transition, from, to));\n      }\n    }\n  });\n  ws.on('message', function (message) {\n    var msg = {};\n\n    try {\n      msg = JSON.parse(message);\n    } catch (e) {\n      ws.send(ms.error.wrongFormat);\n      return;\n    }\n\n    if (msg.step === 'toGuess') {\n      fsm.toGuess();\n    }\n\n    if (msg.answer !== undefined) {\n      if (msg.answer >= 10 && msg.answer < 100) {\n        var nb = Number(msg.answer);\n        var winIndex = guesses.indexOf(Number(msg.answer));\n        psychics.forEach(function (gu, index) {\n          if (winIndex === index) {\n            gu.ratingIncrement();\n          } else {\n            gu.ratingDecrease();\n          }\n        });\n        broadcast({\n          'psychics': psychics.map(function (el) {\n            return el.valueOf();\n          })\n        });\n        fsm.toBegin();\n        console.log(winIndex);\n      } else {\n        ws.send(ms.error.wrongNumber);\n      }\n    } // console.log(message, wss.clients);\n    // wss.clients.forEach((client) => {\n    //     client.send(message);\n    // })\n\n  });\n});\nvar app = express();\napp.listen(port, function () {\n  console.log(\"Server was started on '\".concat(port, \"'\"));\n});\napp.set('view engine', 'pug');\napp.set('views', path.resolve(__dirname, '../views'));\napp.use(express[\"static\"](path.resolve(__dirname, '../assets')));\napp.get('/', function (req, res) {\n  // console.log(new Psychic('name', 0));\n  res.render('index');\n}); // const config = require('config');\n// const express = require('express');\n// let app = express();\n// let expressWs = require('express-ws')(app);\n//\n// app.set('view engine', 'pug');\n//\n// app.ws('/', (ws, req, next) => {\n//     ws.on('message', function (msg) {\n//         console.log('msg:', msg)\n//     })\n// });\n// const port = config.get('port');\n// app.listen(port, () => {\n//     console.log(`Server was started on '${port}'`);\n// });\n// const Express = require('express');\n// const expressWs = require('express-ws');\n//\n// const app = new Express();\n// expressWs(app);\n// app.set('view engine', 'pug');\n//\n// // app.get('/', function (req, res) {\n// //     res.render('index', {})\n// // });\n//\n// app.ws('/', function(ws, req, next) {\n//     ws.on('message', function(msg) {\n//         console.log('msg:', msg)\n//     })\n// });\n//\n// app().listen(config.get('port'), () => {\n//     // eslint-disable-next-line\n//     console.log(`Server was started on '${port}'`);\n// });\n//\n// // export default app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "WebSocket",
        "path",
        "config",
        "StateMachine",
        "port",
        "get",
        "portWs",
        "psychics",
        "Psychic",
        "arr",
        "rand",
        "randomInteger",
        "length",
        "ms",
        "error",
        "wrongFormat",
        "JSON",
        "stringify",
        "onInvalidTransition",
        "transition",
        "from",
        "to",
        "wrongNumber",
        "wss",
        "Server",
        "broadcast",
        "data",
        "clients",
        "forEach",
        "each",
        "client",
        "readyState",
        "OPEN",
        "send",
        "on",
        "ws",
        "guesses",
        "fsm",
        "init",
        "transitions",
        "name",
        "methods",
        "onBegin",
        "map",
        "el",
        "valueOf",
        "state",
        "onGuess",
        "guess",
        "message",
        "msg",
        "parse",
        "e",
        "step",
        "toGuess",
        "answer",
        "undefined",
        "nb",
        "Number",
        "winIndex",
        "indexOf",
        "gu",
        "index",
        "ratingIncrement",
        "ratingDecrease",
        "toBegin",
        "console",
        "log",
        "app",
        "listen",
        "set",
        "resolve",
        "__dirname",
        "use",
        "req",
        "res",
        "render"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
      "sourcesContent": [
        "const express = require('express');\nconst WebSocket = require('ws');\nconst path = require('path');\nconst config = require('config');\nconst StateMachine = require('javascript-state-machine');\n\n\nconst port = config.get('server.port');\nconst portWs = config.get('server.portWs');\n\n\nimport Psychic from './psychic.js'; // экстрасенсы\nconst psychics = [\n    new Psychic('Ы', 10),\n    new Psychic('2', 11),\n    new Psychic('Синий', 12, () => {\n        const arr = [10, 22, 33, 33, 50, 78];\n        const rand = Psychic.randomInteger(0, arr.length - 1);\n        return arr[rand];\n    }),\n];\n\n// console.log(psychics[0].toString());\n// console.log(psychics[0].valueOf());\n// psychics[0].rating = 1;\n// console.log(psychics[0].rating);\n// console.log(psychics[1].id);\n// psychics[0].ratingIncrement();\n// console.log(psychics[0].rating);\n// psychics[0].ratingDecrease();\n// console.log(psychics[0].rating);\n// console.log(psychics[1].rating);\n\nconst ms = { // сообщения\n    error: {\n        wrongFormat: JSON.stringify({ error: 'не верный формат. json ожидается' }),\n        onInvalidTransition: (transition, from, to) =>\n            JSON.stringify({ error: `${transition} not allowed ${from} ${to} state` }),\n        wrongNumber: JSON.stringify({ error: 'число должно быть 2х значное' }),\n    },\n};\n\n// openning a websocket server\nconst wss = new WebSocket.Server({ port: portWs });\nconst broadcast = (data) => {\n    wss.clients.forEach(function each(client) {\n        if (client.readyState === WebSocket.OPEN) {\n            client.send(JSON.stringify(data));\n        }\n    });\n};\nwss.on('connection', (ws) => {\n    // console.log(ws);\n    let guesses = [];\n    const fsm = new StateMachine({\n        /*\n        beginning - отправляем рейтинг, ждем запроса догадок\n        guess - догадки отправлены, ждем правильный ответ\n        answer - получили ответ, возвращаем все в начало\n        */\n        init: 'begin',\n        transitions: [\n            { name: 'toGuess', from: 'begin', to: 'guess' },\n            { name: 'toBegin', from: 'guess', to: 'begin' },\n        ],\n        methods: {\n            onBegin: function () {\n                ws.send(JSON.stringify({\n                    'psychics': psychics.map(el => el.valueOf()),\n                    state: this.state,\n                }));\n            },\n            onGuess: function () {\n                guesses = psychics.map(el => el.guess());\n                ws.send(JSON.stringify({\n                    'guesses': guesses,\n                    state: this.state,\n                }));\n            },\n            onInvalidTransition: (transition, from, to) => {\n                ws.send(ms.error.onInvalidTransition(transition, from, to));\n            },\n        }\n    });\n\n    ws.on('message', (message) => {\n        let msg = {};\n        try {\n            msg = JSON.parse(message);\n        } catch (e) {\n            ws.send(ms.error.wrongFormat);\n            return;\n        }\n\n        if (msg.step === 'toGuess') {\n            fsm.toGuess();\n        }\n        if (msg.answer !== undefined) {\n            if (msg.answer >= 10 && msg.answer < 100) {\n                const nb = Number(msg.answer);\n                const winIndex = guesses.indexOf(Number(msg.answer));\n                psychics.forEach((gu, index) => {\n                    if (winIndex === index) {\n                        gu.ratingIncrement();\n                    } else {\n                        gu.ratingDecrease();\n                    }\n                });\n                broadcast({ 'psychics': psychics.map(el => el.valueOf()) });\n                fsm.toBegin();\n                console.log(winIndex);\n            } else {\n                ws.send(ms.error.wrongNumber);\n            }\n        }\n        // console.log(message, wss.clients);\n\n\n        // wss.clients.forEach((client) => {\n        //     client.send(message);\n        // })\n    })\n});\n\nconst app = express();\napp.listen(port, function () {\n    console.log(`Server was started on '${port}'`);\n});\n\napp.set('view engine', 'pug');\napp.set('views', path.resolve(__dirname, '../views'));\napp.use(express.static(path.resolve(__dirname, '../assets')));\n\napp.get('/', function (req, res) {\n    // console.log(new Psychic('name', 0));\n    res.render('index');\n});\n\n\n// const config = require('config');\n// const express = require('express');\n// let app = express();\n// let expressWs = require('express-ws')(app);\n//\n// app.set('view engine', 'pug');\n//\n// app.ws('/', (ws, req, next) => {\n//     ws.on('message', function (msg) {\n//         console.log('msg:', msg)\n//     })\n// });\n// const port = config.get('port');\n// app.listen(port, () => {\n//     console.log(`Server was started on '${port}'`);\n// });\n// const Express = require('express');\n// const expressWs = require('express-ws');\n//\n// const app = new Express();\n// expressWs(app);\n// app.set('view engine', 'pug');\n//\n// // app.get('/', function (req, res) {\n// //     res.render('index', {})\n// // });\n//\n// app.ws('/', function(ws, req, next) {\n//     ws.on('message', function(msg) {\n//         console.log('msg:', msg)\n//     })\n// });\n//\n// app().listen(config.get('port'), () => {\n//     // eslint-disable-next-line\n//     console.log(`Server was started on '${port}'`);\n// });\n//\n// // export default app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1558630797518
  },
  "{\"sourceRoot\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"filename\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\\\\server\\\\psychic.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\OpenServer\\\\domains\\\\local.loc\\\\tests\\\\test_edison_trainee\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\psychic.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\psychic.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server\\psychic.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
        "sourceFileName": "psychic.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Psychic =\n/*#__PURE__*/\nfunction () {\n  function Psychic() {\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var ratingInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var guess = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Psychic.guessesFunc;\n\n    _classCallCheck(this, Psychic);\n\n    this.id = Psychic.id();\n    this.name = name;\n    this.ratingCurent = ratingInit;\n    this.guess = guess;\n  }\n\n  _createClass(Psychic, [{\n    key: \"ratingIncrement\",\n    value: function ratingIncrement() {\n      this.ratingCurent += 1;\n    }\n  }, {\n    key: \"ratingDecrease\",\n    value: function ratingDecrease() {\n      this.ratingCurent -= 1;\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return {\n        'name': this.name,\n        'rating': this.rating\n      };\n    }\n  }, {\n    key: \"rating\",\n    get: function get() {\n      return this.ratingCurent;\n    },\n    set: function set(newRating) {\n      this.ratingCurent = newRating < 0 ? 0 : newRating;\n    }\n  }], [{\n    key: \"id\",\n    value: function id() {\n      if (!this.latestId) this.latestId = 1;else this.latestId += 1;\n      return this.latestId;\n    }\n  }, {\n    key: \"guessesFunc\",\n    value: function guessesFunc() {\n      return Psychic.randomInteger(10, 99);\n    }\n  }, {\n    key: \"randomInteger\",\n    value: function randomInteger(min, max) {\n      var rand = min + Math.random() * (max - min + 1);\n      rand = Math.floor(rand);\n      return rand;\n    }\n  }]);\n\n  return Psychic;\n}();\n\nexports[\"default\"] = Psychic;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBzeWNoaWMuanMiXSwibmFtZXMiOlsiUHN5Y2hpYyIsIm5hbWUiLCJyYXRpbmdJbml0IiwiZ3Vlc3MiLCJndWVzc2VzRnVuYyIsImlkIiwicmF0aW5nQ3VyZW50IiwicmF0aW5nIiwibmV3UmF0aW5nIiwibGF0ZXN0SWQiLCJyYW5kb21JbnRlZ2VyIiwibWluIiwibWF4IiwicmFuZCIsIk1hdGgiLCJyYW5kb20iLCJmbG9vciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztJQUFxQkEsTzs7O0FBQ2pCLHFCQUFvRTtBQUFBLFFBQXhEQyxJQUF3RCx1RUFBakQsRUFBaUQ7QUFBQSxRQUE3Q0MsVUFBNkMsdUVBQWhDLENBQWdDO0FBQUEsUUFBN0JDLEtBQTZCLHVFQUFyQkgsT0FBTyxDQUFDSSxXQUFhOztBQUFBOztBQUNoRSxTQUFLQyxFQUFMLEdBQVVMLE9BQU8sQ0FBQ0ssRUFBUixFQUFWO0FBQ0EsU0FBS0osSUFBTCxHQUFZQSxJQUFaO0FBQ0EsU0FBS0ssWUFBTCxHQUFvQkosVUFBcEI7QUFDQSxTQUFLQyxLQUFMLEdBQWFBLEtBQWI7QUFDSDs7OztzQ0FVaUI7QUFDZCxXQUFLRyxZQUFMLElBQXFCLENBQXJCO0FBQ0g7OztxQ0FFZ0I7QUFDYixXQUFLQSxZQUFMLElBQXFCLENBQXJCO0FBQ0g7Ozs4QkFrQlM7QUFDTixhQUFPO0FBQ0gsZ0JBQVEsS0FBS0wsSUFEVjtBQUVILGtCQUFVLEtBQUtNO0FBRlosT0FBUDtBQUlIOzs7d0JBckNZO0FBQ1QsYUFBTyxLQUFLRCxZQUFaO0FBQ0gsSztzQkFFVUUsUyxFQUFXO0FBQ2xCLFdBQUtGLFlBQUwsR0FBcUJFLFNBQVMsR0FBRyxDQUFiLEdBQWtCLENBQWxCLEdBQXNCQSxTQUExQztBQUNIOzs7eUJBVVc7QUFDUixVQUFJLENBQUMsS0FBS0MsUUFBVixFQUFvQixLQUFLQSxRQUFMLEdBQWdCLENBQWhCLENBQXBCLEtBQ0ssS0FBS0EsUUFBTCxJQUFpQixDQUFqQjtBQUNMLGFBQU8sS0FBS0EsUUFBWjtBQUNIOzs7a0NBRW9CO0FBQ2pCLGFBQU9ULE9BQU8sQ0FBQ1UsYUFBUixDQUFzQixFQUF0QixFQUEwQixFQUExQixDQUFQO0FBQ0g7OztrQ0FFb0JDLEcsRUFBS0MsRyxFQUFLO0FBQzNCLFVBQUlDLElBQUksR0FBR0YsR0FBRyxHQUFHRyxJQUFJLENBQUNDLE1BQUwsTUFBaUJILEdBQUcsR0FBR0QsR0FBTixHQUFZLENBQTdCLENBQWpCO0FBQ0FFLE1BQUFBLElBQUksR0FBR0MsSUFBSSxDQUFDRSxLQUFMLENBQVdILElBQVgsQ0FBUDtBQUNBLGFBQU9BLElBQVA7QUFDSCIsInNvdXJjZVJvb3QiOiJEOlxcT3BlblNlcnZlclxcZG9tYWluc1xcbG9jYWwubG9jXFx0ZXN0c1xcdGVzdF9lZGlzb25fdHJhaW5lZVxcc2VydmVyIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHN5Y2hpYyB7XHJcbiAgICBjb25zdHJ1Y3RvcihuYW1lID0gJycsIHJhdGluZ0luaXQgPSAwLCBndWVzcyA9IFBzeWNoaWMuZ3Vlc3Nlc0Z1bmMpIHtcclxuICAgICAgICB0aGlzLmlkID0gUHN5Y2hpYy5pZCgpO1xyXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5yYXRpbmdDdXJlbnQgPSByYXRpbmdJbml0O1xyXG4gICAgICAgIHRoaXMuZ3Vlc3MgPSBndWVzcztcclxuICAgIH1cclxuXHJcbiAgICBnZXQgcmF0aW5nKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnJhdGluZ0N1cmVudDtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgcmF0aW5nKG5ld1JhdGluZykge1xyXG4gICAgICAgIHRoaXMucmF0aW5nQ3VyZW50ID0gKG5ld1JhdGluZyA8IDApID8gMCA6IG5ld1JhdGluZztcclxuICAgIH1cclxuXHJcbiAgICByYXRpbmdJbmNyZW1lbnQoKSB7XHJcbiAgICAgICAgdGhpcy5yYXRpbmdDdXJlbnQgKz0gMTtcclxuICAgIH1cclxuXHJcbiAgICByYXRpbmdEZWNyZWFzZSgpIHtcclxuICAgICAgICB0aGlzLnJhdGluZ0N1cmVudCAtPSAxO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBpZCgpIHtcclxuICAgICAgICBpZiAoIXRoaXMubGF0ZXN0SWQpIHRoaXMubGF0ZXN0SWQgPSAxO1xyXG4gICAgICAgIGVsc2UgdGhpcy5sYXRlc3RJZCArPSAxO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmxhdGVzdElkO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBndWVzc2VzRnVuYygpIHtcclxuICAgICAgICByZXR1cm4gUHN5Y2hpYy5yYW5kb21JbnRlZ2VyKDEwLCA5OSk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIHJhbmRvbUludGVnZXIobWluLCBtYXgpIHtcclxuICAgICAgICB2YXIgcmFuZCA9IG1pbiArIE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluICsgMSk7XHJcbiAgICAgICAgcmFuZCA9IE1hdGguZmxvb3IocmFuZCk7XHJcbiAgICAgICAgcmV0dXJuIHJhbmQ7XHJcbiAgICB9XHJcblxyXG4gICAgdmFsdWVPZigpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAnbmFtZSc6IHRoaXMubmFtZSxcclxuICAgICAgICAgICAgJ3JhdGluZyc6IHRoaXMucmF0aW5nLFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "psychic.js"
      ],
      "names": [
        "Psychic",
        "name",
        "ratingInit",
        "guess",
        "guessesFunc",
        "id",
        "ratingCurent",
        "rating",
        "newRating",
        "latestId",
        "randomInteger",
        "min",
        "max",
        "rand",
        "Math",
        "random",
        "floor"
      ],
      "mappings": ";;;;;;;;;;;;;IAAqBA,O;;;AACjB,qBAAoE;AAAA,QAAxDC,IAAwD,uEAAjD,EAAiD;AAAA,QAA7CC,UAA6C,uEAAhC,CAAgC;AAAA,QAA7BC,KAA6B,uEAArBH,OAAO,CAACI,WAAa;;AAAA;;AAChE,SAAKC,EAAL,GAAUL,OAAO,CAACK,EAAR,EAAV;AACA,SAAKJ,IAAL,GAAYA,IAAZ;AACA,SAAKK,YAAL,GAAoBJ,UAApB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACH;;;;sCAUiB;AACd,WAAKG,YAAL,IAAqB,CAArB;AACH;;;qCAEgB;AACb,WAAKA,YAAL,IAAqB,CAArB;AACH;;;8BAkBS;AACN,aAAO;AACH,gBAAQ,KAAKL,IADV;AAEH,kBAAU,KAAKM;AAFZ,OAAP;AAIH;;;wBArCY;AACT,aAAO,KAAKD,YAAZ;AACH,K;sBAEUE,S,EAAW;AAClB,WAAKF,YAAL,GAAqBE,SAAS,GAAG,CAAb,GAAkB,CAAlB,GAAsBA,SAA1C;AACH;;;yBAUW;AACR,UAAI,CAAC,KAAKC,QAAV,EAAoB,KAAKA,QAAL,GAAgB,CAAhB,CAApB,KACK,KAAKA,QAAL,IAAiB,CAAjB;AACL,aAAO,KAAKA,QAAZ;AACH;;;kCAEoB;AACjB,aAAOT,OAAO,CAACU,aAAR,CAAsB,EAAtB,EAA0B,EAA1B,CAAP;AACH;;;kCAEoBC,G,EAAKC,G,EAAK;AAC3B,UAAIC,IAAI,GAAGF,GAAG,GAAGG,IAAI,CAACC,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAjB;AACAE,MAAAA,IAAI,GAAGC,IAAI,CAACE,KAAL,CAAWH,IAAX,CAAP;AACA,aAAOA,IAAP;AACH",
      "sourceRoot": "D:\\OpenServer\\domains\\local.loc\\tests\\test_edison_trainee\\server",
      "sourcesContent": [
        "export default class Psychic {\r\n    constructor(name = '', ratingInit = 0, guess = Psychic.guessesFunc) {\r\n        this.id = Psychic.id();\r\n        this.name = name;\r\n        this.ratingCurent = ratingInit;\r\n        this.guess = guess;\r\n    }\r\n\r\n    get rating() {\r\n        return this.ratingCurent;\r\n    }\r\n\r\n    set rating(newRating) {\r\n        this.ratingCurent = (newRating < 0) ? 0 : newRating;\r\n    }\r\n\r\n    ratingIncrement() {\r\n        this.ratingCurent += 1;\r\n    }\r\n\r\n    ratingDecrease() {\r\n        this.ratingCurent -= 1;\r\n    }\r\n\r\n    static id() {\r\n        if (!this.latestId) this.latestId = 1;\r\n        else this.latestId += 1;\r\n        return this.latestId;\r\n    }\r\n\r\n    static guessesFunc() {\r\n        return Psychic.randomInteger(10, 99);\r\n    }\r\n\r\n    static randomInteger(min, max) {\r\n        var rand = min + Math.random() * (max - min + 1);\r\n        rand = Math.floor(rand);\r\n        return rand;\r\n    }\r\n\r\n    valueOf() {\r\n        return {\r\n            'name': this.name,\r\n            'rating': this.rating,\r\n        };\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558458024124
  }
}